
CE4951Lab.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000036cc  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  08003890  08003890  00013890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003904  08003904  00020078  2**0
                  CONTENTS
  4 .ARM          00000008  08003904  08003904  00013904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800390c  0800390c  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800390c  0800390c  0001390c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003910  08003910  00013910  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  08003914  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001464  20000078  0800398c  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200014dc  0800398c  000214dc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000d99b  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001fb3  00000000  00000000  0002da43  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b48  00000000  00000000  0002f9f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000a50  00000000  00000000  00030540  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00022bd2  00000000  00000000  00030f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000ca9a  00000000  00000000  00053b62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cfe0e  00000000  00000000  000605fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0013040a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003518  00000000  00000000  00130460  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000078 	.word	0x20000078
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08003878 	.word	0x08003878

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	2000007c 	.word	0x2000007c
 8000200:	08003878 	.word	0x08003878

08000204 <__aeabi_uldivmod>:
 8000204:	b953      	cbnz	r3, 800021c <__aeabi_uldivmod+0x18>
 8000206:	b94a      	cbnz	r2, 800021c <__aeabi_uldivmod+0x18>
 8000208:	2900      	cmp	r1, #0
 800020a:	bf08      	it	eq
 800020c:	2800      	cmpeq	r0, #0
 800020e:	bf1c      	itt	ne
 8000210:	f04f 31ff 	movne.w	r1, #4294967295
 8000214:	f04f 30ff 	movne.w	r0, #4294967295
 8000218:	f000 b96e 	b.w	80004f8 <__aeabi_idiv0>
 800021c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000224:	f000 f806 	bl	8000234 <__udivmoddi4>
 8000228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000230:	b004      	add	sp, #16
 8000232:	4770      	bx	lr

08000234 <__udivmoddi4>:
 8000234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000238:	9d08      	ldr	r5, [sp, #32]
 800023a:	4604      	mov	r4, r0
 800023c:	468c      	mov	ip, r1
 800023e:	2b00      	cmp	r3, #0
 8000240:	f040 8083 	bne.w	800034a <__udivmoddi4+0x116>
 8000244:	428a      	cmp	r2, r1
 8000246:	4617      	mov	r7, r2
 8000248:	d947      	bls.n	80002da <__udivmoddi4+0xa6>
 800024a:	fab2 f282 	clz	r2, r2
 800024e:	b142      	cbz	r2, 8000262 <__udivmoddi4+0x2e>
 8000250:	f1c2 0020 	rsb	r0, r2, #32
 8000254:	fa24 f000 	lsr.w	r0, r4, r0
 8000258:	4091      	lsls	r1, r2
 800025a:	4097      	lsls	r7, r2
 800025c:	ea40 0c01 	orr.w	ip, r0, r1
 8000260:	4094      	lsls	r4, r2
 8000262:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000266:	0c23      	lsrs	r3, r4, #16
 8000268:	fbbc f6f8 	udiv	r6, ip, r8
 800026c:	fa1f fe87 	uxth.w	lr, r7
 8000270:	fb08 c116 	mls	r1, r8, r6, ip
 8000274:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000278:	fb06 f10e 	mul.w	r1, r6, lr
 800027c:	4299      	cmp	r1, r3
 800027e:	d909      	bls.n	8000294 <__udivmoddi4+0x60>
 8000280:	18fb      	adds	r3, r7, r3
 8000282:	f106 30ff 	add.w	r0, r6, #4294967295
 8000286:	f080 8119 	bcs.w	80004bc <__udivmoddi4+0x288>
 800028a:	4299      	cmp	r1, r3
 800028c:	f240 8116 	bls.w	80004bc <__udivmoddi4+0x288>
 8000290:	3e02      	subs	r6, #2
 8000292:	443b      	add	r3, r7
 8000294:	1a5b      	subs	r3, r3, r1
 8000296:	b2a4      	uxth	r4, r4
 8000298:	fbb3 f0f8 	udiv	r0, r3, r8
 800029c:	fb08 3310 	mls	r3, r8, r0, r3
 80002a0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80002a4:	fb00 fe0e 	mul.w	lr, r0, lr
 80002a8:	45a6      	cmp	lr, r4
 80002aa:	d909      	bls.n	80002c0 <__udivmoddi4+0x8c>
 80002ac:	193c      	adds	r4, r7, r4
 80002ae:	f100 33ff 	add.w	r3, r0, #4294967295
 80002b2:	f080 8105 	bcs.w	80004c0 <__udivmoddi4+0x28c>
 80002b6:	45a6      	cmp	lr, r4
 80002b8:	f240 8102 	bls.w	80004c0 <__udivmoddi4+0x28c>
 80002bc:	3802      	subs	r0, #2
 80002be:	443c      	add	r4, r7
 80002c0:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80002c4:	eba4 040e 	sub.w	r4, r4, lr
 80002c8:	2600      	movs	r6, #0
 80002ca:	b11d      	cbz	r5, 80002d4 <__udivmoddi4+0xa0>
 80002cc:	40d4      	lsrs	r4, r2
 80002ce:	2300      	movs	r3, #0
 80002d0:	e9c5 4300 	strd	r4, r3, [r5]
 80002d4:	4631      	mov	r1, r6
 80002d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002da:	b902      	cbnz	r2, 80002de <__udivmoddi4+0xaa>
 80002dc:	deff      	udf	#255	; 0xff
 80002de:	fab2 f282 	clz	r2, r2
 80002e2:	2a00      	cmp	r2, #0
 80002e4:	d150      	bne.n	8000388 <__udivmoddi4+0x154>
 80002e6:	1bcb      	subs	r3, r1, r7
 80002e8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002ec:	fa1f f887 	uxth.w	r8, r7
 80002f0:	2601      	movs	r6, #1
 80002f2:	fbb3 fcfe 	udiv	ip, r3, lr
 80002f6:	0c21      	lsrs	r1, r4, #16
 80002f8:	fb0e 331c 	mls	r3, lr, ip, r3
 80002fc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000300:	fb08 f30c 	mul.w	r3, r8, ip
 8000304:	428b      	cmp	r3, r1
 8000306:	d907      	bls.n	8000318 <__udivmoddi4+0xe4>
 8000308:	1879      	adds	r1, r7, r1
 800030a:	f10c 30ff 	add.w	r0, ip, #4294967295
 800030e:	d202      	bcs.n	8000316 <__udivmoddi4+0xe2>
 8000310:	428b      	cmp	r3, r1
 8000312:	f200 80e9 	bhi.w	80004e8 <__udivmoddi4+0x2b4>
 8000316:	4684      	mov	ip, r0
 8000318:	1ac9      	subs	r1, r1, r3
 800031a:	b2a3      	uxth	r3, r4
 800031c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000320:	fb0e 1110 	mls	r1, lr, r0, r1
 8000324:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000328:	fb08 f800 	mul.w	r8, r8, r0
 800032c:	45a0      	cmp	r8, r4
 800032e:	d907      	bls.n	8000340 <__udivmoddi4+0x10c>
 8000330:	193c      	adds	r4, r7, r4
 8000332:	f100 33ff 	add.w	r3, r0, #4294967295
 8000336:	d202      	bcs.n	800033e <__udivmoddi4+0x10a>
 8000338:	45a0      	cmp	r8, r4
 800033a:	f200 80d9 	bhi.w	80004f0 <__udivmoddi4+0x2bc>
 800033e:	4618      	mov	r0, r3
 8000340:	eba4 0408 	sub.w	r4, r4, r8
 8000344:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000348:	e7bf      	b.n	80002ca <__udivmoddi4+0x96>
 800034a:	428b      	cmp	r3, r1
 800034c:	d909      	bls.n	8000362 <__udivmoddi4+0x12e>
 800034e:	2d00      	cmp	r5, #0
 8000350:	f000 80b1 	beq.w	80004b6 <__udivmoddi4+0x282>
 8000354:	2600      	movs	r6, #0
 8000356:	e9c5 0100 	strd	r0, r1, [r5]
 800035a:	4630      	mov	r0, r6
 800035c:	4631      	mov	r1, r6
 800035e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000362:	fab3 f683 	clz	r6, r3
 8000366:	2e00      	cmp	r6, #0
 8000368:	d14a      	bne.n	8000400 <__udivmoddi4+0x1cc>
 800036a:	428b      	cmp	r3, r1
 800036c:	d302      	bcc.n	8000374 <__udivmoddi4+0x140>
 800036e:	4282      	cmp	r2, r0
 8000370:	f200 80b8 	bhi.w	80004e4 <__udivmoddi4+0x2b0>
 8000374:	1a84      	subs	r4, r0, r2
 8000376:	eb61 0103 	sbc.w	r1, r1, r3
 800037a:	2001      	movs	r0, #1
 800037c:	468c      	mov	ip, r1
 800037e:	2d00      	cmp	r5, #0
 8000380:	d0a8      	beq.n	80002d4 <__udivmoddi4+0xa0>
 8000382:	e9c5 4c00 	strd	r4, ip, [r5]
 8000386:	e7a5      	b.n	80002d4 <__udivmoddi4+0xa0>
 8000388:	f1c2 0320 	rsb	r3, r2, #32
 800038c:	fa20 f603 	lsr.w	r6, r0, r3
 8000390:	4097      	lsls	r7, r2
 8000392:	fa01 f002 	lsl.w	r0, r1, r2
 8000396:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800039a:	40d9      	lsrs	r1, r3
 800039c:	4330      	orrs	r0, r6
 800039e:	0c03      	lsrs	r3, r0, #16
 80003a0:	fbb1 f6fe 	udiv	r6, r1, lr
 80003a4:	fa1f f887 	uxth.w	r8, r7
 80003a8:	fb0e 1116 	mls	r1, lr, r6, r1
 80003ac:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003b0:	fb06 f108 	mul.w	r1, r6, r8
 80003b4:	4299      	cmp	r1, r3
 80003b6:	fa04 f402 	lsl.w	r4, r4, r2
 80003ba:	d909      	bls.n	80003d0 <__udivmoddi4+0x19c>
 80003bc:	18fb      	adds	r3, r7, r3
 80003be:	f106 3cff 	add.w	ip, r6, #4294967295
 80003c2:	f080 808d 	bcs.w	80004e0 <__udivmoddi4+0x2ac>
 80003c6:	4299      	cmp	r1, r3
 80003c8:	f240 808a 	bls.w	80004e0 <__udivmoddi4+0x2ac>
 80003cc:	3e02      	subs	r6, #2
 80003ce:	443b      	add	r3, r7
 80003d0:	1a5b      	subs	r3, r3, r1
 80003d2:	b281      	uxth	r1, r0
 80003d4:	fbb3 f0fe 	udiv	r0, r3, lr
 80003d8:	fb0e 3310 	mls	r3, lr, r0, r3
 80003dc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003e0:	fb00 f308 	mul.w	r3, r0, r8
 80003e4:	428b      	cmp	r3, r1
 80003e6:	d907      	bls.n	80003f8 <__udivmoddi4+0x1c4>
 80003e8:	1879      	adds	r1, r7, r1
 80003ea:	f100 3cff 	add.w	ip, r0, #4294967295
 80003ee:	d273      	bcs.n	80004d8 <__udivmoddi4+0x2a4>
 80003f0:	428b      	cmp	r3, r1
 80003f2:	d971      	bls.n	80004d8 <__udivmoddi4+0x2a4>
 80003f4:	3802      	subs	r0, #2
 80003f6:	4439      	add	r1, r7
 80003f8:	1acb      	subs	r3, r1, r3
 80003fa:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80003fe:	e778      	b.n	80002f2 <__udivmoddi4+0xbe>
 8000400:	f1c6 0c20 	rsb	ip, r6, #32
 8000404:	fa03 f406 	lsl.w	r4, r3, r6
 8000408:	fa22 f30c 	lsr.w	r3, r2, ip
 800040c:	431c      	orrs	r4, r3
 800040e:	fa20 f70c 	lsr.w	r7, r0, ip
 8000412:	fa01 f306 	lsl.w	r3, r1, r6
 8000416:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 800041a:	fa21 f10c 	lsr.w	r1, r1, ip
 800041e:	431f      	orrs	r7, r3
 8000420:	0c3b      	lsrs	r3, r7, #16
 8000422:	fbb1 f9fe 	udiv	r9, r1, lr
 8000426:	fa1f f884 	uxth.w	r8, r4
 800042a:	fb0e 1119 	mls	r1, lr, r9, r1
 800042e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000432:	fb09 fa08 	mul.w	sl, r9, r8
 8000436:	458a      	cmp	sl, r1
 8000438:	fa02 f206 	lsl.w	r2, r2, r6
 800043c:	fa00 f306 	lsl.w	r3, r0, r6
 8000440:	d908      	bls.n	8000454 <__udivmoddi4+0x220>
 8000442:	1861      	adds	r1, r4, r1
 8000444:	f109 30ff 	add.w	r0, r9, #4294967295
 8000448:	d248      	bcs.n	80004dc <__udivmoddi4+0x2a8>
 800044a:	458a      	cmp	sl, r1
 800044c:	d946      	bls.n	80004dc <__udivmoddi4+0x2a8>
 800044e:	f1a9 0902 	sub.w	r9, r9, #2
 8000452:	4421      	add	r1, r4
 8000454:	eba1 010a 	sub.w	r1, r1, sl
 8000458:	b2bf      	uxth	r7, r7
 800045a:	fbb1 f0fe 	udiv	r0, r1, lr
 800045e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000462:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000466:	fb00 f808 	mul.w	r8, r0, r8
 800046a:	45b8      	cmp	r8, r7
 800046c:	d907      	bls.n	800047e <__udivmoddi4+0x24a>
 800046e:	19e7      	adds	r7, r4, r7
 8000470:	f100 31ff 	add.w	r1, r0, #4294967295
 8000474:	d22e      	bcs.n	80004d4 <__udivmoddi4+0x2a0>
 8000476:	45b8      	cmp	r8, r7
 8000478:	d92c      	bls.n	80004d4 <__udivmoddi4+0x2a0>
 800047a:	3802      	subs	r0, #2
 800047c:	4427      	add	r7, r4
 800047e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000482:	eba7 0708 	sub.w	r7, r7, r8
 8000486:	fba0 8902 	umull	r8, r9, r0, r2
 800048a:	454f      	cmp	r7, r9
 800048c:	46c6      	mov	lr, r8
 800048e:	4649      	mov	r1, r9
 8000490:	d31a      	bcc.n	80004c8 <__udivmoddi4+0x294>
 8000492:	d017      	beq.n	80004c4 <__udivmoddi4+0x290>
 8000494:	b15d      	cbz	r5, 80004ae <__udivmoddi4+0x27a>
 8000496:	ebb3 020e 	subs.w	r2, r3, lr
 800049a:	eb67 0701 	sbc.w	r7, r7, r1
 800049e:	fa07 fc0c 	lsl.w	ip, r7, ip
 80004a2:	40f2      	lsrs	r2, r6
 80004a4:	ea4c 0202 	orr.w	r2, ip, r2
 80004a8:	40f7      	lsrs	r7, r6
 80004aa:	e9c5 2700 	strd	r2, r7, [r5]
 80004ae:	2600      	movs	r6, #0
 80004b0:	4631      	mov	r1, r6
 80004b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004b6:	462e      	mov	r6, r5
 80004b8:	4628      	mov	r0, r5
 80004ba:	e70b      	b.n	80002d4 <__udivmoddi4+0xa0>
 80004bc:	4606      	mov	r6, r0
 80004be:	e6e9      	b.n	8000294 <__udivmoddi4+0x60>
 80004c0:	4618      	mov	r0, r3
 80004c2:	e6fd      	b.n	80002c0 <__udivmoddi4+0x8c>
 80004c4:	4543      	cmp	r3, r8
 80004c6:	d2e5      	bcs.n	8000494 <__udivmoddi4+0x260>
 80004c8:	ebb8 0e02 	subs.w	lr, r8, r2
 80004cc:	eb69 0104 	sbc.w	r1, r9, r4
 80004d0:	3801      	subs	r0, #1
 80004d2:	e7df      	b.n	8000494 <__udivmoddi4+0x260>
 80004d4:	4608      	mov	r0, r1
 80004d6:	e7d2      	b.n	800047e <__udivmoddi4+0x24a>
 80004d8:	4660      	mov	r0, ip
 80004da:	e78d      	b.n	80003f8 <__udivmoddi4+0x1c4>
 80004dc:	4681      	mov	r9, r0
 80004de:	e7b9      	b.n	8000454 <__udivmoddi4+0x220>
 80004e0:	4666      	mov	r6, ip
 80004e2:	e775      	b.n	80003d0 <__udivmoddi4+0x19c>
 80004e4:	4630      	mov	r0, r6
 80004e6:	e74a      	b.n	800037e <__udivmoddi4+0x14a>
 80004e8:	f1ac 0c02 	sub.w	ip, ip, #2
 80004ec:	4439      	add	r1, r7
 80004ee:	e713      	b.n	8000318 <__udivmoddi4+0xe4>
 80004f0:	3802      	subs	r0, #2
 80004f2:	443c      	add	r4, r7
 80004f4:	e724      	b.n	8000340 <__udivmoddi4+0x10c>
 80004f6:	bf00      	nop

080004f8 <__aeabi_idiv0>:
 80004f8:	4770      	bx	lr
 80004fa:	bf00      	nop

080004fc <cq_init>:
/*
Initializes a circular queue and returns it
 @ param void
 @ return the initialized circular queue
*/
circular_queue cq_init( void ) {
 80004fc:	b580      	push	{r7, lr}
 80004fe:	f6ad 0d18 	subw	sp, sp, #2072	; 0x818
 8000502:	af00      	add	r7, sp, #0
 8000504:	1d3b      	adds	r3, r7, #4
 8000506:	6018      	str	r0, [r3, #0]

    // create a circular queue with default values
    circular_queue cq = {
 8000508:	f107 0308 	add.w	r3, r7, #8
 800050c:	4618      	mov	r0, r3
 800050e:	f44f 6301 	mov.w	r3, #2064	; 0x810
 8000512:	461a      	mov	r2, r3
 8000514:	2100      	movs	r1, #0
 8000516:	f002 fc8a 	bl	8002e2e <memset>
 800051a:	f107 0308 	add.w	r3, r7, #8
 800051e:	2201      	movs	r2, #1
 8000520:	609a      	str	r2, [r3, #8]
            .isempty = DEFAULT_ISEMPTY,
            .isfull = DEFAULT_ISFULL
    };

    // return the circular queue
    return cq;
 8000522:	1d3b      	adds	r3, r7, #4
 8000524:	681a      	ldr	r2, [r3, #0]
 8000526:	f107 0308 	add.w	r3, r7, #8
 800052a:	4610      	mov	r0, r2
 800052c:	4619      	mov	r1, r3
 800052e:	f44f 6301 	mov.w	r3, #2064	; 0x810
 8000532:	461a      	mov	r2, r3
 8000534:	f002 fc6d 	bl	8002e12 <memcpy>
}
 8000538:	1d3b      	adds	r3, r7, #4
 800053a:	6818      	ldr	r0, [r3, #0]
 800053c:	f607 0718 	addw	r7, r7, #2072	; 0x818
 8000540:	46bd      	mov	sp, r7
 8000542:	bd80      	pop	{r7, pc}

08000544 <cq_push>:
Pushes an element into the circular queue
@ param cq - the circular queue to push into
@ param c - the character to push into the queue
@ return void
*/
void cq_push( circular_queue * cq, char c ) {
 8000544:	b480      	push	{r7}
 8000546:	b083      	sub	sp, #12
 8000548:	af00      	add	r7, sp, #0
 800054a:	6078      	str	r0, [r7, #4]
 800054c:	460b      	mov	r3, r1
 800054e:	70fb      	strb	r3, [r7, #3]

    // push the character into the queue then increment the pusher
    cq->buffer[(cq->pusher)++] = c;
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	1c59      	adds	r1, r3, #1
 8000556:	687a      	ldr	r2, [r7, #4]
 8000558:	6011      	str	r1, [r2, #0]
 800055a:	687a      	ldr	r2, [r7, #4]
 800055c:	4413      	add	r3, r2
 800055e:	78fa      	ldrb	r2, [r7, #3]
 8000560:	741a      	strb	r2, [r3, #16]

    // if the pusher passes the end of the buffer, put it back at the start of the buffer
    if ( cq->pusher == CIRCULAR_QUEUE_SIZE ) cq->pusher = 0;
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800056a:	d102      	bne.n	8000572 <cq_push+0x2e>
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	2200      	movs	r2, #0
 8000570:	601a      	str	r2, [r3, #0]

    // set the full flag if the pusher moves to the same position as the puller
    cq->isfull = ( cq->pusher == cq->puller );
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	681a      	ldr	r2, [r3, #0]
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	685b      	ldr	r3, [r3, #4]
 800057a:	429a      	cmp	r2, r3
 800057c:	bf0c      	ite	eq
 800057e:	2301      	moveq	r3, #1
 8000580:	2300      	movne	r3, #0
 8000582:	b2db      	uxtb	r3, r3
 8000584:	461a      	mov	r2, r3
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	60da      	str	r2, [r3, #12]

    // clear the empty flag
    cq->isempty = 0;
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	2200      	movs	r2, #0
 800058e:	609a      	str	r2, [r3, #8]
}
 8000590:	bf00      	nop
 8000592:	370c      	adds	r7, #12
 8000594:	46bd      	mov	sp, r7
 8000596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059a:	4770      	bx	lr

0800059c <cq_pull>:
/*
Pulls the next element from the circular queue
@ param cq - the circular queue to pull from
@ return the character from the queue
*/
char cq_pull( circular_queue * cq ) {
 800059c:	b480      	push	{r7}
 800059e:	b085      	sub	sp, #20
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	6078      	str	r0, [r7, #4]

    // pull the character out of the queue and increment the puller
    char c = cq->buffer[(cq->puller)++];
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	685b      	ldr	r3, [r3, #4]
 80005a8:	1c59      	adds	r1, r3, #1
 80005aa:	687a      	ldr	r2, [r7, #4]
 80005ac:	6051      	str	r1, [r2, #4]
 80005ae:	687a      	ldr	r2, [r7, #4]
 80005b0:	4413      	add	r3, r2
 80005b2:	7c1b      	ldrb	r3, [r3, #16]
 80005b4:	73fb      	strb	r3, [r7, #15]

    // if the pusher passes the end of the buffer, put it back at the start of the buffer
    if ( cq->puller == CIRCULAR_QUEUE_SIZE ) cq->puller = 0;
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	685b      	ldr	r3, [r3, #4]
 80005ba:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80005be:	d102      	bne.n	80005c6 <cq_pull+0x2a>
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	2200      	movs	r2, #0
 80005c4:	605a      	str	r2, [r3, #4]

    // set the empty flag if the puller moves to the same position as the pusher
    cq->isempty = ( cq->puller == cq->pusher );
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	685a      	ldr	r2, [r3, #4]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	429a      	cmp	r2, r3
 80005d0:	bf0c      	ite	eq
 80005d2:	2301      	moveq	r3, #1
 80005d4:	2300      	movne	r3, #0
 80005d6:	b2db      	uxtb	r3, r3
 80005d8:	461a      	mov	r2, r3
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	609a      	str	r2, [r3, #8]

    // clear the full flag
    cq->isfull = 0;
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	2200      	movs	r2, #0
 80005e2:	60da      	str	r2, [r3, #12]

    // return the character
    return c;
 80005e4:	7bfb      	ldrb	r3, [r7, #15]
}
 80005e6:	4618      	mov	r0, r3
 80005e8:	3714      	adds	r7, #20
 80005ea:	46bd      	mov	sp, r7
 80005ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f0:	4770      	bx	lr

080005f2 <cq_isempty>:
/*
Determines whether a circular queue is empty or not
@ param cq - the circular queue to analyze
@ return 1 if the circular queue is empty, 0 otherwise
*/
int cq_isempty( circular_queue * cq ) {
 80005f2:	b480      	push	{r7}
 80005f4:	b083      	sub	sp, #12
 80005f6:	af00      	add	r7, sp, #0
 80005f8:	6078      	str	r0, [r7, #4]
    return cq->isempty;
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	689b      	ldr	r3, [r3, #8]
}
 80005fe:	4618      	mov	r0, r3
 8000600:	370c      	adds	r7, #12
 8000602:	46bd      	mov	sp, r7
 8000604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000608:	4770      	bx	lr

0800060a <cq_isfull>:
/*
Determines whether a circular queue is full or not
@ param cq - the circular queue to analyze
@ return 1 if the circular queue is full, 0 otherwise
*/
int cq_isfull( circular_queue * cq ) {
 800060a:	b480      	push	{r7}
 800060c:	b083      	sub	sp, #12
 800060e:	af00      	add	r7, sp, #0
 8000610:	6078      	str	r0, [r7, #4]
    return cq->isfull;
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	68db      	ldr	r3, [r3, #12]
}
 8000616:	4618      	mov	r0, r3
 8000618:	370c      	adds	r7, #12
 800061a:	46bd      	mov	sp, r7
 800061c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000620:	4770      	bx	lr
	...

08000624 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 8000624:	b580      	push	{r7, lr}
 8000626:	b082      	sub	sp, #8
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
	if (htim->Instance == TIM1){
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a25      	ldr	r2, [pc, #148]	; (80006c8 <HAL_TIM_PeriodElapsedCallback+0xa4>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d13c      	bne.n	80006b0 <HAL_TIM_PeriodElapsedCallback+0x8c>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 8000636:	2201      	movs	r2, #1
 8000638:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800063c:	4823      	ldr	r0, [pc, #140]	; (80006cc <HAL_TIM_PeriodElapsedCallback+0xa8>)
 800063e:	f001 f9b9 	bl	80019b4 <HAL_GPIO_WritePin>

		if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_9) == GPIO_PIN_RESET){
 8000642:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000646:	4822      	ldr	r0, [pc, #136]	; (80006d0 <HAL_TIM_PeriodElapsedCallback+0xac>)
 8000648:	f001 f99c 	bl	8001984 <HAL_GPIO_ReadPin>
 800064c:	4603      	mov	r3, r0
 800064e:	2b00      	cmp	r3, #0
 8000650:	d115      	bne.n	800067e <HAL_TIM_PeriodElapsedCallback+0x5a>
			currentState = COLLISION;
 8000652:	4b20      	ldr	r3, [pc, #128]	; (80006d4 <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8000654:	2202      	movs	r2, #2
 8000656:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_SET);
 8000658:	2201      	movs	r2, #1
 800065a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800065e:	481b      	ldr	r0, [pc, #108]	; (80006cc <HAL_TIM_PeriodElapsedCallback+0xa8>)
 8000660:	f001 f9a8 	bl	80019b4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET);
 8000664:	2200      	movs	r2, #0
 8000666:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800066a:	4818      	ldr	r0, [pc, #96]	; (80006cc <HAL_TIM_PeriodElapsedCallback+0xa8>)
 800066c:	f001 f9a2 	bl	80019b4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET);
 8000670:	2200      	movs	r2, #0
 8000672:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000676:	4815      	ldr	r0, [pc, #84]	; (80006cc <HAL_TIM_PeriodElapsedCallback+0xa8>)
 8000678:	f001 f99c 	bl	80019b4 <HAL_GPIO_WritePin>
		}
	}
	else if (htim->Instance == TIM8){
		wait_trans = 0;
	}
}
 800067c:	e020      	b.n	80006c0 <HAL_TIM_PeriodElapsedCallback+0x9c>
			currentState = IDLE;
 800067e:	4b15      	ldr	r3, [pc, #84]	; (80006d4 <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8000680:	2201      	movs	r2, #1
 8000682:	701a      	strb	r2, [r3, #0]
			firstEdge = 1;
 8000684:	4b14      	ldr	r3, [pc, #80]	; (80006d8 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8000686:	2201      	movs	r2, #1
 8000688:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 800068a:	2200      	movs	r2, #0
 800068c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000690:	480e      	ldr	r0, [pc, #56]	; (80006cc <HAL_TIM_PeriodElapsedCallback+0xa8>)
 8000692:	f001 f98f 	bl	80019b4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET);
 8000696:	2200      	movs	r2, #0
 8000698:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800069c:	480b      	ldr	r0, [pc, #44]	; (80006cc <HAL_TIM_PeriodElapsedCallback+0xa8>)
 800069e:	f001 f989 	bl	80019b4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET);
 80006a2:	2201      	movs	r2, #1
 80006a4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80006a8:	4808      	ldr	r0, [pc, #32]	; (80006cc <HAL_TIM_PeriodElapsedCallback+0xa8>)
 80006aa:	f001 f983 	bl	80019b4 <HAL_GPIO_WritePin>
}
 80006ae:	e007      	b.n	80006c0 <HAL_TIM_PeriodElapsedCallback+0x9c>
	else if (htim->Instance == TIM8){
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	4a09      	ldr	r2, [pc, #36]	; (80006dc <HAL_TIM_PeriodElapsedCallback+0xb8>)
 80006b6:	4293      	cmp	r3, r2
 80006b8:	d102      	bne.n	80006c0 <HAL_TIM_PeriodElapsedCallback+0x9c>
		wait_trans = 0;
 80006ba:	4b09      	ldr	r3, [pc, #36]	; (80006e0 <HAL_TIM_PeriodElapsedCallback+0xbc>)
 80006bc:	2200      	movs	r2, #0
 80006be:	601a      	str	r2, [r3, #0]
}
 80006c0:	bf00      	nop
 80006c2:	3708      	adds	r7, #8
 80006c4:	46bd      	mov	sp, r7
 80006c6:	bd80      	pop	{r7, pc}
 80006c8:	40010000 	.word	0x40010000
 80006cc:	40020400 	.word	0x40020400
 80006d0:	40020800 	.word	0x40020800
 80006d4:	2000130c 	.word	0x2000130c
 80006d8:	20000000 	.word	0x20000000
 80006dc:	40010400 	.word	0x40010400
 80006e0:	200014c4 	.word	0x200014c4

080006e4 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80006e4:	b580      	push	{r7, lr}
 80006e6:	b084      	sub	sp, #16
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	4603      	mov	r3, r0
 80006ec:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == GPIO_PIN_9){
 80006ee:	88fb      	ldrh	r3, [r7, #6]
 80006f0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006f4:	d162      	bne.n	80007bc <HAL_GPIO_EXTI_Callback+0xd8>
		if(TIM2->SR & TIM_SR_UIF){
 80006f6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80006fa:	691b      	ldr	r3, [r3, #16]
 80006fc:	f003 0301 	and.w	r3, r3, #1
 8000700:	2b00      	cmp	r3, #0
 8000702:	d05b      	beq.n	80007bc <HAL_GPIO_EXTI_Callback+0xd8>
			TIM2->CNT = 0;
 8000704:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000708:	2200      	movs	r2, #0
 800070a:	625a      	str	r2, [r3, #36]	; 0x24
			TIM2->SR &= ~TIM_SR_UIF;
 800070c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000710:	691b      	ldr	r3, [r3, #16]
 8000712:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000716:	f023 0301 	bic.w	r3, r3, #1
 800071a:	6113      	str	r3, [r2, #16]
			uint8_t value = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_9);
 800071c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000720:	4828      	ldr	r0, [pc, #160]	; (80007c4 <HAL_GPIO_EXTI_Callback+0xe0>)
 8000722:	f001 f92f 	bl	8001984 <HAL_GPIO_ReadPin>
 8000726:	4603      	mov	r3, r0
 8000728:	73fb      	strb	r3, [r7, #15]
			if (bitCount ==7) {receiveBuffer[byteCount] = 0;}
 800072a:	4b27      	ldr	r3, [pc, #156]	; (80007c8 <HAL_GPIO_EXTI_Callback+0xe4>)
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	2b07      	cmp	r3, #7
 8000730:	d104      	bne.n	800073c <HAL_GPIO_EXTI_Callback+0x58>
 8000732:	4b26      	ldr	r3, [pc, #152]	; (80007cc <HAL_GPIO_EXTI_Callback+0xe8>)
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	4a26      	ldr	r2, [pc, #152]	; (80007d0 <HAL_GPIO_EXTI_Callback+0xec>)
 8000738:	2100      	movs	r1, #0
 800073a:	54d1      	strb	r1, [r2, r3]
			receiveBuffer[byteCount] |= value<<bitCount--;
 800073c:	7bfa      	ldrb	r2, [r7, #15]
 800073e:	4b22      	ldr	r3, [pc, #136]	; (80007c8 <HAL_GPIO_EXTI_Callback+0xe4>)
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	1e59      	subs	r1, r3, #1
 8000744:	4820      	ldr	r0, [pc, #128]	; (80007c8 <HAL_GPIO_EXTI_Callback+0xe4>)
 8000746:	6001      	str	r1, [r0, #0]
 8000748:	fa02 f103 	lsl.w	r1, r2, r3
 800074c:	4b1f      	ldr	r3, [pc, #124]	; (80007cc <HAL_GPIO_EXTI_Callback+0xe8>)
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	4a1f      	ldr	r2, [pc, #124]	; (80007d0 <HAL_GPIO_EXTI_Callback+0xec>)
 8000752:	5cd3      	ldrb	r3, [r2, r3]
 8000754:	b25a      	sxtb	r2, r3
 8000756:	b24b      	sxtb	r3, r1
 8000758:	4313      	orrs	r3, r2
 800075a:	b25a      	sxtb	r2, r3
 800075c:	4b1b      	ldr	r3, [pc, #108]	; (80007cc <HAL_GPIO_EXTI_Callback+0xe8>)
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	b2d1      	uxtb	r1, r2
 8000762:	4a1b      	ldr	r2, [pc, #108]	; (80007d0 <HAL_GPIO_EXTI_Callback+0xec>)
 8000764:	54d1      	strb	r1, [r2, r3]

			if(bitCount < 0)
 8000766:	4b18      	ldr	r3, [pc, #96]	; (80007c8 <HAL_GPIO_EXTI_Callback+0xe4>)
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	2b00      	cmp	r3, #0
 800076c:	da07      	bge.n	800077e <HAL_GPIO_EXTI_Callback+0x9a>
			{
				//printf("%c", receiveBuffer[byteCount]);
				byteCount++;
 800076e:	4b17      	ldr	r3, [pc, #92]	; (80007cc <HAL_GPIO_EXTI_Callback+0xe8>)
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	3301      	adds	r3, #1
 8000774:	4a15      	ldr	r2, [pc, #84]	; (80007cc <HAL_GPIO_EXTI_Callback+0xe8>)
 8000776:	6013      	str	r3, [r2, #0]
				bitCount = 7;
 8000778:	4b13      	ldr	r3, [pc, #76]	; (80007c8 <HAL_GPIO_EXTI_Callback+0xe4>)
 800077a:	2207      	movs	r2, #7
 800077c:	601a      	str	r2, [r3, #0]
			}
			if(byteCount == 30)
 800077e:	4b13      	ldr	r3, [pc, #76]	; (80007cc <HAL_GPIO_EXTI_Callback+0xe8>)
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	2b1e      	cmp	r3, #30
 8000784:	d102      	bne.n	800078c <HAL_GPIO_EXTI_Callback+0xa8>
				byteCount = 0;
 8000786:	4b11      	ldr	r3, [pc, #68]	; (80007cc <HAL_GPIO_EXTI_Callback+0xe8>)
 8000788:	2200      	movs	r2, #0
 800078a:	601a      	str	r2, [r3, #0]

			currentState = BUSY;
 800078c:	4b11      	ldr	r3, [pc, #68]	; (80007d4 <HAL_GPIO_EXTI_Callback+0xf0>)
 800078e:	2200      	movs	r2, #0
 8000790:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 8000792:	2200      	movs	r2, #0
 8000794:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000798:	480f      	ldr	r0, [pc, #60]	; (80007d8 <HAL_GPIO_EXTI_Callback+0xf4>)
 800079a:	f001 f90b 	bl	80019b4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 800079e:	2201      	movs	r2, #1
 80007a0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80007a4:	480c      	ldr	r0, [pc, #48]	; (80007d8 <HAL_GPIO_EXTI_Callback+0xf4>)
 80007a6:	f001 f905 	bl	80019b4 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET);
 80007aa:	2200      	movs	r2, #0
 80007ac:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80007b0:	4809      	ldr	r0, [pc, #36]	; (80007d8 <HAL_GPIO_EXTI_Callback+0xf4>)
 80007b2:	f001 f8ff 	bl	80019b4 <HAL_GPIO_WritePin>
			TIM1->CNT = 0;
 80007b6:	4b09      	ldr	r3, [pc, #36]	; (80007dc <HAL_GPIO_EXTI_Callback+0xf8>)
 80007b8:	2200      	movs	r2, #0
 80007ba:	625a      	str	r2, [r3, #36]	; 0x24

		}

	}
}
 80007bc:	bf00      	nop
 80007be:	3710      	adds	r7, #16
 80007c0:	46bd      	mov	sp, r7
 80007c2:	bd80      	pop	{r7, pc}
 80007c4:	40020800 	.word	0x40020800
 80007c8:	20000004 	.word	0x20000004
 80007cc:	20000094 	.word	0x20000094
 80007d0:	200014a4 	.word	0x200014a4
 80007d4:	2000130c 	.word	0x2000130c
 80007d8:	40020400 	.word	0x40020400
 80007dc:	40010000 	.word	0x40010000

080007e0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80007e0:	b580      	push	{r7, lr}
 80007e2:	b088      	sub	sp, #32
 80007e4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80007e6:	f000 fd9b 	bl	8001320 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80007ea:	f000 f915 	bl	8000a18 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80007ee:	f000 fa6b 	bl	8000cc8 <MX_GPIO_Init>
  MX_TIM1_Init();
 80007f2:	f000 f97d 	bl	8000af0 <MX_TIM1_Init>
  MX_TIM8_Init();
 80007f6:	f000 fa17 	bl	8000c28 <MX_TIM8_Init>
  MX_TIM2_Init();
 80007fa:	f000 f9c9 	bl	8000b90 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim1);
 80007fe:	4877      	ldr	r0, [pc, #476]	; (80009dc <main+0x1fc>)
 8000800:	f001 fe3a 	bl	8002478 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim8);
 8000804:	4876      	ldr	r0, [pc, #472]	; (80009e0 <main+0x200>)
 8000806:	f001 fe37 	bl	8002478 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim2);
 800080a:	4876      	ldr	r0, [pc, #472]	; (80009e4 <main+0x204>)
 800080c:	f001 fe34 	bl	8002478 <HAL_TIM_Base_Start_IT>

  uart_init(57600,F_CPU);
 8000810:	4975      	ldr	r1, [pc, #468]	; (80009e8 <main+0x208>)
 8000812:	f44f 4061 	mov.w	r0, #57600	; 0xe100
 8000816:	f000 fc13 	bl	8001040 <uart_init>
  //printf("Hello\n");

  uint8_t endTransmitData = 0;
 800081a:	2300      	movs	r3, #0
 800081c:	77fb      	strb	r3, [r7, #31]
  int readCount = 0;
 800081e:	2300      	movs	r3, #0
 8000820:	61bb      	str	r3, [r7, #24]
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
LOOP_START:
	  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8,GPIO_PIN_SET);
 8000822:	2201      	movs	r2, #1
 8000824:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000828:	4870      	ldr	r0, [pc, #448]	; (80009ec <main+0x20c>)
 800082a:	f001 f8c3 	bl	80019b4 <HAL_GPIO_WritePin>

	  //int readCount = scanf("%s",buffer);
	  char c;

	  if(!uart_isempty())
 800082e:	f000 fceb 	bl	8001208 <uart_isempty>
 8000832:	4603      	mov	r3, r0
 8000834:	2b00      	cmp	r3, #0
 8000836:	d114      	bne.n	8000862 <main+0x82>
	  {
		  c = uart_getc();
 8000838:	f000 fcf0 	bl	800121c <uart_getc>
 800083c:	4603      	mov	r3, r0
 800083e:	71fb      	strb	r3, [r7, #7]
		  if(c == '\r')
 8000840:	79fb      	ldrb	r3, [r7, #7]
 8000842:	2b0d      	cmp	r3, #13
 8000844:	d107      	bne.n	8000856 <main+0x76>
		  {
			  endTransmitData = 1;
 8000846:	2301      	movs	r3, #1
 8000848:	77fb      	strb	r3, [r7, #31]
			  buffer[readCount] = 0;
 800084a:	4a69      	ldr	r2, [pc, #420]	; (80009f0 <main+0x210>)
 800084c:	69bb      	ldr	r3, [r7, #24]
 800084e:	4413      	add	r3, r2
 8000850:	2200      	movs	r2, #0
 8000852:	701a      	strb	r2, [r3, #0]
 8000854:	e005      	b.n	8000862 <main+0x82>
		  }
		  else
		  {
			  buffer[readCount++] = c;
 8000856:	69bb      	ldr	r3, [r7, #24]
 8000858:	1c5a      	adds	r2, r3, #1
 800085a:	61ba      	str	r2, [r7, #24]
 800085c:	4964      	ldr	r1, [pc, #400]	; (80009f0 <main+0x210>)
 800085e:	79fa      	ldrb	r2, [r7, #7]
 8000860:	54ca      	strb	r2, [r1, r3]
		  }
	  }
	  //int readCount = 1;
	  //buffer[0] = 0xFF;
	  //buffer[1] = 0x00;
	  int length = readCount;
 8000862:	69bb      	ldr	r3, [r7, #24]
 8000864:	603b      	str	r3, [r7, #0]
	  //send data
	  if (endTransmitData){
 8000866:	7ffb      	ldrb	r3, [r7, #31]
 8000868:	2b00      	cmp	r3, #0
 800086a:	f000 80a2 	beq.w	80009b2 <main+0x1d2>
		  endTransmitData = 0;
 800086e:	2300      	movs	r3, #0
 8000870:	77fb      	strb	r3, [r7, #31]
		  readCount = 0;
 8000872:	2300      	movs	r3, #0
 8000874:	61bb      	str	r3, [r7, #24]
//		  printf("read count: %d, buffer: %s\n", length, buffer);
		  for (int i = 0; i < length;i++){
 8000876:	2300      	movs	r3, #0
 8000878:	617b      	str	r3, [r7, #20]
 800087a:	e041      	b.n	8000900 <main+0x120>
//			  printf("Buffer:"BYTE_TO_BINARY_PATTERN "\n",BYTE_TO_BINARY(*(buffer+i)));
			  output[i] = 0;
 800087c:	4a5d      	ldr	r2, [pc, #372]	; (80009f4 <main+0x214>)
 800087e:	697b      	ldr	r3, [r7, #20]
 8000880:	2100      	movs	r1, #0
 8000882:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			  for (int j = 0; j < 8; j++){
 8000886:	2300      	movs	r3, #0
 8000888:	613b      	str	r3, [r7, #16]
 800088a:	e033      	b.n	80008f4 <main+0x114>
				  if (buffer[i] & 0b1<<j)
 800088c:	4a58      	ldr	r2, [pc, #352]	; (80009f0 <main+0x210>)
 800088e:	697b      	ldr	r3, [r7, #20]
 8000890:	4413      	add	r3, r2
 8000892:	781b      	ldrb	r3, [r3, #0]
 8000894:	461a      	mov	r2, r3
 8000896:	693b      	ldr	r3, [r7, #16]
 8000898:	fa42 f303 	asr.w	r3, r2, r3
 800089c:	f003 0301 	and.w	r3, r3, #1
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d012      	beq.n	80008ca <main+0xea>
					  output[i] |= 0b01<<((j*2));
 80008a4:	4a53      	ldr	r2, [pc, #332]	; (80009f4 <main+0x214>)
 80008a6:	697b      	ldr	r3, [r7, #20]
 80008a8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80008ac:	b21a      	sxth	r2, r3
 80008ae:	693b      	ldr	r3, [r7, #16]
 80008b0:	005b      	lsls	r3, r3, #1
 80008b2:	2101      	movs	r1, #1
 80008b4:	fa01 f303 	lsl.w	r3, r1, r3
 80008b8:	b21b      	sxth	r3, r3
 80008ba:	4313      	orrs	r3, r2
 80008bc:	b21b      	sxth	r3, r3
 80008be:	b299      	uxth	r1, r3
 80008c0:	4a4c      	ldr	r2, [pc, #304]	; (80009f4 <main+0x214>)
 80008c2:	697b      	ldr	r3, [r7, #20]
 80008c4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80008c8:	e011      	b.n	80008ee <main+0x10e>
				  else
					  output[i] |= 0b10<<((j*2));
 80008ca:	4a4a      	ldr	r2, [pc, #296]	; (80009f4 <main+0x214>)
 80008cc:	697b      	ldr	r3, [r7, #20]
 80008ce:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80008d2:	b21a      	sxth	r2, r3
 80008d4:	693b      	ldr	r3, [r7, #16]
 80008d6:	005b      	lsls	r3, r3, #1
 80008d8:	2102      	movs	r1, #2
 80008da:	fa01 f303 	lsl.w	r3, r1, r3
 80008de:	b21b      	sxth	r3, r3
 80008e0:	4313      	orrs	r3, r2
 80008e2:	b21b      	sxth	r3, r3
 80008e4:	b299      	uxth	r1, r3
 80008e6:	4a43      	ldr	r2, [pc, #268]	; (80009f4 <main+0x214>)
 80008e8:	697b      	ldr	r3, [r7, #20]
 80008ea:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			  for (int j = 0; j < 8; j++){
 80008ee:	693b      	ldr	r3, [r7, #16]
 80008f0:	3301      	adds	r3, #1
 80008f2:	613b      	str	r3, [r7, #16]
 80008f4:	693b      	ldr	r3, [r7, #16]
 80008f6:	2b07      	cmp	r3, #7
 80008f8:	ddc8      	ble.n	800088c <main+0xac>
		  for (int i = 0; i < length;i++){
 80008fa:	697b      	ldr	r3, [r7, #20]
 80008fc:	3301      	adds	r3, #1
 80008fe:	617b      	str	r3, [r7, #20]
 8000900:	697a      	ldr	r2, [r7, #20]
 8000902:	683b      	ldr	r3, [r7, #0]
 8000904:	429a      	cmp	r2, r3
 8000906:	dbb9      	blt.n	800087c <main+0x9c>
		  }
//		  for (int i = 0; i < length;i++){
//				  printf("Man:"BYTE_TO_BINARY_PATTERN BYTE_TO_BINARY_PATTERN "\n",
//						  BYTE_TO_BINARY(output[i]>>8),BYTE_TO_BINARY(output[i]));
//		  }
		  while (currentState == COLLISION || currentState == BUSY);
 8000908:	bf00      	nop
 800090a:	4b3b      	ldr	r3, [pc, #236]	; (80009f8 <main+0x218>)
 800090c:	781b      	ldrb	r3, [r3, #0]
 800090e:	2b02      	cmp	r3, #2
 8000910:	d0fb      	beq.n	800090a <main+0x12a>
 8000912:	4b39      	ldr	r3, [pc, #228]	; (80009f8 <main+0x218>)
 8000914:	781b      	ldrb	r3, [r3, #0]
 8000916:	2b00      	cmp	r3, #0
 8000918:	d0f7      	beq.n	800090a <main+0x12a>
		  currentState = BUSY;
 800091a:	4b37      	ldr	r3, [pc, #220]	; (80009f8 <main+0x218>)
 800091c:	2200      	movs	r2, #0
 800091e:	701a      	strb	r2, [r3, #0]
		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 8000920:	2200      	movs	r2, #0
 8000922:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000926:	4835      	ldr	r0, [pc, #212]	; (80009fc <main+0x21c>)
 8000928:	f001 f844 	bl	80019b4 <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 800092c:	2201      	movs	r2, #1
 800092e:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000932:	4832      	ldr	r0, [pc, #200]	; (80009fc <main+0x21c>)
 8000934:	f001 f83e 	bl	80019b4 <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET);
 8000938:	2200      	movs	r2, #0
 800093a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800093e:	482f      	ldr	r0, [pc, #188]	; (80009fc <main+0x21c>)
 8000940:	f001 f838 	bl	80019b4 <HAL_GPIO_WritePin>
			  for (int i = 0; i < length;i++){
 8000944:	2300      	movs	r3, #0
 8000946:	60fb      	str	r3, [r7, #12]
 8000948:	e02d      	b.n	80009a6 <main+0x1c6>
				  for (int j = 15; j >= 0; j--){
 800094a:	230f      	movs	r3, #15
 800094c:	60bb      	str	r3, [r7, #8]
 800094e:	e024      	b.n	800099a <main+0x1ba>
					  if (currentState == COLLISION)
 8000950:	4b29      	ldr	r3, [pc, #164]	; (80009f8 <main+0x218>)
 8000952:	781b      	ldrb	r3, [r3, #0]
 8000954:	2b02      	cmp	r3, #2
 8000956:	d100      	bne.n	800095a <main+0x17a>
						  goto LOOP_START;
 8000958:	e763      	b.n	8000822 <main+0x42>
					  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, (output[i] & 1<<j)? GPIO_PIN_SET:GPIO_PIN_RESET);
 800095a:	4a26      	ldr	r2, [pc, #152]	; (80009f4 <main+0x214>)
 800095c:	68fb      	ldr	r3, [r7, #12]
 800095e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000962:	461a      	mov	r2, r3
 8000964:	68bb      	ldr	r3, [r7, #8]
 8000966:	fa42 f303 	asr.w	r3, r2, r3
 800096a:	b2db      	uxtb	r3, r3
 800096c:	f003 0301 	and.w	r3, r3, #1
 8000970:	b2db      	uxtb	r3, r3
 8000972:	461a      	mov	r2, r3
 8000974:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000978:	481c      	ldr	r0, [pc, #112]	; (80009ec <main+0x20c>)
 800097a:	f001 f81b 	bl	80019b4 <HAL_GPIO_WritePin>
					  TIM1->CNT = 0;
 800097e:	4b20      	ldr	r3, [pc, #128]	; (8000a00 <main+0x220>)
 8000980:	2200      	movs	r2, #0
 8000982:	625a      	str	r2, [r3, #36]	; 0x24
					  DELAY_500MS
 8000984:	4b1f      	ldr	r3, [pc, #124]	; (8000a04 <main+0x224>)
 8000986:	2201      	movs	r2, #1
 8000988:	601a      	str	r2, [r3, #0]
 800098a:	bf00      	nop
 800098c:	4b1d      	ldr	r3, [pc, #116]	; (8000a04 <main+0x224>)
 800098e:	681b      	ldr	r3, [r3, #0]
 8000990:	2b01      	cmp	r3, #1
 8000992:	d0fb      	beq.n	800098c <main+0x1ac>
				  for (int j = 15; j >= 0; j--){
 8000994:	68bb      	ldr	r3, [r7, #8]
 8000996:	3b01      	subs	r3, #1
 8000998:	60bb      	str	r3, [r7, #8]
 800099a:	68bb      	ldr	r3, [r7, #8]
 800099c:	2b00      	cmp	r3, #0
 800099e:	dad7      	bge.n	8000950 <main+0x170>
			  for (int i = 0; i < length;i++){
 80009a0:	68fb      	ldr	r3, [r7, #12]
 80009a2:	3301      	adds	r3, #1
 80009a4:	60fb      	str	r3, [r7, #12]
 80009a6:	68fa      	ldr	r2, [r7, #12]
 80009a8:	683b      	ldr	r3, [r7, #0]
 80009aa:	429a      	cmp	r2, r3
 80009ac:	dbcd      	blt.n	800094a <main+0x16a>
			  }


//		  output_L = length*16;
//		  printf("bits To Send: %d \n", output_L);
		  HAL_NVIC_SystemReset();
 80009ae:	f000 fe44 	bl	800163a <HAL_NVIC_SystemReset>

	  }

	  // Print received message
	  if(byteCount)
 80009b2:	4b15      	ldr	r3, [pc, #84]	; (8000a08 <main+0x228>)
 80009b4:	681b      	ldr	r3, [r3, #0]
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	f43f af33 	beq.w	8000822 <main+0x42>
	  {
		  fwrite(receiveBuffer, 1, byteCount, stdout);
 80009bc:	4b12      	ldr	r3, [pc, #72]	; (8000a08 <main+0x228>)
 80009be:	681a      	ldr	r2, [r3, #0]
 80009c0:	4b12      	ldr	r3, [pc, #72]	; (8000a0c <main+0x22c>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	689b      	ldr	r3, [r3, #8]
 80009c6:	2101      	movs	r1, #1
 80009c8:	4811      	ldr	r0, [pc, #68]	; (8000a10 <main+0x230>)
 80009ca:	f002 f9ed 	bl	8002da8 <fwrite>
		  byteCount = 0;
 80009ce:	4b0e      	ldr	r3, [pc, #56]	; (8000a08 <main+0x228>)
 80009d0:	2200      	movs	r2, #0
 80009d2:	601a      	str	r2, [r3, #0]
		  bitCount = 7;
 80009d4:	4b0f      	ldr	r3, [pc, #60]	; (8000a14 <main+0x234>)
 80009d6:	2207      	movs	r2, #7
 80009d8:	601a      	str	r2, [r3, #0]
  {
 80009da:	e722      	b.n	8000822 <main+0x42>
 80009dc:	20001410 	.word	0x20001410
 80009e0:	200010c4 	.word	0x200010c4
 80009e4:	20001458 	.word	0x20001458
 80009e8:	0280de80 	.word	0x0280de80
 80009ec:	40020800 	.word	0x40020800
 80009f0:	20001310 	.word	0x20001310
 80009f4:	2000110c 	.word	0x2000110c
 80009f8:	2000130c 	.word	0x2000130c
 80009fc:	40020400 	.word	0x40020400
 8000a00:	40010000 	.word	0x40010000
 8000a04:	200014c4 	.word	0x200014c4
 8000a08:	20000094 	.word	0x20000094
 8000a0c:	20000014 	.word	0x20000014
 8000a10:	200014a4 	.word	0x200014a4
 8000a14:	20000004 	.word	0x20000004

08000a18 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	b094      	sub	sp, #80	; 0x50
 8000a1c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a1e:	f107 031c 	add.w	r3, r7, #28
 8000a22:	2234      	movs	r2, #52	; 0x34
 8000a24:	2100      	movs	r1, #0
 8000a26:	4618      	mov	r0, r3
 8000a28:	f002 fa01 	bl	8002e2e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a2c:	f107 0308 	add.w	r3, r7, #8
 8000a30:	2200      	movs	r2, #0
 8000a32:	601a      	str	r2, [r3, #0]
 8000a34:	605a      	str	r2, [r3, #4]
 8000a36:	609a      	str	r2, [r3, #8]
 8000a38:	60da      	str	r2, [r3, #12]
 8000a3a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a3c:	2300      	movs	r3, #0
 8000a3e:	607b      	str	r3, [r7, #4]
 8000a40:	4b29      	ldr	r3, [pc, #164]	; (8000ae8 <SystemClock_Config+0xd0>)
 8000a42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a44:	4a28      	ldr	r2, [pc, #160]	; (8000ae8 <SystemClock_Config+0xd0>)
 8000a46:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000a4a:	6413      	str	r3, [r2, #64]	; 0x40
 8000a4c:	4b26      	ldr	r3, [pc, #152]	; (8000ae8 <SystemClock_Config+0xd0>)
 8000a4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a50:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000a54:	607b      	str	r3, [r7, #4]
 8000a56:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000a58:	2300      	movs	r3, #0
 8000a5a:	603b      	str	r3, [r7, #0]
 8000a5c:	4b23      	ldr	r3, [pc, #140]	; (8000aec <SystemClock_Config+0xd4>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	4a22      	ldr	r2, [pc, #136]	; (8000aec <SystemClock_Config+0xd4>)
 8000a62:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000a66:	6013      	str	r3, [r2, #0]
 8000a68:	4b20      	ldr	r3, [pc, #128]	; (8000aec <SystemClock_Config+0xd4>)
 8000a6a:	681b      	ldr	r3, [r3, #0]
 8000a6c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000a70:	603b      	str	r3, [r7, #0]
 8000a72:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000a74:	2302      	movs	r3, #2
 8000a76:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000a78:	2301      	movs	r3, #1
 8000a7a:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000a7c:	2310      	movs	r3, #16
 8000a7e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000a80:	2302      	movs	r3, #2
 8000a82:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000a84:	2300      	movs	r3, #0
 8000a86:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000a88:	2308      	movs	r3, #8
 8000a8a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000a8c:	23a8      	movs	r3, #168	; 0xa8
 8000a8e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000a90:	2302      	movs	r3, #2
 8000a92:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000a94:	2302      	movs	r3, #2
 8000a96:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000a98:	2302      	movs	r3, #2
 8000a9a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a9c:	f107 031c 	add.w	r3, r7, #28
 8000aa0:	4618      	mov	r0, r3
 8000aa2:	f001 f9fb 	bl	8001e9c <HAL_RCC_OscConfig>
 8000aa6:	4603      	mov	r3, r0
 8000aa8:	2b00      	cmp	r3, #0
 8000aaa:	d001      	beq.n	8000ab0 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8000aac:	f000 f97e 	bl	8000dac <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ab0:	230f      	movs	r3, #15
 8000ab2:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000ab4:	2302      	movs	r3, #2
 8000ab6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ab8:	2300      	movs	r3, #0
 8000aba:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000abc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000ac0:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000ac2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000ac6:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000ac8:	f107 0308 	add.w	r3, r7, #8
 8000acc:	2105      	movs	r1, #5
 8000ace:	4618      	mov	r0, r3
 8000ad0:	f000 ffa2 	bl	8001a18 <HAL_RCC_ClockConfig>
 8000ad4:	4603      	mov	r3, r0
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	d001      	beq.n	8000ade <SystemClock_Config+0xc6>
  {
    Error_Handler();
 8000ada:	f000 f967 	bl	8000dac <Error_Handler>
  }
}
 8000ade:	bf00      	nop
 8000ae0:	3750      	adds	r7, #80	; 0x50
 8000ae2:	46bd      	mov	sp, r7
 8000ae4:	bd80      	pop	{r7, pc}
 8000ae6:	bf00      	nop
 8000ae8:	40023800 	.word	0x40023800
 8000aec:	40007000 	.word	0x40007000

08000af0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000af0:	b580      	push	{r7, lr}
 8000af2:	b086      	sub	sp, #24
 8000af4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000af6:	f107 0308 	add.w	r3, r7, #8
 8000afa:	2200      	movs	r2, #0
 8000afc:	601a      	str	r2, [r3, #0]
 8000afe:	605a      	str	r2, [r3, #4]
 8000b00:	609a      	str	r2, [r3, #8]
 8000b02:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000b04:	463b      	mov	r3, r7
 8000b06:	2200      	movs	r2, #0
 8000b08:	601a      	str	r2, [r3, #0]
 8000b0a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000b0c:	4b1e      	ldr	r3, [pc, #120]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b0e:	4a1f      	ldr	r2, [pc, #124]	; (8000b8c <MX_TIM1_Init+0x9c>)
 8000b10:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 153;
 8000b12:	4b1d      	ldr	r3, [pc, #116]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b14:	2299      	movs	r2, #153	; 0x99
 8000b16:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000b18:	4b1b      	ldr	r3, [pc, #108]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b1a:	2200      	movs	r2, #0
 8000b1c:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 2399;
 8000b1e:	4b1a      	ldr	r3, [pc, #104]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b20:	f640 125f 	movw	r2, #2399	; 0x95f
 8000b24:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000b26:	4b18      	ldr	r3, [pc, #96]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b28:	2200      	movs	r2, #0
 8000b2a:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000b2c:	4b16      	ldr	r3, [pc, #88]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b2e:	2200      	movs	r2, #0
 8000b30:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000b32:	4b15      	ldr	r3, [pc, #84]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b34:	2200      	movs	r2, #0
 8000b36:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000b38:	4813      	ldr	r0, [pc, #76]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b3a:	f001 fc4d 	bl	80023d8 <HAL_TIM_Base_Init>
 8000b3e:	4603      	mov	r3, r0
 8000b40:	2b00      	cmp	r3, #0
 8000b42:	d001      	beq.n	8000b48 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 8000b44:	f000 f932 	bl	8000dac <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000b48:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b4c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8000b4e:	f107 0308 	add.w	r3, r7, #8
 8000b52:	4619      	mov	r1, r3
 8000b54:	480c      	ldr	r0, [pc, #48]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b56:	f001 fe07 	bl	8002768 <HAL_TIM_ConfigClockSource>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	d001      	beq.n	8000b64 <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 8000b60:	f000 f924 	bl	8000dac <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000b64:	2300      	movs	r3, #0
 8000b66:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000b68:	2300      	movs	r3, #0
 8000b6a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000b6c:	463b      	mov	r3, r7
 8000b6e:	4619      	mov	r1, r3
 8000b70:	4805      	ldr	r0, [pc, #20]	; (8000b88 <MX_TIM1_Init+0x98>)
 8000b72:	f002 f823 	bl	8002bbc <HAL_TIMEx_MasterConfigSynchronization>
 8000b76:	4603      	mov	r3, r0
 8000b78:	2b00      	cmp	r3, #0
 8000b7a:	d001      	beq.n	8000b80 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 8000b7c:	f000 f916 	bl	8000dac <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8000b80:	bf00      	nop
 8000b82:	3718      	adds	r7, #24
 8000b84:	46bd      	mov	sp, r7
 8000b86:	bd80      	pop	{r7, pc}
 8000b88:	20001410 	.word	0x20001410
 8000b8c:	40010000 	.word	0x40010000

08000b90 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000b90:	b580      	push	{r7, lr}
 8000b92:	b086      	sub	sp, #24
 8000b94:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000b96:	f107 0308 	add.w	r3, r7, #8
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	601a      	str	r2, [r3, #0]
 8000b9e:	605a      	str	r2, [r3, #4]
 8000ba0:	609a      	str	r2, [r3, #8]
 8000ba2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000ba4:	463b      	mov	r3, r7
 8000ba6:	2200      	movs	r2, #0
 8000ba8:	601a      	str	r2, [r3, #0]
 8000baa:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000bac:	4b1d      	ldr	r3, [pc, #116]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000bb2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 153;
 8000bb4:	4b1b      	ldr	r3, [pc, #108]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bb6:	2299      	movs	r2, #153	; 0x99
 8000bb8:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000bba:	4b1a      	ldr	r3, [pc, #104]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bbc:	2200      	movs	r2, #0
 8000bbe:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 550;
 8000bc0:	4b18      	ldr	r3, [pc, #96]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bc2:	f240 2226 	movw	r2, #550	; 0x226
 8000bc6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000bc8:	4b16      	ldr	r3, [pc, #88]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bca:	2200      	movs	r2, #0
 8000bcc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000bce:	4b15      	ldr	r3, [pc, #84]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bd0:	2200      	movs	r2, #0
 8000bd2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000bd4:	4813      	ldr	r0, [pc, #76]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bd6:	f001 fbff 	bl	80023d8 <HAL_TIM_Base_Init>
 8000bda:	4603      	mov	r3, r0
 8000bdc:	2b00      	cmp	r3, #0
 8000bde:	d001      	beq.n	8000be4 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000be0:	f000 f8e4 	bl	8000dac <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000be4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000be8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000bea:	f107 0308 	add.w	r3, r7, #8
 8000bee:	4619      	mov	r1, r3
 8000bf0:	480c      	ldr	r0, [pc, #48]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000bf2:	f001 fdb9 	bl	8002768 <HAL_TIM_ConfigClockSource>
 8000bf6:	4603      	mov	r3, r0
 8000bf8:	2b00      	cmp	r3, #0
 8000bfa:	d001      	beq.n	8000c00 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000bfc:	f000 f8d6 	bl	8000dac <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8000c00:	2320      	movs	r3, #32
 8000c02:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c04:	2300      	movs	r3, #0
 8000c06:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c08:	463b      	mov	r3, r7
 8000c0a:	4619      	mov	r1, r3
 8000c0c:	4805      	ldr	r0, [pc, #20]	; (8000c24 <MX_TIM2_Init+0x94>)
 8000c0e:	f001 ffd5 	bl	8002bbc <HAL_TIMEx_MasterConfigSynchronization>
 8000c12:	4603      	mov	r3, r0
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	d001      	beq.n	8000c1c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000c18:	f000 f8c8 	bl	8000dac <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000c1c:	bf00      	nop
 8000c1e:	3718      	adds	r7, #24
 8000c20:	46bd      	mov	sp, r7
 8000c22:	bd80      	pop	{r7, pc}
 8000c24:	20001458 	.word	0x20001458

08000c28 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8000c28:	b580      	push	{r7, lr}
 8000c2a:	b086      	sub	sp, #24
 8000c2c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c2e:	f107 0308 	add.w	r3, r7, #8
 8000c32:	2200      	movs	r2, #0
 8000c34:	601a      	str	r2, [r3, #0]
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c3c:	463b      	mov	r3, r7
 8000c3e:	2200      	movs	r2, #0
 8000c40:	601a      	str	r2, [r3, #0]
 8000c42:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8000c44:	4b1e      	ldr	r3, [pc, #120]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c46:	4a1f      	ldr	r2, [pc, #124]	; (8000cc4 <MX_TIM8_Init+0x9c>)
 8000c48:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 153;
 8000c4a:	4b1d      	ldr	r3, [pc, #116]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c4c:	2299      	movs	r2, #153	; 0x99
 8000c4e:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c50:	4b1b      	ldr	r3, [pc, #108]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c52:	2200      	movs	r2, #0
 8000c54:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 553;
 8000c56:	4b1a      	ldr	r3, [pc, #104]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c58:	f240 2229 	movw	r2, #553	; 0x229
 8000c5c:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000c5e:	4b18      	ldr	r3, [pc, #96]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c60:	2200      	movs	r2, #0
 8000c62:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8000c64:	4b16      	ldr	r3, [pc, #88]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c66:	2200      	movs	r2, #0
 8000c68:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000c6a:	4b15      	ldr	r3, [pc, #84]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 8000c70:	4813      	ldr	r0, [pc, #76]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c72:	f001 fbb1 	bl	80023d8 <HAL_TIM_Base_Init>
 8000c76:	4603      	mov	r3, r0
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d001      	beq.n	8000c80 <MX_TIM8_Init+0x58>
  {
    Error_Handler();
 8000c7c:	f000 f896 	bl	8000dac <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c80:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000c84:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 8000c86:	f107 0308 	add.w	r3, r7, #8
 8000c8a:	4619      	mov	r1, r3
 8000c8c:	480c      	ldr	r0, [pc, #48]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000c8e:	f001 fd6b 	bl	8002768 <HAL_TIM_ConfigClockSource>
 8000c92:	4603      	mov	r3, r0
 8000c94:	2b00      	cmp	r3, #0
 8000c96:	d001      	beq.n	8000c9c <MX_TIM8_Init+0x74>
  {
    Error_Handler();
 8000c98:	f000 f888 	bl	8000dac <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000ca0:	2300      	movs	r3, #0
 8000ca2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8000ca4:	463b      	mov	r3, r7
 8000ca6:	4619      	mov	r1, r3
 8000ca8:	4805      	ldr	r0, [pc, #20]	; (8000cc0 <MX_TIM8_Init+0x98>)
 8000caa:	f001 ff87 	bl	8002bbc <HAL_TIMEx_MasterConfigSynchronization>
 8000cae:	4603      	mov	r3, r0
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d001      	beq.n	8000cb8 <MX_TIM8_Init+0x90>
  {
    Error_Handler();
 8000cb4:	f000 f87a 	bl	8000dac <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 8000cb8:	bf00      	nop
 8000cba:	3718      	adds	r7, #24
 8000cbc:	46bd      	mov	sp, r7
 8000cbe:	bd80      	pop	{r7, pc}
 8000cc0:	200010c4 	.word	0x200010c4
 8000cc4:	40010400 	.word	0x40010400

08000cc8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000cc8:	b580      	push	{r7, lr}
 8000cca:	b088      	sub	sp, #32
 8000ccc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cce:	f107 030c 	add.w	r3, r7, #12
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	601a      	str	r2, [r3, #0]
 8000cd6:	605a      	str	r2, [r3, #4]
 8000cd8:	609a      	str	r2, [r3, #8]
 8000cda:	60da      	str	r2, [r3, #12]
 8000cdc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000cde:	2300      	movs	r3, #0
 8000ce0:	60bb      	str	r3, [r7, #8]
 8000ce2:	4b2f      	ldr	r3, [pc, #188]	; (8000da0 <MX_GPIO_Init+0xd8>)
 8000ce4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ce6:	4a2e      	ldr	r2, [pc, #184]	; (8000da0 <MX_GPIO_Init+0xd8>)
 8000ce8:	f043 0302 	orr.w	r3, r3, #2
 8000cec:	6313      	str	r3, [r2, #48]	; 0x30
 8000cee:	4b2c      	ldr	r3, [pc, #176]	; (8000da0 <MX_GPIO_Init+0xd8>)
 8000cf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cf2:	f003 0302 	and.w	r3, r3, #2
 8000cf6:	60bb      	str	r3, [r7, #8]
 8000cf8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cfa:	2300      	movs	r3, #0
 8000cfc:	607b      	str	r3, [r7, #4]
 8000cfe:	4b28      	ldr	r3, [pc, #160]	; (8000da0 <MX_GPIO_Init+0xd8>)
 8000d00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d02:	4a27      	ldr	r2, [pc, #156]	; (8000da0 <MX_GPIO_Init+0xd8>)
 8000d04:	f043 0304 	orr.w	r3, r3, #4
 8000d08:	6313      	str	r3, [r2, #48]	; 0x30
 8000d0a:	4b25      	ldr	r3, [pc, #148]	; (8000da0 <MX_GPIO_Init+0xd8>)
 8000d0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d0e:	f003 0304 	and.w	r3, r3, #4
 8000d12:	607b      	str	r3, [r7, #4]
 8000d14:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 8000d16:	2200      	movs	r2, #0
 8000d18:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 8000d1c:	4821      	ldr	r0, [pc, #132]	; (8000da4 <MX_GPIO_Init+0xdc>)
 8000d1e:	f000 fe49 	bl	80019b4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_RESET);
 8000d22:	2200      	movs	r2, #0
 8000d24:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000d28:	481f      	ldr	r0, [pc, #124]	; (8000da8 <MX_GPIO_Init+0xe0>)
 8000d2a:	f000 fe43 	bl	80019b4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PB12 PB13 PB14 PB15 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8000d2e:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 8000d32:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d34:	2301      	movs	r3, #1
 8000d36:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d38:	2300      	movs	r3, #0
 8000d3a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d40:	f107 030c 	add.w	r3, r7, #12
 8000d44:	4619      	mov	r1, r3
 8000d46:	4817      	ldr	r0, [pc, #92]	; (8000da4 <MX_GPIO_Init+0xdc>)
 8000d48:	f000 fc88 	bl	800165c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000d4c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000d50:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d52:	2301      	movs	r3, #1
 8000d54:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d56:	2300      	movs	r3, #0
 8000d58:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d5a:	2300      	movs	r3, #0
 8000d5c:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d5e:	f107 030c 	add.w	r3, r7, #12
 8000d62:	4619      	mov	r1, r3
 8000d64:	4810      	ldr	r0, [pc, #64]	; (8000da8 <MX_GPIO_Init+0xe0>)
 8000d66:	f000 fc79 	bl	800165c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC9 */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000d6a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000d6e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8000d70:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 8000d74:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000d76:	2302      	movs	r3, #2
 8000d78:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d7a:	f107 030c 	add.w	r3, r7, #12
 8000d7e:	4619      	mov	r1, r3
 8000d80:	4809      	ldr	r0, [pc, #36]	; (8000da8 <MX_GPIO_Init+0xe0>)
 8000d82:	f000 fc6b 	bl	800165c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 1, 0);
 8000d86:	2200      	movs	r2, #0
 8000d88:	2101      	movs	r1, #1
 8000d8a:	2017      	movs	r0, #23
 8000d8c:	f000 fc2b 	bl	80015e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000d90:	2017      	movs	r0, #23
 8000d92:	f000 fc44 	bl	800161e <HAL_NVIC_EnableIRQ>

}
 8000d96:	bf00      	nop
 8000d98:	3720      	adds	r7, #32
 8000d9a:	46bd      	mov	sp, r7
 8000d9c:	bd80      	pop	{r7, pc}
 8000d9e:	bf00      	nop
 8000da0:	40023800 	.word	0x40023800
 8000da4:	40020400 	.word	0x40020400
 8000da8:	40020800 	.word	0x40020800

08000dac <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000dac:	b480      	push	{r7}
 8000dae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000db0:	b672      	cpsid	i
}
 8000db2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000db4:	e7fe      	b.n	8000db4 <Error_Handler+0x8>
	...

08000db8 <HAL_MspInit>:
 8000db8:	b480      	push	{r7}
 8000dba:	b083      	sub	sp, #12
 8000dbc:	af00      	add	r7, sp, #0
 8000dbe:	2300      	movs	r3, #0
 8000dc0:	607b      	str	r3, [r7, #4]
 8000dc2:	4b10      	ldr	r3, [pc, #64]	; (8000e04 <HAL_MspInit+0x4c>)
 8000dc4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000dc6:	4a0f      	ldr	r2, [pc, #60]	; (8000e04 <HAL_MspInit+0x4c>)
 8000dc8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000dcc:	6453      	str	r3, [r2, #68]	; 0x44
 8000dce:	4b0d      	ldr	r3, [pc, #52]	; (8000e04 <HAL_MspInit+0x4c>)
 8000dd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000dd2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000dd6:	607b      	str	r3, [r7, #4]
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	2300      	movs	r3, #0
 8000ddc:	603b      	str	r3, [r7, #0]
 8000dde:	4b09      	ldr	r3, [pc, #36]	; (8000e04 <HAL_MspInit+0x4c>)
 8000de0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000de2:	4a08      	ldr	r2, [pc, #32]	; (8000e04 <HAL_MspInit+0x4c>)
 8000de4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000de8:	6413      	str	r3, [r2, #64]	; 0x40
 8000dea:	4b06      	ldr	r3, [pc, #24]	; (8000e04 <HAL_MspInit+0x4c>)
 8000dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000dee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000df2:	603b      	str	r3, [r7, #0]
 8000df4:	683b      	ldr	r3, [r7, #0]
 8000df6:	bf00      	nop
 8000df8:	370c      	adds	r7, #12
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e00:	4770      	bx	lr
 8000e02:	bf00      	nop
 8000e04:	40023800 	.word	0x40023800

08000e08 <HAL_TIM_Base_MspInit>:
 8000e08:	b580      	push	{r7, lr}
 8000e0a:	b086      	sub	sp, #24
 8000e0c:	af00      	add	r7, sp, #0
 8000e0e:	6078      	str	r0, [r7, #4]
 8000e10:	687b      	ldr	r3, [r7, #4]
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	4a26      	ldr	r2, [pc, #152]	; (8000eb0 <HAL_TIM_Base_MspInit+0xa8>)
 8000e16:	4293      	cmp	r3, r2
 8000e18:	d116      	bne.n	8000e48 <HAL_TIM_Base_MspInit+0x40>
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	617b      	str	r3, [r7, #20]
 8000e1e:	4b25      	ldr	r3, [pc, #148]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e22:	4a24      	ldr	r2, [pc, #144]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e24:	f043 0301 	orr.w	r3, r3, #1
 8000e28:	6453      	str	r3, [r2, #68]	; 0x44
 8000e2a:	4b22      	ldr	r3, [pc, #136]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e2e:	f003 0301 	and.w	r3, r3, #1
 8000e32:	617b      	str	r3, [r7, #20]
 8000e34:	697b      	ldr	r3, [r7, #20]
 8000e36:	2200      	movs	r2, #0
 8000e38:	2100      	movs	r1, #0
 8000e3a:	2019      	movs	r0, #25
 8000e3c:	f000 fbd3 	bl	80015e6 <HAL_NVIC_SetPriority>
 8000e40:	2019      	movs	r0, #25
 8000e42:	f000 fbec 	bl	800161e <HAL_NVIC_EnableIRQ>
 8000e46:	e02e      	b.n	8000ea6 <HAL_TIM_Base_MspInit+0x9e>
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	681b      	ldr	r3, [r3, #0]
 8000e4c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000e50:	d10e      	bne.n	8000e70 <HAL_TIM_Base_MspInit+0x68>
 8000e52:	2300      	movs	r3, #0
 8000e54:	613b      	str	r3, [r7, #16]
 8000e56:	4b17      	ldr	r3, [pc, #92]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e5a:	4a16      	ldr	r2, [pc, #88]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e5c:	f043 0301 	orr.w	r3, r3, #1
 8000e60:	6413      	str	r3, [r2, #64]	; 0x40
 8000e62:	4b14      	ldr	r3, [pc, #80]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e66:	f003 0301 	and.w	r3, r3, #1
 8000e6a:	613b      	str	r3, [r7, #16]
 8000e6c:	693b      	ldr	r3, [r7, #16]
 8000e6e:	e01a      	b.n	8000ea6 <HAL_TIM_Base_MspInit+0x9e>
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	4a10      	ldr	r2, [pc, #64]	; (8000eb8 <HAL_TIM_Base_MspInit+0xb0>)
 8000e76:	4293      	cmp	r3, r2
 8000e78:	d115      	bne.n	8000ea6 <HAL_TIM_Base_MspInit+0x9e>
 8000e7a:	2300      	movs	r3, #0
 8000e7c:	60fb      	str	r3, [r7, #12]
 8000e7e:	4b0d      	ldr	r3, [pc, #52]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e82:	4a0c      	ldr	r2, [pc, #48]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e84:	f043 0302 	orr.w	r3, r3, #2
 8000e88:	6453      	str	r3, [r2, #68]	; 0x44
 8000e8a:	4b0a      	ldr	r3, [pc, #40]	; (8000eb4 <HAL_TIM_Base_MspInit+0xac>)
 8000e8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e8e:	f003 0302 	and.w	r3, r3, #2
 8000e92:	60fb      	str	r3, [r7, #12]
 8000e94:	68fb      	ldr	r3, [r7, #12]
 8000e96:	2200      	movs	r2, #0
 8000e98:	2100      	movs	r1, #0
 8000e9a:	202c      	movs	r0, #44	; 0x2c
 8000e9c:	f000 fba3 	bl	80015e6 <HAL_NVIC_SetPriority>
 8000ea0:	202c      	movs	r0, #44	; 0x2c
 8000ea2:	f000 fbbc 	bl	800161e <HAL_NVIC_EnableIRQ>
 8000ea6:	bf00      	nop
 8000ea8:	3718      	adds	r7, #24
 8000eaa:	46bd      	mov	sp, r7
 8000eac:	bd80      	pop	{r7, pc}
 8000eae:	bf00      	nop
 8000eb0:	40010000 	.word	0x40010000
 8000eb4:	40023800 	.word	0x40023800
 8000eb8:	40010400 	.word	0x40010400

08000ebc <NMI_Handler>:
 8000ebc:	b480      	push	{r7}
 8000ebe:	af00      	add	r7, sp, #0
 8000ec0:	e7fe      	b.n	8000ec0 <NMI_Handler+0x4>

08000ec2 <HardFault_Handler>:
 8000ec2:	b480      	push	{r7}
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	e7fe      	b.n	8000ec6 <HardFault_Handler+0x4>

08000ec8 <MemManage_Handler>:
 8000ec8:	b480      	push	{r7}
 8000eca:	af00      	add	r7, sp, #0
 8000ecc:	e7fe      	b.n	8000ecc <MemManage_Handler+0x4>

08000ece <BusFault_Handler>:
 8000ece:	b480      	push	{r7}
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	e7fe      	b.n	8000ed2 <BusFault_Handler+0x4>

08000ed4 <UsageFault_Handler>:
 8000ed4:	b480      	push	{r7}
 8000ed6:	af00      	add	r7, sp, #0
 8000ed8:	e7fe      	b.n	8000ed8 <UsageFault_Handler+0x4>

08000eda <SVC_Handler>:
 8000eda:	b480      	push	{r7}
 8000edc:	af00      	add	r7, sp, #0
 8000ede:	bf00      	nop
 8000ee0:	46bd      	mov	sp, r7
 8000ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee6:	4770      	bx	lr

08000ee8 <DebugMon_Handler>:
 8000ee8:	b480      	push	{r7}
 8000eea:	af00      	add	r7, sp, #0
 8000eec:	bf00      	nop
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef4:	4770      	bx	lr

08000ef6 <PendSV_Handler>:
 8000ef6:	b480      	push	{r7}
 8000ef8:	af00      	add	r7, sp, #0
 8000efa:	bf00      	nop
 8000efc:	46bd      	mov	sp, r7
 8000efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f02:	4770      	bx	lr

08000f04 <SysTick_Handler>:
 8000f04:	b580      	push	{r7, lr}
 8000f06:	af00      	add	r7, sp, #0
 8000f08:	f000 fa5c 	bl	80013c4 <HAL_IncTick>
 8000f0c:	bf00      	nop
 8000f0e:	bd80      	pop	{r7, pc}

08000f10 <EXTI9_5_IRQHandler>:
 8000f10:	b580      	push	{r7, lr}
 8000f12:	af00      	add	r7, sp, #0
 8000f14:	f44f 7000 	mov.w	r0, #512	; 0x200
 8000f18:	f000 fd66 	bl	80019e8 <HAL_GPIO_EXTI_IRQHandler>
 8000f1c:	bf00      	nop
 8000f1e:	bd80      	pop	{r7, pc}

08000f20 <TIM1_UP_TIM10_IRQHandler>:
 8000f20:	b580      	push	{r7, lr}
 8000f22:	af00      	add	r7, sp, #0
 8000f24:	4802      	ldr	r0, [pc, #8]	; (8000f30 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8000f26:	f001 fb17 	bl	8002558 <HAL_TIM_IRQHandler>
 8000f2a:	bf00      	nop
 8000f2c:	bd80      	pop	{r7, pc}
 8000f2e:	bf00      	nop
 8000f30:	20001410 	.word	0x20001410

08000f34 <TIM8_UP_TIM13_IRQHandler>:
 8000f34:	b580      	push	{r7, lr}
 8000f36:	af00      	add	r7, sp, #0
 8000f38:	4802      	ldr	r0, [pc, #8]	; (8000f44 <TIM8_UP_TIM13_IRQHandler+0x10>)
 8000f3a:	f001 fb0d 	bl	8002558 <HAL_TIM_IRQHandler>
 8000f3e:	bf00      	nop
 8000f40:	bd80      	pop	{r7, pc}
 8000f42:	bf00      	nop
 8000f44:	200010c4 	.word	0x200010c4

08000f48 <_close>:
	}
	return len;
}

int _close(int file)
{
 8000f48:	b480      	push	{r7}
 8000f4a:	b083      	sub	sp, #12
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
	return -1;
 8000f50:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000f54:	4618      	mov	r0, r3
 8000f56:	370c      	adds	r7, #12
 8000f58:	46bd      	mov	sp, r7
 8000f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f5e:	4770      	bx	lr

08000f60 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000f60:	b480      	push	{r7}
 8000f62:	b083      	sub	sp, #12
 8000f64:	af00      	add	r7, sp, #0
 8000f66:	6078      	str	r0, [r7, #4]
 8000f68:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000f6a:	683b      	ldr	r3, [r7, #0]
 8000f6c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000f70:	605a      	str	r2, [r3, #4]
	return 0;
 8000f72:	2300      	movs	r3, #0
}
 8000f74:	4618      	mov	r0, r3
 8000f76:	370c      	adds	r7, #12
 8000f78:	46bd      	mov	sp, r7
 8000f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f7e:	4770      	bx	lr

08000f80 <_isatty>:

int _isatty(int file)
{
 8000f80:	b480      	push	{r7}
 8000f82:	b083      	sub	sp, #12
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	6078      	str	r0, [r7, #4]
	return 1;
 8000f88:	2301      	movs	r3, #1
}
 8000f8a:	4618      	mov	r0, r3
 8000f8c:	370c      	adds	r7, #12
 8000f8e:	46bd      	mov	sp, r7
 8000f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f94:	4770      	bx	lr

08000f96 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000f96:	b480      	push	{r7}
 8000f98:	b085      	sub	sp, #20
 8000f9a:	af00      	add	r7, sp, #0
 8000f9c:	60f8      	str	r0, [r7, #12]
 8000f9e:	60b9      	str	r1, [r7, #8]
 8000fa0:	607a      	str	r2, [r7, #4]
	return 0;
 8000fa2:	2300      	movs	r3, #0
}
 8000fa4:	4618      	mov	r0, r3
 8000fa6:	3714      	adds	r7, #20
 8000fa8:	46bd      	mov	sp, r7
 8000faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fae:	4770      	bx	lr

08000fb0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	b086      	sub	sp, #24
 8000fb4:	af00      	add	r7, sp, #0
 8000fb6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000fb8:	4a14      	ldr	r2, [pc, #80]	; (800100c <_sbrk+0x5c>)
 8000fba:	4b15      	ldr	r3, [pc, #84]	; (8001010 <_sbrk+0x60>)
 8000fbc:	1ad3      	subs	r3, r2, r3
 8000fbe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000fc0:	697b      	ldr	r3, [r7, #20]
 8000fc2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000fc4:	4b13      	ldr	r3, [pc, #76]	; (8001014 <_sbrk+0x64>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d102      	bne.n	8000fd2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000fcc:	4b11      	ldr	r3, [pc, #68]	; (8001014 <_sbrk+0x64>)
 8000fce:	4a12      	ldr	r2, [pc, #72]	; (8001018 <_sbrk+0x68>)
 8000fd0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000fd2:	4b10      	ldr	r3, [pc, #64]	; (8001014 <_sbrk+0x64>)
 8000fd4:	681a      	ldr	r2, [r3, #0]
 8000fd6:	687b      	ldr	r3, [r7, #4]
 8000fd8:	4413      	add	r3, r2
 8000fda:	693a      	ldr	r2, [r7, #16]
 8000fdc:	429a      	cmp	r2, r3
 8000fde:	d207      	bcs.n	8000ff0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000fe0:	f001 fe7c 	bl	8002cdc <__errno>
 8000fe4:	4603      	mov	r3, r0
 8000fe6:	220c      	movs	r2, #12
 8000fe8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000fea:	f04f 33ff 	mov.w	r3, #4294967295
 8000fee:	e009      	b.n	8001004 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000ff0:	4b08      	ldr	r3, [pc, #32]	; (8001014 <_sbrk+0x64>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000ff6:	4b07      	ldr	r3, [pc, #28]	; (8001014 <_sbrk+0x64>)
 8000ff8:	681a      	ldr	r2, [r3, #0]
 8000ffa:	687b      	ldr	r3, [r7, #4]
 8000ffc:	4413      	add	r3, r2
 8000ffe:	4a05      	ldr	r2, [pc, #20]	; (8001014 <_sbrk+0x64>)
 8001000:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001002:	68fb      	ldr	r3, [r7, #12]
}
 8001004:	4618      	mov	r0, r3
 8001006:	3718      	adds	r7, #24
 8001008:	46bd      	mov	sp, r7
 800100a:	bd80      	pop	{r7, pc}
 800100c:	20020000 	.word	0x20020000
 8001010:	00000400 	.word	0x00000400
 8001014:	20000098 	.word	0x20000098
 8001018:	200014e0 	.word	0x200014e0

0800101c <SystemInit>:
 800101c:	b480      	push	{r7}
 800101e:	af00      	add	r7, sp, #0
 8001020:	4b06      	ldr	r3, [pc, #24]	; (800103c <SystemInit+0x20>)
 8001022:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001026:	4a05      	ldr	r2, [pc, #20]	; (800103c <SystemInit+0x20>)
 8001028:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800102c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001030:	bf00      	nop
 8001032:	46bd      	mov	sp, r7
 8001034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001038:	4770      	bx	lr
 800103a:	bf00      	nop
 800103c:	e000ed00 	.word	0xe000ed00

08001040 <uart_init>:
/**
 * Initializes USART2 as a UART
 * @param baud - the baud rate
 * @param sysclk - the frequency of the system clock in Hz
 */
void uart_init(int baud, int sysclk) {
 8001040:	b590      	push	{r4, r7, lr}
 8001042:	f6ad 0d1c 	subw	sp, sp, #2076	; 0x81c
 8001046:	af00      	add	r7, sp, #0
 8001048:	f8c7 0814 	str.w	r0, [r7, #2068]	; 0x814
 800104c:	f8c7 1810 	str.w	r1, [r7, #2064]	; 0x810

    // define the input and output buffer
    input_buffer = cq_init();
 8001050:	4c36      	ldr	r4, [pc, #216]	; (800112c <uart_init+0xec>)
 8001052:	463b      	mov	r3, r7
 8001054:	4618      	mov	r0, r3
 8001056:	f7ff fa51 	bl	80004fc <cq_init>
 800105a:	463b      	mov	r3, r7
 800105c:	4620      	mov	r0, r4
 800105e:	4619      	mov	r1, r3
 8001060:	f44f 6301 	mov.w	r3, #2064	; 0x810
 8001064:	461a      	mov	r2, r3
 8001066:	f001 fed4 	bl	8002e12 <memcpy>
    output_buffer = cq_init();
 800106a:	4c31      	ldr	r4, [pc, #196]	; (8001130 <uart_init+0xf0>)
 800106c:	463b      	mov	r3, r7
 800106e:	4618      	mov	r0, r3
 8001070:	f7ff fa44 	bl	80004fc <cq_init>
 8001074:	463b      	mov	r3, r7
 8001076:	4620      	mov	r0, r4
 8001078:	4619      	mov	r1, r3
 800107a:	f44f 6301 	mov.w	r3, #2064	; 0x810
 800107e:	461a      	mov	r2, r3
 8001080:	f001 fec7 	bl	8002e12 <memcpy>

    // enable GPIOA in RCC
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001084:	4b2b      	ldr	r3, [pc, #172]	; (8001134 <uart_init+0xf4>)
 8001086:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001088:	4a2a      	ldr	r2, [pc, #168]	; (8001134 <uart_init+0xf4>)
 800108a:	f043 0301 	orr.w	r3, r3, #1
 800108e:	6313      	str	r3, [r2, #48]	; 0x30

    // enable USART2 in RCC
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001090:	4b28      	ldr	r3, [pc, #160]	; (8001134 <uart_init+0xf4>)
 8001092:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001094:	4a27      	ldr	r2, [pc, #156]	; (8001134 <uart_init+0xf4>)
 8001096:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800109a:	6413      	str	r3, [r2, #64]	; 0x40

    // set PA2 and PA3 as pullup
    GPIOA->PUPDR |= (0b01 << GPIO_PUPDR_PUPD2_Pos | 0b01 << GPIO_PUPDR_PUPD3_Pos);
 800109c:	4b26      	ldr	r3, [pc, #152]	; (8001138 <uart_init+0xf8>)
 800109e:	68db      	ldr	r3, [r3, #12]
 80010a0:	4a25      	ldr	r2, [pc, #148]	; (8001138 <uart_init+0xf8>)
 80010a2:	f043 0350 	orr.w	r3, r3, #80	; 0x50
 80010a6:	60d3      	str	r3, [r2, #12]

    // clear PA2 and PA3 mode
    GPIOA->MODER &= ~(GPIO_MODER_MODER2 | GPIO_MODER_MODER3);
 80010a8:	4b23      	ldr	r3, [pc, #140]	; (8001138 <uart_init+0xf8>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	4a22      	ldr	r2, [pc, #136]	; (8001138 <uart_init+0xf8>)
 80010ae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80010b2:	6013      	str	r3, [r2, #0]

    // set PA2 and PA3 mode to alternate function
    GPIOA->MODER |= (0b10 << GPIO_MODER_MODER2_Pos | 0b10 << GPIO_MODER_MODER3_Pos);
 80010b4:	4b20      	ldr	r3, [pc, #128]	; (8001138 <uart_init+0xf8>)
 80010b6:	681b      	ldr	r3, [r3, #0]
 80010b8:	4a1f      	ldr	r2, [pc, #124]	; (8001138 <uart_init+0xf8>)
 80010ba:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 80010be:	6013      	str	r3, [r2, #0]

    // clear alternate function select for PA2 and PA3
    GPIOA->AFR[0] &= ~(GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3);
 80010c0:	4b1d      	ldr	r3, [pc, #116]	; (8001138 <uart_init+0xf8>)
 80010c2:	6a1b      	ldr	r3, [r3, #32]
 80010c4:	4a1c      	ldr	r2, [pc, #112]	; (8001138 <uart_init+0xf8>)
 80010c6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80010ca:	6213      	str	r3, [r2, #32]

    // select USART1..3 (AF7) as the alternate function for PA3 and PA2
    GPIOA->AFR[0] |= (7 << GPIO_AFRL_AFSEL2_Pos | 7 << GPIO_AFRL_AFSEL3_Pos);
 80010cc:	4b1a      	ldr	r3, [pc, #104]	; (8001138 <uart_init+0xf8>)
 80010ce:	6a1b      	ldr	r3, [r3, #32]
 80010d0:	4a19      	ldr	r2, [pc, #100]	; (8001138 <uart_init+0xf8>)
 80010d2:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 80010d6:	6213      	str	r3, [r2, #32]

    // set USART2's baud rate
    USART2->BRR = sysclk / baud;
 80010d8:	f8d7 2810 	ldr.w	r2, [r7, #2064]	; 0x810
 80010dc:	f8d7 3814 	ldr.w	r3, [r7, #2068]	; 0x814
 80010e0:	fb92 f2f3 	sdiv	r2, r2, r3
 80010e4:	4b15      	ldr	r3, [pc, #84]	; (800113c <uart_init+0xfc>)
 80010e6:	609a      	str	r2, [r3, #8]

    // enable USART2's UART, RX, and TX
    USART2->CR1 |= (USART_CR1_UE | USART_CR1_TE | USART_CR1_RE);
 80010e8:	4b14      	ldr	r3, [pc, #80]	; (800113c <uart_init+0xfc>)
 80010ea:	68db      	ldr	r3, [r3, #12]
 80010ec:	4a13      	ldr	r2, [pc, #76]	; (800113c <uart_init+0xfc>)
 80010ee:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80010f2:	f043 030c 	orr.w	r3, r3, #12
 80010f6:	60d3      	str	r3, [r2, #12]

    // enable USART2's TXE interrupt and RXNE interrupt
    USART2->CR1 |= (USART_CR1_TXEIE | USART_CR1_RXNEIE);
 80010f8:	4b10      	ldr	r3, [pc, #64]	; (800113c <uart_init+0xfc>)
 80010fa:	68db      	ldr	r3, [r3, #12]
 80010fc:	4a0f      	ldr	r2, [pc, #60]	; (800113c <uart_init+0xfc>)
 80010fe:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8001102:	60d3      	str	r3, [r2, #12]

    // enable USART2 interrupts in NVIC
    NVIC->ISER[1] |= (1 << 6);
 8001104:	4b0e      	ldr	r3, [pc, #56]	; (8001140 <uart_init+0x100>)
 8001106:	685b      	ldr	r3, [r3, #4]
 8001108:	4a0d      	ldr	r2, [pc, #52]	; (8001140 <uart_init+0x100>)
 800110a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800110e:	6053      	str	r3, [r2, #4]

    // set output buffer source
    setvbuf(stdout, NULL, _IONBF, 0);
 8001110:	4b0c      	ldr	r3, [pc, #48]	; (8001144 <uart_init+0x104>)
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	6898      	ldr	r0, [r3, #8]
 8001116:	2300      	movs	r3, #0
 8001118:	2202      	movs	r2, #2
 800111a:	2100      	movs	r1, #0
 800111c:	f001 fe90 	bl	8002e40 <setvbuf>

}
 8001120:	bf00      	nop
 8001122:	f607 071c 	addw	r7, r7, #2076	; 0x81c
 8001126:	46bd      	mov	sp, r7
 8001128:	bd90      	pop	{r4, r7, pc}
 800112a:	bf00      	nop
 800112c:	2000009c 	.word	0x2000009c
 8001130:	200008ac 	.word	0x200008ac
 8001134:	40023800 	.word	0x40023800
 8001138:	40020000 	.word	0x40020000
 800113c:	40004400 	.word	0x40004400
 8001140:	e000e100 	.word	0xe000e100
 8001144:	20000014 	.word	0x20000014

08001148 <_read>:
 * @param file - not implemented (ignored)
 * @param ptr - where the read data should be put
 * @param len - the number of characters to read
 * @return the number of characters read
 */
int _read(int file, char * ptr, int len) {
 8001148:	b580      	push	{r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	60f8      	str	r0, [r7, #12]
 8001150:	60b9      	str	r1, [r7, #8]
 8001152:	607a      	str	r2, [r7, #4]

    // wait until the input buffer receives some data
    while (cq_isempty(&input_buffer));
 8001154:	bf00      	nop
 8001156:	4814      	ldr	r0, [pc, #80]	; (80011a8 <_read+0x60>)
 8001158:	f7ff fa4b 	bl	80005f2 <cq_isempty>
 800115c:	4603      	mov	r3, r0
 800115e:	2b00      	cmp	r3, #0
 8001160:	d1f9      	bne.n	8001156 <_read+0xe>

    int char_count = 0;
 8001162:	2300      	movs	r3, #0
 8001164:	617b      	str	r3, [r7, #20]

    // pull from the circular queue until it is empty
    while (!cq_isempty(&input_buffer)) {
 8001166:	e00c      	b.n	8001182 <_read+0x3a>
        char_count++;
 8001168:	697b      	ldr	r3, [r7, #20]
 800116a:	3301      	adds	r3, #1
 800116c:	617b      	str	r3, [r7, #20]
        *ptr = cq_pull(&input_buffer);
 800116e:	480e      	ldr	r0, [pc, #56]	; (80011a8 <_read+0x60>)
 8001170:	f7ff fa14 	bl	800059c <cq_pull>
 8001174:	4603      	mov	r3, r0
 8001176:	461a      	mov	r2, r3
 8001178:	68bb      	ldr	r3, [r7, #8]
 800117a:	701a      	strb	r2, [r3, #0]
        ptr++;
 800117c:	68bb      	ldr	r3, [r7, #8]
 800117e:	3301      	adds	r3, #1
 8001180:	60bb      	str	r3, [r7, #8]
    while (!cq_isempty(&input_buffer)) {
 8001182:	4809      	ldr	r0, [pc, #36]	; (80011a8 <_read+0x60>)
 8001184:	f7ff fa35 	bl	80005f2 <cq_isempty>
 8001188:	4603      	mov	r3, r0
 800118a:	2b00      	cmp	r3, #0
 800118c:	d0ec      	beq.n	8001168 <_read+0x20>
    }

    if (*ptr == '\r') *ptr = '\n';
 800118e:	68bb      	ldr	r3, [r7, #8]
 8001190:	781b      	ldrb	r3, [r3, #0]
 8001192:	2b0d      	cmp	r3, #13
 8001194:	d102      	bne.n	800119c <_read+0x54>
 8001196:	68bb      	ldr	r3, [r7, #8]
 8001198:	220a      	movs	r2, #10
 800119a:	701a      	strb	r2, [r3, #0]

    return char_count;
 800119c:	697b      	ldr	r3, [r7, #20]

}
 800119e:	4618      	mov	r0, r3
 80011a0:	3718      	adds	r7, #24
 80011a2:	46bd      	mov	sp, r7
 80011a4:	bd80      	pop	{r7, pc}
 80011a6:	bf00      	nop
 80011a8:	2000009c 	.word	0x2000009c

080011ac <_write>:
 * @param file - not implemented (ignored)
 * @param ptr - where the characters should be read from
 * @param len - the number of characters to read
 * @return the number of characters read
 */
int _write(int file, char * ptr, int len) {
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b086      	sub	sp, #24
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	60f8      	str	r0, [r7, #12]
 80011b4:	60b9      	str	r1, [r7, #8]
 80011b6:	607a      	str	r2, [r7, #4]

    int char_count = 0;
 80011b8:	2300      	movs	r3, #0
 80011ba:	617b      	str	r3, [r7, #20]

    // push characters to the output buffer until we write len characters or the buffer fills up
    while (char_count < len && !cq_isfull(&output_buffer)) {
 80011bc:	e00b      	b.n	80011d6 <_write+0x2a>
        cq_push(&output_buffer, *ptr);
 80011be:	68bb      	ldr	r3, [r7, #8]
 80011c0:	781b      	ldrb	r3, [r3, #0]
 80011c2:	4619      	mov	r1, r3
 80011c4:	480e      	ldr	r0, [pc, #56]	; (8001200 <_write+0x54>)
 80011c6:	f7ff f9bd 	bl	8000544 <cq_push>
        char_count++;
 80011ca:	697b      	ldr	r3, [r7, #20]
 80011cc:	3301      	adds	r3, #1
 80011ce:	617b      	str	r3, [r7, #20]
        ptr++;
 80011d0:	68bb      	ldr	r3, [r7, #8]
 80011d2:	3301      	adds	r3, #1
 80011d4:	60bb      	str	r3, [r7, #8]
    while (char_count < len && !cq_isfull(&output_buffer)) {
 80011d6:	697a      	ldr	r2, [r7, #20]
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	429a      	cmp	r2, r3
 80011dc:	da05      	bge.n	80011ea <_write+0x3e>
 80011de:	4808      	ldr	r0, [pc, #32]	; (8001200 <_write+0x54>)
 80011e0:	f7ff fa13 	bl	800060a <cq_isfull>
 80011e4:	4603      	mov	r3, r0
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d0e9      	beq.n	80011be <_write+0x12>
    }

    // enable TXE interrupts so the data can be transmitted
    USART2->CR1 |= USART_CR1_TXEIE;
 80011ea:	4b06      	ldr	r3, [pc, #24]	; (8001204 <_write+0x58>)
 80011ec:	68db      	ldr	r3, [r3, #12]
 80011ee:	4a05      	ldr	r2, [pc, #20]	; (8001204 <_write+0x58>)
 80011f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80011f4:	60d3      	str	r3, [r2, #12]

    return char_count;
 80011f6:	697b      	ldr	r3, [r7, #20]
}
 80011f8:	4618      	mov	r0, r3
 80011fa:	3718      	adds	r7, #24
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bd80      	pop	{r7, pc}
 8001200:	200008ac 	.word	0x200008ac
 8001204:	40004400 	.word	0x40004400

08001208 <uart_isempty>:

int uart_isempty()
{
 8001208:	b580      	push	{r7, lr}
 800120a:	af00      	add	r7, sp, #0
	return cq_isempty(&input_buffer);
 800120c:	4802      	ldr	r0, [pc, #8]	; (8001218 <uart_isempty+0x10>)
 800120e:	f7ff f9f0 	bl	80005f2 <cq_isempty>
 8001212:	4603      	mov	r3, r0
}
 8001214:	4618      	mov	r0, r3
 8001216:	bd80      	pop	{r7, pc}
 8001218:	2000009c 	.word	0x2000009c

0800121c <uart_getc>:

char uart_getc()
{
 800121c:	b580      	push	{r7, lr}
 800121e:	af00      	add	r7, sp, #0
	return cq_pull(&input_buffer);
 8001220:	4802      	ldr	r0, [pc, #8]	; (800122c <uart_getc+0x10>)
 8001222:	f7ff f9bb 	bl	800059c <cq_pull>
 8001226:	4603      	mov	r3, r0
}
 8001228:	4618      	mov	r0, r3
 800122a:	bd80      	pop	{r7, pc}
 800122c:	2000009c 	.word	0x2000009c

08001230 <USART2_IRQHandler>:

/**
 * USART2 interrupt request handler
 */
void USART2_IRQHandler(void) {
 8001230:	b580      	push	{r7, lr}
 8001232:	b082      	sub	sp, #8
 8001234:	af00      	add	r7, sp, #0

    // if the RDR has received data and the input buffer is not full
    if ((USART2->SR & USART_SR_RXNE) && !cq_isfull(&input_buffer)) {
 8001236:	4b22      	ldr	r3, [pc, #136]	; (80012c0 <USART2_IRQHandler+0x90>)
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	f003 0320 	and.w	r3, r3, #32
 800123e:	2b00      	cmp	r3, #0
 8001240:	d020      	beq.n	8001284 <USART2_IRQHandler+0x54>
 8001242:	4820      	ldr	r0, [pc, #128]	; (80012c4 <USART2_IRQHandler+0x94>)
 8001244:	f7ff f9e1 	bl	800060a <cq_isfull>
 8001248:	4603      	mov	r3, r0
 800124a:	2b00      	cmp	r3, #0
 800124c:	d11a      	bne.n	8001284 <USART2_IRQHandler+0x54>

        // read the RDR
        char c = USART2->DR;
 800124e:	4b1c      	ldr	r3, [pc, #112]	; (80012c0 <USART2_IRQHandler+0x90>)
 8001250:	685b      	ldr	r3, [r3, #4]
 8001252:	71fb      	strb	r3, [r7, #7]

        // push the char in the RDR into the input buffer
        cq_push(&input_buffer, c);
 8001254:	79fb      	ldrb	r3, [r7, #7]
 8001256:	4619      	mov	r1, r3
 8001258:	481a      	ldr	r0, [pc, #104]	; (80012c4 <USART2_IRQHandler+0x94>)
 800125a:	f7ff f973 	bl	8000544 <cq_push>

        // echo the character to the output buffer
        if (!cq_isfull(&output_buffer)) {
 800125e:	481a      	ldr	r0, [pc, #104]	; (80012c8 <USART2_IRQHandler+0x98>)
 8001260:	f7ff f9d3 	bl	800060a <cq_isfull>
 8001264:	4603      	mov	r3, r0
 8001266:	2b00      	cmp	r3, #0
 8001268:	d104      	bne.n	8001274 <USART2_IRQHandler+0x44>
            cq_push(&output_buffer, c);
 800126a:	79fb      	ldrb	r3, [r7, #7]
 800126c:	4619      	mov	r1, r3
 800126e:	4816      	ldr	r0, [pc, #88]	; (80012c8 <USART2_IRQHandler+0x98>)
 8001270:	f7ff f968 	bl	8000544 <cq_push>
        }

        // enable TXE interrupts so the echo can be pushed
        USART2->CR1 |= USART_CR1_TXEIE;
 8001274:	4b12      	ldr	r3, [pc, #72]	; (80012c0 <USART2_IRQHandler+0x90>)
 8001276:	68db      	ldr	r3, [r3, #12]
 8001278:	4a11      	ldr	r2, [pc, #68]	; (80012c0 <USART2_IRQHandler+0x90>)
 800127a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800127e:	60d3      	str	r3, [r2, #12]
    if ((USART2->SR & USART_SR_RXNE) && !cq_isfull(&input_buffer)) {
 8001280:	bf00      	nop
            // disable TXE interrupts
            USART2->CR1 &= ~(USART_CR1_TXEIE);

        }
    }
}
 8001282:	e019      	b.n	80012b8 <USART2_IRQHandler+0x88>
    else if (USART2->SR & USART_SR_TXE) {
 8001284:	4b0e      	ldr	r3, [pc, #56]	; (80012c0 <USART2_IRQHandler+0x90>)
 8001286:	681b      	ldr	r3, [r3, #0]
 8001288:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800128c:	2b00      	cmp	r3, #0
 800128e:	d013      	beq.n	80012b8 <USART2_IRQHandler+0x88>
        if (!cq_isempty(&output_buffer)) {
 8001290:	480d      	ldr	r0, [pc, #52]	; (80012c8 <USART2_IRQHandler+0x98>)
 8001292:	f7ff f9ae 	bl	80005f2 <cq_isempty>
 8001296:	4603      	mov	r3, r0
 8001298:	2b00      	cmp	r3, #0
 800129a:	d107      	bne.n	80012ac <USART2_IRQHandler+0x7c>
            USART2->DR = cq_pull(&output_buffer);
 800129c:	480a      	ldr	r0, [pc, #40]	; (80012c8 <USART2_IRQHandler+0x98>)
 800129e:	f7ff f97d 	bl	800059c <cq_pull>
 80012a2:	4603      	mov	r3, r0
 80012a4:	461a      	mov	r2, r3
 80012a6:	4b06      	ldr	r3, [pc, #24]	; (80012c0 <USART2_IRQHandler+0x90>)
 80012a8:	605a      	str	r2, [r3, #4]
}
 80012aa:	e005      	b.n	80012b8 <USART2_IRQHandler+0x88>
            USART2->CR1 &= ~(USART_CR1_TXEIE);
 80012ac:	4b04      	ldr	r3, [pc, #16]	; (80012c0 <USART2_IRQHandler+0x90>)
 80012ae:	68db      	ldr	r3, [r3, #12]
 80012b0:	4a03      	ldr	r2, [pc, #12]	; (80012c0 <USART2_IRQHandler+0x90>)
 80012b2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80012b6:	60d3      	str	r3, [r2, #12]
}
 80012b8:	bf00      	nop
 80012ba:	3708      	adds	r7, #8
 80012bc:	46bd      	mov	sp, r7
 80012be:	bd80      	pop	{r7, pc}
 80012c0:	40004400 	.word	0x40004400
 80012c4:	2000009c 	.word	0x2000009c
 80012c8:	200008ac 	.word	0x200008ac

080012cc <Reset_Handler>:
 80012cc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001304 <LoopFillZerobss+0x12>
 80012d0:	480d      	ldr	r0, [pc, #52]	; (8001308 <LoopFillZerobss+0x16>)
 80012d2:	490e      	ldr	r1, [pc, #56]	; (800130c <LoopFillZerobss+0x1a>)
 80012d4:	4a0e      	ldr	r2, [pc, #56]	; (8001310 <LoopFillZerobss+0x1e>)
 80012d6:	2300      	movs	r3, #0
 80012d8:	e002      	b.n	80012e0 <LoopCopyDataInit>

080012da <CopyDataInit>:
 80012da:	58d4      	ldr	r4, [r2, r3]
 80012dc:	50c4      	str	r4, [r0, r3]
 80012de:	3304      	adds	r3, #4

080012e0 <LoopCopyDataInit>:
 80012e0:	18c4      	adds	r4, r0, r3
 80012e2:	428c      	cmp	r4, r1
 80012e4:	d3f9      	bcc.n	80012da <CopyDataInit>
 80012e6:	4a0b      	ldr	r2, [pc, #44]	; (8001314 <LoopFillZerobss+0x22>)
 80012e8:	4c0b      	ldr	r4, [pc, #44]	; (8001318 <LoopFillZerobss+0x26>)
 80012ea:	2300      	movs	r3, #0
 80012ec:	e001      	b.n	80012f2 <LoopFillZerobss>

080012ee <FillZerobss>:
 80012ee:	6013      	str	r3, [r2, #0]
 80012f0:	3204      	adds	r2, #4

080012f2 <LoopFillZerobss>:
 80012f2:	42a2      	cmp	r2, r4
 80012f4:	d3fb      	bcc.n	80012ee <FillZerobss>
 80012f6:	f7ff fe91 	bl	800101c <SystemInit>
 80012fa:	f001 fd63 	bl	8002dc4 <__libc_init_array>
 80012fe:	f7ff fa6f 	bl	80007e0 <main>
 8001302:	4770      	bx	lr
 8001304:	20020000 	.word	0x20020000
 8001308:	20000000 	.word	0x20000000
 800130c:	20000078 	.word	0x20000078
 8001310:	08003914 	.word	0x08003914
 8001314:	20000078 	.word	0x20000078
 8001318:	200014dc 	.word	0x200014dc

0800131c <ADC_IRQHandler>:
 800131c:	e7fe      	b.n	800131c <ADC_IRQHandler>
	...

08001320 <HAL_Init>:
 8001320:	b580      	push	{r7, lr}
 8001322:	af00      	add	r7, sp, #0
 8001324:	4b0e      	ldr	r3, [pc, #56]	; (8001360 <HAL_Init+0x40>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	4a0d      	ldr	r2, [pc, #52]	; (8001360 <HAL_Init+0x40>)
 800132a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800132e:	6013      	str	r3, [r2, #0]
 8001330:	4b0b      	ldr	r3, [pc, #44]	; (8001360 <HAL_Init+0x40>)
 8001332:	681b      	ldr	r3, [r3, #0]
 8001334:	4a0a      	ldr	r2, [pc, #40]	; (8001360 <HAL_Init+0x40>)
 8001336:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800133a:	6013      	str	r3, [r2, #0]
 800133c:	4b08      	ldr	r3, [pc, #32]	; (8001360 <HAL_Init+0x40>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	4a07      	ldr	r2, [pc, #28]	; (8001360 <HAL_Init+0x40>)
 8001342:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001346:	6013      	str	r3, [r2, #0]
 8001348:	2003      	movs	r0, #3
 800134a:	f000 f941 	bl	80015d0 <HAL_NVIC_SetPriorityGrouping>
 800134e:	200f      	movs	r0, #15
 8001350:	f000 f808 	bl	8001364 <HAL_InitTick>
 8001354:	f7ff fd30 	bl	8000db8 <HAL_MspInit>
 8001358:	2300      	movs	r3, #0
 800135a:	4618      	mov	r0, r3
 800135c:	bd80      	pop	{r7, pc}
 800135e:	bf00      	nop
 8001360:	40023c00 	.word	0x40023c00

08001364 <HAL_InitTick>:
 8001364:	b580      	push	{r7, lr}
 8001366:	b082      	sub	sp, #8
 8001368:	af00      	add	r7, sp, #0
 800136a:	6078      	str	r0, [r7, #4]
 800136c:	4b12      	ldr	r3, [pc, #72]	; (80013b8 <HAL_InitTick+0x54>)
 800136e:	681a      	ldr	r2, [r3, #0]
 8001370:	4b12      	ldr	r3, [pc, #72]	; (80013bc <HAL_InitTick+0x58>)
 8001372:	781b      	ldrb	r3, [r3, #0]
 8001374:	4619      	mov	r1, r3
 8001376:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800137a:	fbb3 f3f1 	udiv	r3, r3, r1
 800137e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001382:	4618      	mov	r0, r3
 8001384:	f000 f95d 	bl	8001642 <HAL_SYSTICK_Config>
 8001388:	4603      	mov	r3, r0
 800138a:	2b00      	cmp	r3, #0
 800138c:	d001      	beq.n	8001392 <HAL_InitTick+0x2e>
 800138e:	2301      	movs	r3, #1
 8001390:	e00e      	b.n	80013b0 <HAL_InitTick+0x4c>
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	2b0f      	cmp	r3, #15
 8001396:	d80a      	bhi.n	80013ae <HAL_InitTick+0x4a>
 8001398:	2200      	movs	r2, #0
 800139a:	6879      	ldr	r1, [r7, #4]
 800139c:	f04f 30ff 	mov.w	r0, #4294967295
 80013a0:	f000 f921 	bl	80015e6 <HAL_NVIC_SetPriority>
 80013a4:	4a06      	ldr	r2, [pc, #24]	; (80013c0 <HAL_InitTick+0x5c>)
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	6013      	str	r3, [r2, #0]
 80013aa:	2300      	movs	r3, #0
 80013ac:	e000      	b.n	80013b0 <HAL_InitTick+0x4c>
 80013ae:	2301      	movs	r3, #1
 80013b0:	4618      	mov	r0, r3
 80013b2:	3708      	adds	r7, #8
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bd80      	pop	{r7, pc}
 80013b8:	20000008 	.word	0x20000008
 80013bc:	20000010 	.word	0x20000010
 80013c0:	2000000c 	.word	0x2000000c

080013c4 <HAL_IncTick>:
 80013c4:	b480      	push	{r7}
 80013c6:	af00      	add	r7, sp, #0
 80013c8:	4b06      	ldr	r3, [pc, #24]	; (80013e4 <HAL_IncTick+0x20>)
 80013ca:	781b      	ldrb	r3, [r3, #0]
 80013cc:	461a      	mov	r2, r3
 80013ce:	4b06      	ldr	r3, [pc, #24]	; (80013e8 <HAL_IncTick+0x24>)
 80013d0:	681b      	ldr	r3, [r3, #0]
 80013d2:	4413      	add	r3, r2
 80013d4:	4a04      	ldr	r2, [pc, #16]	; (80013e8 <HAL_IncTick+0x24>)
 80013d6:	6013      	str	r3, [r2, #0]
 80013d8:	bf00      	nop
 80013da:	46bd      	mov	sp, r7
 80013dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e0:	4770      	bx	lr
 80013e2:	bf00      	nop
 80013e4:	20000010 	.word	0x20000010
 80013e8:	200014c8 	.word	0x200014c8

080013ec <HAL_GetTick>:
 80013ec:	b480      	push	{r7}
 80013ee:	af00      	add	r7, sp, #0
 80013f0:	4b03      	ldr	r3, [pc, #12]	; (8001400 <HAL_GetTick+0x14>)
 80013f2:	681b      	ldr	r3, [r3, #0]
 80013f4:	4618      	mov	r0, r3
 80013f6:	46bd      	mov	sp, r7
 80013f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013fc:	4770      	bx	lr
 80013fe:	bf00      	nop
 8001400:	200014c8 	.word	0x200014c8

08001404 <__NVIC_SetPriorityGrouping>:
 8001404:	b480      	push	{r7}
 8001406:	b085      	sub	sp, #20
 8001408:	af00      	add	r7, sp, #0
 800140a:	6078      	str	r0, [r7, #4]
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	f003 0307 	and.w	r3, r3, #7
 8001412:	60fb      	str	r3, [r7, #12]
 8001414:	4b0c      	ldr	r3, [pc, #48]	; (8001448 <__NVIC_SetPriorityGrouping+0x44>)
 8001416:	68db      	ldr	r3, [r3, #12]
 8001418:	60bb      	str	r3, [r7, #8]
 800141a:	68ba      	ldr	r2, [r7, #8]
 800141c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001420:	4013      	ands	r3, r2
 8001422:	60bb      	str	r3, [r7, #8]
 8001424:	68fb      	ldr	r3, [r7, #12]
 8001426:	021a      	lsls	r2, r3, #8
 8001428:	68bb      	ldr	r3, [r7, #8]
 800142a:	4313      	orrs	r3, r2
 800142c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001430:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001434:	60bb      	str	r3, [r7, #8]
 8001436:	4a04      	ldr	r2, [pc, #16]	; (8001448 <__NVIC_SetPriorityGrouping+0x44>)
 8001438:	68bb      	ldr	r3, [r7, #8]
 800143a:	60d3      	str	r3, [r2, #12]
 800143c:	bf00      	nop
 800143e:	3714      	adds	r7, #20
 8001440:	46bd      	mov	sp, r7
 8001442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001446:	4770      	bx	lr
 8001448:	e000ed00 	.word	0xe000ed00

0800144c <__NVIC_GetPriorityGrouping>:
 800144c:	b480      	push	{r7}
 800144e:	af00      	add	r7, sp, #0
 8001450:	4b04      	ldr	r3, [pc, #16]	; (8001464 <__NVIC_GetPriorityGrouping+0x18>)
 8001452:	68db      	ldr	r3, [r3, #12]
 8001454:	0a1b      	lsrs	r3, r3, #8
 8001456:	f003 0307 	and.w	r3, r3, #7
 800145a:	4618      	mov	r0, r3
 800145c:	46bd      	mov	sp, r7
 800145e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001462:	4770      	bx	lr
 8001464:	e000ed00 	.word	0xe000ed00

08001468 <__NVIC_EnableIRQ>:
 8001468:	b480      	push	{r7}
 800146a:	b083      	sub	sp, #12
 800146c:	af00      	add	r7, sp, #0
 800146e:	4603      	mov	r3, r0
 8001470:	71fb      	strb	r3, [r7, #7]
 8001472:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001476:	2b00      	cmp	r3, #0
 8001478:	db0b      	blt.n	8001492 <__NVIC_EnableIRQ+0x2a>
 800147a:	79fb      	ldrb	r3, [r7, #7]
 800147c:	f003 021f 	and.w	r2, r3, #31
 8001480:	4907      	ldr	r1, [pc, #28]	; (80014a0 <__NVIC_EnableIRQ+0x38>)
 8001482:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001486:	095b      	lsrs	r3, r3, #5
 8001488:	2001      	movs	r0, #1
 800148a:	fa00 f202 	lsl.w	r2, r0, r2
 800148e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001492:	bf00      	nop
 8001494:	370c      	adds	r7, #12
 8001496:	46bd      	mov	sp, r7
 8001498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800149c:	4770      	bx	lr
 800149e:	bf00      	nop
 80014a0:	e000e100 	.word	0xe000e100

080014a4 <__NVIC_SetPriority>:
 80014a4:	b480      	push	{r7}
 80014a6:	b083      	sub	sp, #12
 80014a8:	af00      	add	r7, sp, #0
 80014aa:	4603      	mov	r3, r0
 80014ac:	6039      	str	r1, [r7, #0]
 80014ae:	71fb      	strb	r3, [r7, #7]
 80014b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	db0a      	blt.n	80014ce <__NVIC_SetPriority+0x2a>
 80014b8:	683b      	ldr	r3, [r7, #0]
 80014ba:	b2da      	uxtb	r2, r3
 80014bc:	490c      	ldr	r1, [pc, #48]	; (80014f0 <__NVIC_SetPriority+0x4c>)
 80014be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014c2:	0112      	lsls	r2, r2, #4
 80014c4:	b2d2      	uxtb	r2, r2
 80014c6:	440b      	add	r3, r1
 80014c8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80014cc:	e00a      	b.n	80014e4 <__NVIC_SetPriority+0x40>
 80014ce:	683b      	ldr	r3, [r7, #0]
 80014d0:	b2da      	uxtb	r2, r3
 80014d2:	4908      	ldr	r1, [pc, #32]	; (80014f4 <__NVIC_SetPriority+0x50>)
 80014d4:	79fb      	ldrb	r3, [r7, #7]
 80014d6:	f003 030f 	and.w	r3, r3, #15
 80014da:	3b04      	subs	r3, #4
 80014dc:	0112      	lsls	r2, r2, #4
 80014de:	b2d2      	uxtb	r2, r2
 80014e0:	440b      	add	r3, r1
 80014e2:	761a      	strb	r2, [r3, #24]
 80014e4:	bf00      	nop
 80014e6:	370c      	adds	r7, #12
 80014e8:	46bd      	mov	sp, r7
 80014ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014ee:	4770      	bx	lr
 80014f0:	e000e100 	.word	0xe000e100
 80014f4:	e000ed00 	.word	0xe000ed00

080014f8 <NVIC_EncodePriority>:
 80014f8:	b480      	push	{r7}
 80014fa:	b089      	sub	sp, #36	; 0x24
 80014fc:	af00      	add	r7, sp, #0
 80014fe:	60f8      	str	r0, [r7, #12]
 8001500:	60b9      	str	r1, [r7, #8]
 8001502:	607a      	str	r2, [r7, #4]
 8001504:	68fb      	ldr	r3, [r7, #12]
 8001506:	f003 0307 	and.w	r3, r3, #7
 800150a:	61fb      	str	r3, [r7, #28]
 800150c:	69fb      	ldr	r3, [r7, #28]
 800150e:	f1c3 0307 	rsb	r3, r3, #7
 8001512:	2b04      	cmp	r3, #4
 8001514:	bf28      	it	cs
 8001516:	2304      	movcs	r3, #4
 8001518:	61bb      	str	r3, [r7, #24]
 800151a:	69fb      	ldr	r3, [r7, #28]
 800151c:	3304      	adds	r3, #4
 800151e:	2b06      	cmp	r3, #6
 8001520:	d902      	bls.n	8001528 <NVIC_EncodePriority+0x30>
 8001522:	69fb      	ldr	r3, [r7, #28]
 8001524:	3b03      	subs	r3, #3
 8001526:	e000      	b.n	800152a <NVIC_EncodePriority+0x32>
 8001528:	2300      	movs	r3, #0
 800152a:	617b      	str	r3, [r7, #20]
 800152c:	f04f 32ff 	mov.w	r2, #4294967295
 8001530:	69bb      	ldr	r3, [r7, #24]
 8001532:	fa02 f303 	lsl.w	r3, r2, r3
 8001536:	43da      	mvns	r2, r3
 8001538:	68bb      	ldr	r3, [r7, #8]
 800153a:	401a      	ands	r2, r3
 800153c:	697b      	ldr	r3, [r7, #20]
 800153e:	409a      	lsls	r2, r3
 8001540:	f04f 31ff 	mov.w	r1, #4294967295
 8001544:	697b      	ldr	r3, [r7, #20]
 8001546:	fa01 f303 	lsl.w	r3, r1, r3
 800154a:	43d9      	mvns	r1, r3
 800154c:	687b      	ldr	r3, [r7, #4]
 800154e:	400b      	ands	r3, r1
 8001550:	4313      	orrs	r3, r2
 8001552:	4618      	mov	r0, r3
 8001554:	3724      	adds	r7, #36	; 0x24
 8001556:	46bd      	mov	sp, r7
 8001558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155c:	4770      	bx	lr
	...

08001560 <__NVIC_SystemReset>:
 8001560:	b480      	push	{r7}
 8001562:	af00      	add	r7, sp, #0
 8001564:	f3bf 8f4f 	dsb	sy
 8001568:	bf00      	nop
 800156a:	4b06      	ldr	r3, [pc, #24]	; (8001584 <__NVIC_SystemReset+0x24>)
 800156c:	68db      	ldr	r3, [r3, #12]
 800156e:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8001572:	4904      	ldr	r1, [pc, #16]	; (8001584 <__NVIC_SystemReset+0x24>)
 8001574:	4b04      	ldr	r3, [pc, #16]	; (8001588 <__NVIC_SystemReset+0x28>)
 8001576:	4313      	orrs	r3, r2
 8001578:	60cb      	str	r3, [r1, #12]
 800157a:	f3bf 8f4f 	dsb	sy
 800157e:	bf00      	nop
 8001580:	bf00      	nop
 8001582:	e7fd      	b.n	8001580 <__NVIC_SystemReset+0x20>
 8001584:	e000ed00 	.word	0xe000ed00
 8001588:	05fa0004 	.word	0x05fa0004

0800158c <SysTick_Config>:
 800158c:	b580      	push	{r7, lr}
 800158e:	b082      	sub	sp, #8
 8001590:	af00      	add	r7, sp, #0
 8001592:	6078      	str	r0, [r7, #4]
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	3b01      	subs	r3, #1
 8001598:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800159c:	d301      	bcc.n	80015a2 <SysTick_Config+0x16>
 800159e:	2301      	movs	r3, #1
 80015a0:	e00f      	b.n	80015c2 <SysTick_Config+0x36>
 80015a2:	4a0a      	ldr	r2, [pc, #40]	; (80015cc <SysTick_Config+0x40>)
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	3b01      	subs	r3, #1
 80015a8:	6053      	str	r3, [r2, #4]
 80015aa:	210f      	movs	r1, #15
 80015ac:	f04f 30ff 	mov.w	r0, #4294967295
 80015b0:	f7ff ff78 	bl	80014a4 <__NVIC_SetPriority>
 80015b4:	4b05      	ldr	r3, [pc, #20]	; (80015cc <SysTick_Config+0x40>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	609a      	str	r2, [r3, #8]
 80015ba:	4b04      	ldr	r3, [pc, #16]	; (80015cc <SysTick_Config+0x40>)
 80015bc:	2207      	movs	r2, #7
 80015be:	601a      	str	r2, [r3, #0]
 80015c0:	2300      	movs	r3, #0
 80015c2:	4618      	mov	r0, r3
 80015c4:	3708      	adds	r7, #8
 80015c6:	46bd      	mov	sp, r7
 80015c8:	bd80      	pop	{r7, pc}
 80015ca:	bf00      	nop
 80015cc:	e000e010 	.word	0xe000e010

080015d0 <HAL_NVIC_SetPriorityGrouping>:
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b082      	sub	sp, #8
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	6078      	str	r0, [r7, #4]
 80015d8:	6878      	ldr	r0, [r7, #4]
 80015da:	f7ff ff13 	bl	8001404 <__NVIC_SetPriorityGrouping>
 80015de:	bf00      	nop
 80015e0:	3708      	adds	r7, #8
 80015e2:	46bd      	mov	sp, r7
 80015e4:	bd80      	pop	{r7, pc}

080015e6 <HAL_NVIC_SetPriority>:
 80015e6:	b580      	push	{r7, lr}
 80015e8:	b086      	sub	sp, #24
 80015ea:	af00      	add	r7, sp, #0
 80015ec:	4603      	mov	r3, r0
 80015ee:	60b9      	str	r1, [r7, #8]
 80015f0:	607a      	str	r2, [r7, #4]
 80015f2:	73fb      	strb	r3, [r7, #15]
 80015f4:	2300      	movs	r3, #0
 80015f6:	617b      	str	r3, [r7, #20]
 80015f8:	f7ff ff28 	bl	800144c <__NVIC_GetPriorityGrouping>
 80015fc:	6178      	str	r0, [r7, #20]
 80015fe:	687a      	ldr	r2, [r7, #4]
 8001600:	68b9      	ldr	r1, [r7, #8]
 8001602:	6978      	ldr	r0, [r7, #20]
 8001604:	f7ff ff78 	bl	80014f8 <NVIC_EncodePriority>
 8001608:	4602      	mov	r2, r0
 800160a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800160e:	4611      	mov	r1, r2
 8001610:	4618      	mov	r0, r3
 8001612:	f7ff ff47 	bl	80014a4 <__NVIC_SetPriority>
 8001616:	bf00      	nop
 8001618:	3718      	adds	r7, #24
 800161a:	46bd      	mov	sp, r7
 800161c:	bd80      	pop	{r7, pc}

0800161e <HAL_NVIC_EnableIRQ>:
 800161e:	b580      	push	{r7, lr}
 8001620:	b082      	sub	sp, #8
 8001622:	af00      	add	r7, sp, #0
 8001624:	4603      	mov	r3, r0
 8001626:	71fb      	strb	r3, [r7, #7]
 8001628:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800162c:	4618      	mov	r0, r3
 800162e:	f7ff ff1b 	bl	8001468 <__NVIC_EnableIRQ>
 8001632:	bf00      	nop
 8001634:	3708      	adds	r7, #8
 8001636:	46bd      	mov	sp, r7
 8001638:	bd80      	pop	{r7, pc}

0800163a <HAL_NVIC_SystemReset>:
 800163a:	b580      	push	{r7, lr}
 800163c:	af00      	add	r7, sp, #0
 800163e:	f7ff ff8f 	bl	8001560 <__NVIC_SystemReset>

08001642 <HAL_SYSTICK_Config>:
 8001642:	b580      	push	{r7, lr}
 8001644:	b082      	sub	sp, #8
 8001646:	af00      	add	r7, sp, #0
 8001648:	6078      	str	r0, [r7, #4]
 800164a:	6878      	ldr	r0, [r7, #4]
 800164c:	f7ff ff9e 	bl	800158c <SysTick_Config>
 8001650:	4603      	mov	r3, r0
 8001652:	4618      	mov	r0, r3
 8001654:	3708      	adds	r7, #8
 8001656:	46bd      	mov	sp, r7
 8001658:	bd80      	pop	{r7, pc}
	...

0800165c <HAL_GPIO_Init>:
 800165c:	b480      	push	{r7}
 800165e:	b089      	sub	sp, #36	; 0x24
 8001660:	af00      	add	r7, sp, #0
 8001662:	6078      	str	r0, [r7, #4]
 8001664:	6039      	str	r1, [r7, #0]
 8001666:	2300      	movs	r3, #0
 8001668:	617b      	str	r3, [r7, #20]
 800166a:	2300      	movs	r3, #0
 800166c:	613b      	str	r3, [r7, #16]
 800166e:	2300      	movs	r3, #0
 8001670:	61bb      	str	r3, [r7, #24]
 8001672:	2300      	movs	r3, #0
 8001674:	61fb      	str	r3, [r7, #28]
 8001676:	e165      	b.n	8001944 <HAL_GPIO_Init+0x2e8>
 8001678:	2201      	movs	r2, #1
 800167a:	69fb      	ldr	r3, [r7, #28]
 800167c:	fa02 f303 	lsl.w	r3, r2, r3
 8001680:	617b      	str	r3, [r7, #20]
 8001682:	683b      	ldr	r3, [r7, #0]
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	697a      	ldr	r2, [r7, #20]
 8001688:	4013      	ands	r3, r2
 800168a:	613b      	str	r3, [r7, #16]
 800168c:	693a      	ldr	r2, [r7, #16]
 800168e:	697b      	ldr	r3, [r7, #20]
 8001690:	429a      	cmp	r2, r3
 8001692:	f040 8154 	bne.w	800193e <HAL_GPIO_Init+0x2e2>
 8001696:	683b      	ldr	r3, [r7, #0]
 8001698:	685b      	ldr	r3, [r3, #4]
 800169a:	f003 0303 	and.w	r3, r3, #3
 800169e:	2b01      	cmp	r3, #1
 80016a0:	d005      	beq.n	80016ae <HAL_GPIO_Init+0x52>
 80016a2:	683b      	ldr	r3, [r7, #0]
 80016a4:	685b      	ldr	r3, [r3, #4]
 80016a6:	f003 0303 	and.w	r3, r3, #3
 80016aa:	2b02      	cmp	r3, #2
 80016ac:	d130      	bne.n	8001710 <HAL_GPIO_Init+0xb4>
 80016ae:	687b      	ldr	r3, [r7, #4]
 80016b0:	689b      	ldr	r3, [r3, #8]
 80016b2:	61bb      	str	r3, [r7, #24]
 80016b4:	69fb      	ldr	r3, [r7, #28]
 80016b6:	005b      	lsls	r3, r3, #1
 80016b8:	2203      	movs	r2, #3
 80016ba:	fa02 f303 	lsl.w	r3, r2, r3
 80016be:	43db      	mvns	r3, r3
 80016c0:	69ba      	ldr	r2, [r7, #24]
 80016c2:	4013      	ands	r3, r2
 80016c4:	61bb      	str	r3, [r7, #24]
 80016c6:	683b      	ldr	r3, [r7, #0]
 80016c8:	68da      	ldr	r2, [r3, #12]
 80016ca:	69fb      	ldr	r3, [r7, #28]
 80016cc:	005b      	lsls	r3, r3, #1
 80016ce:	fa02 f303 	lsl.w	r3, r2, r3
 80016d2:	69ba      	ldr	r2, [r7, #24]
 80016d4:	4313      	orrs	r3, r2
 80016d6:	61bb      	str	r3, [r7, #24]
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	69ba      	ldr	r2, [r7, #24]
 80016dc:	609a      	str	r2, [r3, #8]
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	685b      	ldr	r3, [r3, #4]
 80016e2:	61bb      	str	r3, [r7, #24]
 80016e4:	2201      	movs	r2, #1
 80016e6:	69fb      	ldr	r3, [r7, #28]
 80016e8:	fa02 f303 	lsl.w	r3, r2, r3
 80016ec:	43db      	mvns	r3, r3
 80016ee:	69ba      	ldr	r2, [r7, #24]
 80016f0:	4013      	ands	r3, r2
 80016f2:	61bb      	str	r3, [r7, #24]
 80016f4:	683b      	ldr	r3, [r7, #0]
 80016f6:	685b      	ldr	r3, [r3, #4]
 80016f8:	091b      	lsrs	r3, r3, #4
 80016fa:	f003 0201 	and.w	r2, r3, #1
 80016fe:	69fb      	ldr	r3, [r7, #28]
 8001700:	fa02 f303 	lsl.w	r3, r2, r3
 8001704:	69ba      	ldr	r2, [r7, #24]
 8001706:	4313      	orrs	r3, r2
 8001708:	61bb      	str	r3, [r7, #24]
 800170a:	687b      	ldr	r3, [r7, #4]
 800170c:	69ba      	ldr	r2, [r7, #24]
 800170e:	605a      	str	r2, [r3, #4]
 8001710:	683b      	ldr	r3, [r7, #0]
 8001712:	685b      	ldr	r3, [r3, #4]
 8001714:	f003 0303 	and.w	r3, r3, #3
 8001718:	2b03      	cmp	r3, #3
 800171a:	d017      	beq.n	800174c <HAL_GPIO_Init+0xf0>
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	68db      	ldr	r3, [r3, #12]
 8001720:	61bb      	str	r3, [r7, #24]
 8001722:	69fb      	ldr	r3, [r7, #28]
 8001724:	005b      	lsls	r3, r3, #1
 8001726:	2203      	movs	r2, #3
 8001728:	fa02 f303 	lsl.w	r3, r2, r3
 800172c:	43db      	mvns	r3, r3
 800172e:	69ba      	ldr	r2, [r7, #24]
 8001730:	4013      	ands	r3, r2
 8001732:	61bb      	str	r3, [r7, #24]
 8001734:	683b      	ldr	r3, [r7, #0]
 8001736:	689a      	ldr	r2, [r3, #8]
 8001738:	69fb      	ldr	r3, [r7, #28]
 800173a:	005b      	lsls	r3, r3, #1
 800173c:	fa02 f303 	lsl.w	r3, r2, r3
 8001740:	69ba      	ldr	r2, [r7, #24]
 8001742:	4313      	orrs	r3, r2
 8001744:	61bb      	str	r3, [r7, #24]
 8001746:	687b      	ldr	r3, [r7, #4]
 8001748:	69ba      	ldr	r2, [r7, #24]
 800174a:	60da      	str	r2, [r3, #12]
 800174c:	683b      	ldr	r3, [r7, #0]
 800174e:	685b      	ldr	r3, [r3, #4]
 8001750:	f003 0303 	and.w	r3, r3, #3
 8001754:	2b02      	cmp	r3, #2
 8001756:	d123      	bne.n	80017a0 <HAL_GPIO_Init+0x144>
 8001758:	69fb      	ldr	r3, [r7, #28]
 800175a:	08da      	lsrs	r2, r3, #3
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	3208      	adds	r2, #8
 8001760:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001764:	61bb      	str	r3, [r7, #24]
 8001766:	69fb      	ldr	r3, [r7, #28]
 8001768:	f003 0307 	and.w	r3, r3, #7
 800176c:	009b      	lsls	r3, r3, #2
 800176e:	220f      	movs	r2, #15
 8001770:	fa02 f303 	lsl.w	r3, r2, r3
 8001774:	43db      	mvns	r3, r3
 8001776:	69ba      	ldr	r2, [r7, #24]
 8001778:	4013      	ands	r3, r2
 800177a:	61bb      	str	r3, [r7, #24]
 800177c:	683b      	ldr	r3, [r7, #0]
 800177e:	691a      	ldr	r2, [r3, #16]
 8001780:	69fb      	ldr	r3, [r7, #28]
 8001782:	f003 0307 	and.w	r3, r3, #7
 8001786:	009b      	lsls	r3, r3, #2
 8001788:	fa02 f303 	lsl.w	r3, r2, r3
 800178c:	69ba      	ldr	r2, [r7, #24]
 800178e:	4313      	orrs	r3, r2
 8001790:	61bb      	str	r3, [r7, #24]
 8001792:	69fb      	ldr	r3, [r7, #28]
 8001794:	08da      	lsrs	r2, r3, #3
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	3208      	adds	r2, #8
 800179a:	69b9      	ldr	r1, [r7, #24]
 800179c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	61bb      	str	r3, [r7, #24]
 80017a6:	69fb      	ldr	r3, [r7, #28]
 80017a8:	005b      	lsls	r3, r3, #1
 80017aa:	2203      	movs	r2, #3
 80017ac:	fa02 f303 	lsl.w	r3, r2, r3
 80017b0:	43db      	mvns	r3, r3
 80017b2:	69ba      	ldr	r2, [r7, #24]
 80017b4:	4013      	ands	r3, r2
 80017b6:	61bb      	str	r3, [r7, #24]
 80017b8:	683b      	ldr	r3, [r7, #0]
 80017ba:	685b      	ldr	r3, [r3, #4]
 80017bc:	f003 0203 	and.w	r2, r3, #3
 80017c0:	69fb      	ldr	r3, [r7, #28]
 80017c2:	005b      	lsls	r3, r3, #1
 80017c4:	fa02 f303 	lsl.w	r3, r2, r3
 80017c8:	69ba      	ldr	r2, [r7, #24]
 80017ca:	4313      	orrs	r3, r2
 80017cc:	61bb      	str	r3, [r7, #24]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	69ba      	ldr	r2, [r7, #24]
 80017d2:	601a      	str	r2, [r3, #0]
 80017d4:	683b      	ldr	r3, [r7, #0]
 80017d6:	685b      	ldr	r3, [r3, #4]
 80017d8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80017dc:	2b00      	cmp	r3, #0
 80017de:	f000 80ae 	beq.w	800193e <HAL_GPIO_Init+0x2e2>
 80017e2:	2300      	movs	r3, #0
 80017e4:	60fb      	str	r3, [r7, #12]
 80017e6:	4b5d      	ldr	r3, [pc, #372]	; (800195c <HAL_GPIO_Init+0x300>)
 80017e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80017ea:	4a5c      	ldr	r2, [pc, #368]	; (800195c <HAL_GPIO_Init+0x300>)
 80017ec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80017f0:	6453      	str	r3, [r2, #68]	; 0x44
 80017f2:	4b5a      	ldr	r3, [pc, #360]	; (800195c <HAL_GPIO_Init+0x300>)
 80017f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80017f6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80017fa:	60fb      	str	r3, [r7, #12]
 80017fc:	68fb      	ldr	r3, [r7, #12]
 80017fe:	4a58      	ldr	r2, [pc, #352]	; (8001960 <HAL_GPIO_Init+0x304>)
 8001800:	69fb      	ldr	r3, [r7, #28]
 8001802:	089b      	lsrs	r3, r3, #2
 8001804:	3302      	adds	r3, #2
 8001806:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800180a:	61bb      	str	r3, [r7, #24]
 800180c:	69fb      	ldr	r3, [r7, #28]
 800180e:	f003 0303 	and.w	r3, r3, #3
 8001812:	009b      	lsls	r3, r3, #2
 8001814:	220f      	movs	r2, #15
 8001816:	fa02 f303 	lsl.w	r3, r2, r3
 800181a:	43db      	mvns	r3, r3
 800181c:	69ba      	ldr	r2, [r7, #24]
 800181e:	4013      	ands	r3, r2
 8001820:	61bb      	str	r3, [r7, #24]
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	4a4f      	ldr	r2, [pc, #316]	; (8001964 <HAL_GPIO_Init+0x308>)
 8001826:	4293      	cmp	r3, r2
 8001828:	d025      	beq.n	8001876 <HAL_GPIO_Init+0x21a>
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	4a4e      	ldr	r2, [pc, #312]	; (8001968 <HAL_GPIO_Init+0x30c>)
 800182e:	4293      	cmp	r3, r2
 8001830:	d01f      	beq.n	8001872 <HAL_GPIO_Init+0x216>
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	4a4d      	ldr	r2, [pc, #308]	; (800196c <HAL_GPIO_Init+0x310>)
 8001836:	4293      	cmp	r3, r2
 8001838:	d019      	beq.n	800186e <HAL_GPIO_Init+0x212>
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	4a4c      	ldr	r2, [pc, #304]	; (8001970 <HAL_GPIO_Init+0x314>)
 800183e:	4293      	cmp	r3, r2
 8001840:	d013      	beq.n	800186a <HAL_GPIO_Init+0x20e>
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	4a4b      	ldr	r2, [pc, #300]	; (8001974 <HAL_GPIO_Init+0x318>)
 8001846:	4293      	cmp	r3, r2
 8001848:	d00d      	beq.n	8001866 <HAL_GPIO_Init+0x20a>
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	4a4a      	ldr	r2, [pc, #296]	; (8001978 <HAL_GPIO_Init+0x31c>)
 800184e:	4293      	cmp	r3, r2
 8001850:	d007      	beq.n	8001862 <HAL_GPIO_Init+0x206>
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	4a49      	ldr	r2, [pc, #292]	; (800197c <HAL_GPIO_Init+0x320>)
 8001856:	4293      	cmp	r3, r2
 8001858:	d101      	bne.n	800185e <HAL_GPIO_Init+0x202>
 800185a:	2306      	movs	r3, #6
 800185c:	e00c      	b.n	8001878 <HAL_GPIO_Init+0x21c>
 800185e:	2307      	movs	r3, #7
 8001860:	e00a      	b.n	8001878 <HAL_GPIO_Init+0x21c>
 8001862:	2305      	movs	r3, #5
 8001864:	e008      	b.n	8001878 <HAL_GPIO_Init+0x21c>
 8001866:	2304      	movs	r3, #4
 8001868:	e006      	b.n	8001878 <HAL_GPIO_Init+0x21c>
 800186a:	2303      	movs	r3, #3
 800186c:	e004      	b.n	8001878 <HAL_GPIO_Init+0x21c>
 800186e:	2302      	movs	r3, #2
 8001870:	e002      	b.n	8001878 <HAL_GPIO_Init+0x21c>
 8001872:	2301      	movs	r3, #1
 8001874:	e000      	b.n	8001878 <HAL_GPIO_Init+0x21c>
 8001876:	2300      	movs	r3, #0
 8001878:	69fa      	ldr	r2, [r7, #28]
 800187a:	f002 0203 	and.w	r2, r2, #3
 800187e:	0092      	lsls	r2, r2, #2
 8001880:	4093      	lsls	r3, r2
 8001882:	69ba      	ldr	r2, [r7, #24]
 8001884:	4313      	orrs	r3, r2
 8001886:	61bb      	str	r3, [r7, #24]
 8001888:	4935      	ldr	r1, [pc, #212]	; (8001960 <HAL_GPIO_Init+0x304>)
 800188a:	69fb      	ldr	r3, [r7, #28]
 800188c:	089b      	lsrs	r3, r3, #2
 800188e:	3302      	adds	r3, #2
 8001890:	69ba      	ldr	r2, [r7, #24]
 8001892:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001896:	4b3a      	ldr	r3, [pc, #232]	; (8001980 <HAL_GPIO_Init+0x324>)
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	61bb      	str	r3, [r7, #24]
 800189c:	693b      	ldr	r3, [r7, #16]
 800189e:	43db      	mvns	r3, r3
 80018a0:	69ba      	ldr	r2, [r7, #24]
 80018a2:	4013      	ands	r3, r2
 80018a4:	61bb      	str	r3, [r7, #24]
 80018a6:	683b      	ldr	r3, [r7, #0]
 80018a8:	685b      	ldr	r3, [r3, #4]
 80018aa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d003      	beq.n	80018ba <HAL_GPIO_Init+0x25e>
 80018b2:	69ba      	ldr	r2, [r7, #24]
 80018b4:	693b      	ldr	r3, [r7, #16]
 80018b6:	4313      	orrs	r3, r2
 80018b8:	61bb      	str	r3, [r7, #24]
 80018ba:	4a31      	ldr	r2, [pc, #196]	; (8001980 <HAL_GPIO_Init+0x324>)
 80018bc:	69bb      	ldr	r3, [r7, #24]
 80018be:	6013      	str	r3, [r2, #0]
 80018c0:	4b2f      	ldr	r3, [pc, #188]	; (8001980 <HAL_GPIO_Init+0x324>)
 80018c2:	685b      	ldr	r3, [r3, #4]
 80018c4:	61bb      	str	r3, [r7, #24]
 80018c6:	693b      	ldr	r3, [r7, #16]
 80018c8:	43db      	mvns	r3, r3
 80018ca:	69ba      	ldr	r2, [r7, #24]
 80018cc:	4013      	ands	r3, r2
 80018ce:	61bb      	str	r3, [r7, #24]
 80018d0:	683b      	ldr	r3, [r7, #0]
 80018d2:	685b      	ldr	r3, [r3, #4]
 80018d4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018d8:	2b00      	cmp	r3, #0
 80018da:	d003      	beq.n	80018e4 <HAL_GPIO_Init+0x288>
 80018dc:	69ba      	ldr	r2, [r7, #24]
 80018de:	693b      	ldr	r3, [r7, #16]
 80018e0:	4313      	orrs	r3, r2
 80018e2:	61bb      	str	r3, [r7, #24]
 80018e4:	4a26      	ldr	r2, [pc, #152]	; (8001980 <HAL_GPIO_Init+0x324>)
 80018e6:	69bb      	ldr	r3, [r7, #24]
 80018e8:	6053      	str	r3, [r2, #4]
 80018ea:	4b25      	ldr	r3, [pc, #148]	; (8001980 <HAL_GPIO_Init+0x324>)
 80018ec:	689b      	ldr	r3, [r3, #8]
 80018ee:	61bb      	str	r3, [r7, #24]
 80018f0:	693b      	ldr	r3, [r7, #16]
 80018f2:	43db      	mvns	r3, r3
 80018f4:	69ba      	ldr	r2, [r7, #24]
 80018f6:	4013      	ands	r3, r2
 80018f8:	61bb      	str	r3, [r7, #24]
 80018fa:	683b      	ldr	r3, [r7, #0]
 80018fc:	685b      	ldr	r3, [r3, #4]
 80018fe:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001902:	2b00      	cmp	r3, #0
 8001904:	d003      	beq.n	800190e <HAL_GPIO_Init+0x2b2>
 8001906:	69ba      	ldr	r2, [r7, #24]
 8001908:	693b      	ldr	r3, [r7, #16]
 800190a:	4313      	orrs	r3, r2
 800190c:	61bb      	str	r3, [r7, #24]
 800190e:	4a1c      	ldr	r2, [pc, #112]	; (8001980 <HAL_GPIO_Init+0x324>)
 8001910:	69bb      	ldr	r3, [r7, #24]
 8001912:	6093      	str	r3, [r2, #8]
 8001914:	4b1a      	ldr	r3, [pc, #104]	; (8001980 <HAL_GPIO_Init+0x324>)
 8001916:	68db      	ldr	r3, [r3, #12]
 8001918:	61bb      	str	r3, [r7, #24]
 800191a:	693b      	ldr	r3, [r7, #16]
 800191c:	43db      	mvns	r3, r3
 800191e:	69ba      	ldr	r2, [r7, #24]
 8001920:	4013      	ands	r3, r2
 8001922:	61bb      	str	r3, [r7, #24]
 8001924:	683b      	ldr	r3, [r7, #0]
 8001926:	685b      	ldr	r3, [r3, #4]
 8001928:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800192c:	2b00      	cmp	r3, #0
 800192e:	d003      	beq.n	8001938 <HAL_GPIO_Init+0x2dc>
 8001930:	69ba      	ldr	r2, [r7, #24]
 8001932:	693b      	ldr	r3, [r7, #16]
 8001934:	4313      	orrs	r3, r2
 8001936:	61bb      	str	r3, [r7, #24]
 8001938:	4a11      	ldr	r2, [pc, #68]	; (8001980 <HAL_GPIO_Init+0x324>)
 800193a:	69bb      	ldr	r3, [r7, #24]
 800193c:	60d3      	str	r3, [r2, #12]
 800193e:	69fb      	ldr	r3, [r7, #28]
 8001940:	3301      	adds	r3, #1
 8001942:	61fb      	str	r3, [r7, #28]
 8001944:	69fb      	ldr	r3, [r7, #28]
 8001946:	2b0f      	cmp	r3, #15
 8001948:	f67f ae96 	bls.w	8001678 <HAL_GPIO_Init+0x1c>
 800194c:	bf00      	nop
 800194e:	bf00      	nop
 8001950:	3724      	adds	r7, #36	; 0x24
 8001952:	46bd      	mov	sp, r7
 8001954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001958:	4770      	bx	lr
 800195a:	bf00      	nop
 800195c:	40023800 	.word	0x40023800
 8001960:	40013800 	.word	0x40013800
 8001964:	40020000 	.word	0x40020000
 8001968:	40020400 	.word	0x40020400
 800196c:	40020800 	.word	0x40020800
 8001970:	40020c00 	.word	0x40020c00
 8001974:	40021000 	.word	0x40021000
 8001978:	40021400 	.word	0x40021400
 800197c:	40021800 	.word	0x40021800
 8001980:	40013c00 	.word	0x40013c00

08001984 <HAL_GPIO_ReadPin>:
 8001984:	b480      	push	{r7}
 8001986:	b085      	sub	sp, #20
 8001988:	af00      	add	r7, sp, #0
 800198a:	6078      	str	r0, [r7, #4]
 800198c:	460b      	mov	r3, r1
 800198e:	807b      	strh	r3, [r7, #2]
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	691a      	ldr	r2, [r3, #16]
 8001994:	887b      	ldrh	r3, [r7, #2]
 8001996:	4013      	ands	r3, r2
 8001998:	2b00      	cmp	r3, #0
 800199a:	d002      	beq.n	80019a2 <HAL_GPIO_ReadPin+0x1e>
 800199c:	2301      	movs	r3, #1
 800199e:	73fb      	strb	r3, [r7, #15]
 80019a0:	e001      	b.n	80019a6 <HAL_GPIO_ReadPin+0x22>
 80019a2:	2300      	movs	r3, #0
 80019a4:	73fb      	strb	r3, [r7, #15]
 80019a6:	7bfb      	ldrb	r3, [r7, #15]
 80019a8:	4618      	mov	r0, r3
 80019aa:	3714      	adds	r7, #20
 80019ac:	46bd      	mov	sp, r7
 80019ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b2:	4770      	bx	lr

080019b4 <HAL_GPIO_WritePin>:
 80019b4:	b480      	push	{r7}
 80019b6:	b083      	sub	sp, #12
 80019b8:	af00      	add	r7, sp, #0
 80019ba:	6078      	str	r0, [r7, #4]
 80019bc:	460b      	mov	r3, r1
 80019be:	807b      	strh	r3, [r7, #2]
 80019c0:	4613      	mov	r3, r2
 80019c2:	707b      	strb	r3, [r7, #1]
 80019c4:	787b      	ldrb	r3, [r7, #1]
 80019c6:	2b00      	cmp	r3, #0
 80019c8:	d003      	beq.n	80019d2 <HAL_GPIO_WritePin+0x1e>
 80019ca:	887a      	ldrh	r2, [r7, #2]
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	619a      	str	r2, [r3, #24]
 80019d0:	e003      	b.n	80019da <HAL_GPIO_WritePin+0x26>
 80019d2:	887b      	ldrh	r3, [r7, #2]
 80019d4:	041a      	lsls	r2, r3, #16
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	619a      	str	r2, [r3, #24]
 80019da:	bf00      	nop
 80019dc:	370c      	adds	r7, #12
 80019de:	46bd      	mov	sp, r7
 80019e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e4:	4770      	bx	lr
	...

080019e8 <HAL_GPIO_EXTI_IRQHandler>:
 80019e8:	b580      	push	{r7, lr}
 80019ea:	b082      	sub	sp, #8
 80019ec:	af00      	add	r7, sp, #0
 80019ee:	4603      	mov	r3, r0
 80019f0:	80fb      	strh	r3, [r7, #6]
 80019f2:	4b08      	ldr	r3, [pc, #32]	; (8001a14 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80019f4:	695a      	ldr	r2, [r3, #20]
 80019f6:	88fb      	ldrh	r3, [r7, #6]
 80019f8:	4013      	ands	r3, r2
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d006      	beq.n	8001a0c <HAL_GPIO_EXTI_IRQHandler+0x24>
 80019fe:	4a05      	ldr	r2, [pc, #20]	; (8001a14 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001a00:	88fb      	ldrh	r3, [r7, #6]
 8001a02:	6153      	str	r3, [r2, #20]
 8001a04:	88fb      	ldrh	r3, [r7, #6]
 8001a06:	4618      	mov	r0, r3
 8001a08:	f7fe fe6c 	bl	80006e4 <HAL_GPIO_EXTI_Callback>
 8001a0c:	bf00      	nop
 8001a0e:	3708      	adds	r7, #8
 8001a10:	46bd      	mov	sp, r7
 8001a12:	bd80      	pop	{r7, pc}
 8001a14:	40013c00 	.word	0x40013c00

08001a18 <HAL_RCC_ClockConfig>:
 8001a18:	b580      	push	{r7, lr}
 8001a1a:	b084      	sub	sp, #16
 8001a1c:	af00      	add	r7, sp, #0
 8001a1e:	6078      	str	r0, [r7, #4]
 8001a20:	6039      	str	r1, [r7, #0]
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d101      	bne.n	8001a2c <HAL_RCC_ClockConfig+0x14>
 8001a28:	2301      	movs	r3, #1
 8001a2a:	e0cc      	b.n	8001bc6 <HAL_RCC_ClockConfig+0x1ae>
 8001a2c:	4b68      	ldr	r3, [pc, #416]	; (8001bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	f003 030f 	and.w	r3, r3, #15
 8001a34:	683a      	ldr	r2, [r7, #0]
 8001a36:	429a      	cmp	r2, r3
 8001a38:	d90c      	bls.n	8001a54 <HAL_RCC_ClockConfig+0x3c>
 8001a3a:	4b65      	ldr	r3, [pc, #404]	; (8001bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8001a3c:	683a      	ldr	r2, [r7, #0]
 8001a3e:	b2d2      	uxtb	r2, r2
 8001a40:	701a      	strb	r2, [r3, #0]
 8001a42:	4b63      	ldr	r3, [pc, #396]	; (8001bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8001a44:	681b      	ldr	r3, [r3, #0]
 8001a46:	f003 030f 	and.w	r3, r3, #15
 8001a4a:	683a      	ldr	r2, [r7, #0]
 8001a4c:	429a      	cmp	r2, r3
 8001a4e:	d001      	beq.n	8001a54 <HAL_RCC_ClockConfig+0x3c>
 8001a50:	2301      	movs	r3, #1
 8001a52:	e0b8      	b.n	8001bc6 <HAL_RCC_ClockConfig+0x1ae>
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	f003 0302 	and.w	r3, r3, #2
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d020      	beq.n	8001aa2 <HAL_RCC_ClockConfig+0x8a>
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	f003 0304 	and.w	r3, r3, #4
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	d005      	beq.n	8001a78 <HAL_RCC_ClockConfig+0x60>
 8001a6c:	4b59      	ldr	r3, [pc, #356]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001a6e:	689b      	ldr	r3, [r3, #8]
 8001a70:	4a58      	ldr	r2, [pc, #352]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001a72:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8001a76:	6093      	str	r3, [r2, #8]
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	681b      	ldr	r3, [r3, #0]
 8001a7c:	f003 0308 	and.w	r3, r3, #8
 8001a80:	2b00      	cmp	r3, #0
 8001a82:	d005      	beq.n	8001a90 <HAL_RCC_ClockConfig+0x78>
 8001a84:	4b53      	ldr	r3, [pc, #332]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001a86:	689b      	ldr	r3, [r3, #8]
 8001a88:	4a52      	ldr	r2, [pc, #328]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001a8a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8001a8e:	6093      	str	r3, [r2, #8]
 8001a90:	4b50      	ldr	r3, [pc, #320]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001a92:	689b      	ldr	r3, [r3, #8]
 8001a94:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	689b      	ldr	r3, [r3, #8]
 8001a9c:	494d      	ldr	r1, [pc, #308]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001a9e:	4313      	orrs	r3, r2
 8001aa0:	608b      	str	r3, [r1, #8]
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	681b      	ldr	r3, [r3, #0]
 8001aa6:	f003 0301 	and.w	r3, r3, #1
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d044      	beq.n	8001b38 <HAL_RCC_ClockConfig+0x120>
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	685b      	ldr	r3, [r3, #4]
 8001ab2:	2b01      	cmp	r3, #1
 8001ab4:	d107      	bne.n	8001ac6 <HAL_RCC_ClockConfig+0xae>
 8001ab6:	4b47      	ldr	r3, [pc, #284]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001abe:	2b00      	cmp	r3, #0
 8001ac0:	d119      	bne.n	8001af6 <HAL_RCC_ClockConfig+0xde>
 8001ac2:	2301      	movs	r3, #1
 8001ac4:	e07f      	b.n	8001bc6 <HAL_RCC_ClockConfig+0x1ae>
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	685b      	ldr	r3, [r3, #4]
 8001aca:	2b02      	cmp	r3, #2
 8001acc:	d003      	beq.n	8001ad6 <HAL_RCC_ClockConfig+0xbe>
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	685b      	ldr	r3, [r3, #4]
 8001ad2:	2b03      	cmp	r3, #3
 8001ad4:	d107      	bne.n	8001ae6 <HAL_RCC_ClockConfig+0xce>
 8001ad6:	4b3f      	ldr	r3, [pc, #252]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001ad8:	681b      	ldr	r3, [r3, #0]
 8001ada:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001ade:	2b00      	cmp	r3, #0
 8001ae0:	d109      	bne.n	8001af6 <HAL_RCC_ClockConfig+0xde>
 8001ae2:	2301      	movs	r3, #1
 8001ae4:	e06f      	b.n	8001bc6 <HAL_RCC_ClockConfig+0x1ae>
 8001ae6:	4b3b      	ldr	r3, [pc, #236]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	f003 0302 	and.w	r3, r3, #2
 8001aee:	2b00      	cmp	r3, #0
 8001af0:	d101      	bne.n	8001af6 <HAL_RCC_ClockConfig+0xde>
 8001af2:	2301      	movs	r3, #1
 8001af4:	e067      	b.n	8001bc6 <HAL_RCC_ClockConfig+0x1ae>
 8001af6:	4b37      	ldr	r3, [pc, #220]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001af8:	689b      	ldr	r3, [r3, #8]
 8001afa:	f023 0203 	bic.w	r2, r3, #3
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	685b      	ldr	r3, [r3, #4]
 8001b02:	4934      	ldr	r1, [pc, #208]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001b04:	4313      	orrs	r3, r2
 8001b06:	608b      	str	r3, [r1, #8]
 8001b08:	f7ff fc70 	bl	80013ec <HAL_GetTick>
 8001b0c:	60f8      	str	r0, [r7, #12]
 8001b0e:	e00a      	b.n	8001b26 <HAL_RCC_ClockConfig+0x10e>
 8001b10:	f7ff fc6c 	bl	80013ec <HAL_GetTick>
 8001b14:	4602      	mov	r2, r0
 8001b16:	68fb      	ldr	r3, [r7, #12]
 8001b18:	1ad3      	subs	r3, r2, r3
 8001b1a:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b1e:	4293      	cmp	r3, r2
 8001b20:	d901      	bls.n	8001b26 <HAL_RCC_ClockConfig+0x10e>
 8001b22:	2303      	movs	r3, #3
 8001b24:	e04f      	b.n	8001bc6 <HAL_RCC_ClockConfig+0x1ae>
 8001b26:	4b2b      	ldr	r3, [pc, #172]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001b28:	689b      	ldr	r3, [r3, #8]
 8001b2a:	f003 020c 	and.w	r2, r3, #12
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	685b      	ldr	r3, [r3, #4]
 8001b32:	009b      	lsls	r3, r3, #2
 8001b34:	429a      	cmp	r2, r3
 8001b36:	d1eb      	bne.n	8001b10 <HAL_RCC_ClockConfig+0xf8>
 8001b38:	4b25      	ldr	r3, [pc, #148]	; (8001bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8001b3a:	681b      	ldr	r3, [r3, #0]
 8001b3c:	f003 030f 	and.w	r3, r3, #15
 8001b40:	683a      	ldr	r2, [r7, #0]
 8001b42:	429a      	cmp	r2, r3
 8001b44:	d20c      	bcs.n	8001b60 <HAL_RCC_ClockConfig+0x148>
 8001b46:	4b22      	ldr	r3, [pc, #136]	; (8001bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8001b48:	683a      	ldr	r2, [r7, #0]
 8001b4a:	b2d2      	uxtb	r2, r2
 8001b4c:	701a      	strb	r2, [r3, #0]
 8001b4e:	4b20      	ldr	r3, [pc, #128]	; (8001bd0 <HAL_RCC_ClockConfig+0x1b8>)
 8001b50:	681b      	ldr	r3, [r3, #0]
 8001b52:	f003 030f 	and.w	r3, r3, #15
 8001b56:	683a      	ldr	r2, [r7, #0]
 8001b58:	429a      	cmp	r2, r3
 8001b5a:	d001      	beq.n	8001b60 <HAL_RCC_ClockConfig+0x148>
 8001b5c:	2301      	movs	r3, #1
 8001b5e:	e032      	b.n	8001bc6 <HAL_RCC_ClockConfig+0x1ae>
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	f003 0304 	and.w	r3, r3, #4
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d008      	beq.n	8001b7e <HAL_RCC_ClockConfig+0x166>
 8001b6c:	4b19      	ldr	r3, [pc, #100]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001b6e:	689b      	ldr	r3, [r3, #8]
 8001b70:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	68db      	ldr	r3, [r3, #12]
 8001b78:	4916      	ldr	r1, [pc, #88]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001b7a:	4313      	orrs	r3, r2
 8001b7c:	608b      	str	r3, [r1, #8]
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	681b      	ldr	r3, [r3, #0]
 8001b82:	f003 0308 	and.w	r3, r3, #8
 8001b86:	2b00      	cmp	r3, #0
 8001b88:	d009      	beq.n	8001b9e <HAL_RCC_ClockConfig+0x186>
 8001b8a:	4b12      	ldr	r3, [pc, #72]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001b8c:	689b      	ldr	r3, [r3, #8]
 8001b8e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	691b      	ldr	r3, [r3, #16]
 8001b96:	00db      	lsls	r3, r3, #3
 8001b98:	490e      	ldr	r1, [pc, #56]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001b9a:	4313      	orrs	r3, r2
 8001b9c:	608b      	str	r3, [r1, #8]
 8001b9e:	f000 f821 	bl	8001be4 <HAL_RCC_GetSysClockFreq>
 8001ba2:	4602      	mov	r2, r0
 8001ba4:	4b0b      	ldr	r3, [pc, #44]	; (8001bd4 <HAL_RCC_ClockConfig+0x1bc>)
 8001ba6:	689b      	ldr	r3, [r3, #8]
 8001ba8:	091b      	lsrs	r3, r3, #4
 8001baa:	f003 030f 	and.w	r3, r3, #15
 8001bae:	490a      	ldr	r1, [pc, #40]	; (8001bd8 <HAL_RCC_ClockConfig+0x1c0>)
 8001bb0:	5ccb      	ldrb	r3, [r1, r3]
 8001bb2:	fa22 f303 	lsr.w	r3, r2, r3
 8001bb6:	4a09      	ldr	r2, [pc, #36]	; (8001bdc <HAL_RCC_ClockConfig+0x1c4>)
 8001bb8:	6013      	str	r3, [r2, #0]
 8001bba:	4b09      	ldr	r3, [pc, #36]	; (8001be0 <HAL_RCC_ClockConfig+0x1c8>)
 8001bbc:	681b      	ldr	r3, [r3, #0]
 8001bbe:	4618      	mov	r0, r3
 8001bc0:	f7ff fbd0 	bl	8001364 <HAL_InitTick>
 8001bc4:	2300      	movs	r3, #0
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	3710      	adds	r7, #16
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	bd80      	pop	{r7, pc}
 8001bce:	bf00      	nop
 8001bd0:	40023c00 	.word	0x40023c00
 8001bd4:	40023800 	.word	0x40023800
 8001bd8:	08003890 	.word	0x08003890
 8001bdc:	20000008 	.word	0x20000008
 8001be0:	2000000c 	.word	0x2000000c

08001be4 <HAL_RCC_GetSysClockFreq>:
 8001be4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001be8:	b087      	sub	sp, #28
 8001bea:	af00      	add	r7, sp, #0
 8001bec:	2600      	movs	r6, #0
 8001bee:	60fe      	str	r6, [r7, #12]
 8001bf0:	2600      	movs	r6, #0
 8001bf2:	617e      	str	r6, [r7, #20]
 8001bf4:	2600      	movs	r6, #0
 8001bf6:	60be      	str	r6, [r7, #8]
 8001bf8:	2600      	movs	r6, #0
 8001bfa:	607e      	str	r6, [r7, #4]
 8001bfc:	2600      	movs	r6, #0
 8001bfe:	613e      	str	r6, [r7, #16]
 8001c00:	4ea3      	ldr	r6, [pc, #652]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001c02:	68b6      	ldr	r6, [r6, #8]
 8001c04:	f006 060c 	and.w	r6, r6, #12
 8001c08:	2e0c      	cmp	r6, #12
 8001c0a:	f200 8137 	bhi.w	8001e7c <HAL_RCC_GetSysClockFreq+0x298>
 8001c0e:	f20f 0c08 	addw	ip, pc, #8
 8001c12:	f85c f026 	ldr.w	pc, [ip, r6, lsl #2]
 8001c16:	bf00      	nop
 8001c18:	08001c4d 	.word	0x08001c4d
 8001c1c:	08001e7d 	.word	0x08001e7d
 8001c20:	08001e7d 	.word	0x08001e7d
 8001c24:	08001e7d 	.word	0x08001e7d
 8001c28:	08001c53 	.word	0x08001c53
 8001c2c:	08001e7d 	.word	0x08001e7d
 8001c30:	08001e7d 	.word	0x08001e7d
 8001c34:	08001e7d 	.word	0x08001e7d
 8001c38:	08001c59 	.word	0x08001c59
 8001c3c:	08001e7d 	.word	0x08001e7d
 8001c40:	08001e7d 	.word	0x08001e7d
 8001c44:	08001e7d 	.word	0x08001e7d
 8001c48:	08001d6f 	.word	0x08001d6f
 8001c4c:	4b91      	ldr	r3, [pc, #580]	; (8001e94 <HAL_RCC_GetSysClockFreq+0x2b0>)
 8001c4e:	613b      	str	r3, [r7, #16]
 8001c50:	e117      	b.n	8001e82 <HAL_RCC_GetSysClockFreq+0x29e>
 8001c52:	4b91      	ldr	r3, [pc, #580]	; (8001e98 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8001c54:	613b      	str	r3, [r7, #16]
 8001c56:	e114      	b.n	8001e82 <HAL_RCC_GetSysClockFreq+0x29e>
 8001c58:	4b8d      	ldr	r3, [pc, #564]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001c5a:	685b      	ldr	r3, [r3, #4]
 8001c5c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001c60:	60fb      	str	r3, [r7, #12]
 8001c62:	4b8b      	ldr	r3, [pc, #556]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001c64:	685b      	ldr	r3, [r3, #4]
 8001c66:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d024      	beq.n	8001cb8 <HAL_RCC_GetSysClockFreq+0xd4>
 8001c6e:	4b88      	ldr	r3, [pc, #544]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001c70:	685b      	ldr	r3, [r3, #4]
 8001c72:	099b      	lsrs	r3, r3, #6
 8001c74:	461a      	mov	r2, r3
 8001c76:	f04f 0300 	mov.w	r3, #0
 8001c7a:	f240 14ff 	movw	r4, #511	; 0x1ff
 8001c7e:	f04f 0500 	mov.w	r5, #0
 8001c82:	ea02 0004 	and.w	r0, r2, r4
 8001c86:	ea03 0105 	and.w	r1, r3, r5
 8001c8a:	4b83      	ldr	r3, [pc, #524]	; (8001e98 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8001c8c:	fb03 f201 	mul.w	r2, r3, r1
 8001c90:	2300      	movs	r3, #0
 8001c92:	fb03 f300 	mul.w	r3, r3, r0
 8001c96:	4413      	add	r3, r2
 8001c98:	4a7f      	ldr	r2, [pc, #508]	; (8001e98 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8001c9a:	fba0 0102 	umull	r0, r1, r0, r2
 8001c9e:	440b      	add	r3, r1
 8001ca0:	4619      	mov	r1, r3
 8001ca2:	68fb      	ldr	r3, [r7, #12]
 8001ca4:	461a      	mov	r2, r3
 8001ca6:	f04f 0300 	mov.w	r3, #0
 8001caa:	f7fe faab 	bl	8000204 <__aeabi_uldivmod>
 8001cae:	4602      	mov	r2, r0
 8001cb0:	460b      	mov	r3, r1
 8001cb2:	4613      	mov	r3, r2
 8001cb4:	617b      	str	r3, [r7, #20]
 8001cb6:	e04c      	b.n	8001d52 <HAL_RCC_GetSysClockFreq+0x16e>
 8001cb8:	4b75      	ldr	r3, [pc, #468]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001cba:	685b      	ldr	r3, [r3, #4]
 8001cbc:	099b      	lsrs	r3, r3, #6
 8001cbe:	461a      	mov	r2, r3
 8001cc0:	f04f 0300 	mov.w	r3, #0
 8001cc4:	f240 10ff 	movw	r0, #511	; 0x1ff
 8001cc8:	f04f 0100 	mov.w	r1, #0
 8001ccc:	ea02 0800 	and.w	r8, r2, r0
 8001cd0:	ea03 0901 	and.w	r9, r3, r1
 8001cd4:	4640      	mov	r0, r8
 8001cd6:	4649      	mov	r1, r9
 8001cd8:	f04f 0200 	mov.w	r2, #0
 8001cdc:	f04f 0300 	mov.w	r3, #0
 8001ce0:	014b      	lsls	r3, r1, #5
 8001ce2:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8001ce6:	0142      	lsls	r2, r0, #5
 8001ce8:	4610      	mov	r0, r2
 8001cea:	4619      	mov	r1, r3
 8001cec:	ebb0 0008 	subs.w	r0, r0, r8
 8001cf0:	eb61 0109 	sbc.w	r1, r1, r9
 8001cf4:	f04f 0200 	mov.w	r2, #0
 8001cf8:	f04f 0300 	mov.w	r3, #0
 8001cfc:	018b      	lsls	r3, r1, #6
 8001cfe:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8001d02:	0182      	lsls	r2, r0, #6
 8001d04:	1a12      	subs	r2, r2, r0
 8001d06:	eb63 0301 	sbc.w	r3, r3, r1
 8001d0a:	f04f 0000 	mov.w	r0, #0
 8001d0e:	f04f 0100 	mov.w	r1, #0
 8001d12:	00d9      	lsls	r1, r3, #3
 8001d14:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8001d18:	00d0      	lsls	r0, r2, #3
 8001d1a:	4602      	mov	r2, r0
 8001d1c:	460b      	mov	r3, r1
 8001d1e:	eb12 0208 	adds.w	r2, r2, r8
 8001d22:	eb43 0309 	adc.w	r3, r3, r9
 8001d26:	f04f 0000 	mov.w	r0, #0
 8001d2a:	f04f 0100 	mov.w	r1, #0
 8001d2e:	0299      	lsls	r1, r3, #10
 8001d30:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8001d34:	0290      	lsls	r0, r2, #10
 8001d36:	4602      	mov	r2, r0
 8001d38:	460b      	mov	r3, r1
 8001d3a:	4610      	mov	r0, r2
 8001d3c:	4619      	mov	r1, r3
 8001d3e:	68fb      	ldr	r3, [r7, #12]
 8001d40:	461a      	mov	r2, r3
 8001d42:	f04f 0300 	mov.w	r3, #0
 8001d46:	f7fe fa5d 	bl	8000204 <__aeabi_uldivmod>
 8001d4a:	4602      	mov	r2, r0
 8001d4c:	460b      	mov	r3, r1
 8001d4e:	4613      	mov	r3, r2
 8001d50:	617b      	str	r3, [r7, #20]
 8001d52:	4b4f      	ldr	r3, [pc, #316]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001d54:	685b      	ldr	r3, [r3, #4]
 8001d56:	0c1b      	lsrs	r3, r3, #16
 8001d58:	f003 0303 	and.w	r3, r3, #3
 8001d5c:	3301      	adds	r3, #1
 8001d5e:	005b      	lsls	r3, r3, #1
 8001d60:	60bb      	str	r3, [r7, #8]
 8001d62:	697a      	ldr	r2, [r7, #20]
 8001d64:	68bb      	ldr	r3, [r7, #8]
 8001d66:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d6a:	613b      	str	r3, [r7, #16]
 8001d6c:	e089      	b.n	8001e82 <HAL_RCC_GetSysClockFreq+0x29e>
 8001d6e:	4948      	ldr	r1, [pc, #288]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001d70:	6849      	ldr	r1, [r1, #4]
 8001d72:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8001d76:	60f9      	str	r1, [r7, #12]
 8001d78:	4945      	ldr	r1, [pc, #276]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001d7a:	6849      	ldr	r1, [r1, #4]
 8001d7c:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8001d80:	2900      	cmp	r1, #0
 8001d82:	d024      	beq.n	8001dce <HAL_RCC_GetSysClockFreq+0x1ea>
 8001d84:	4942      	ldr	r1, [pc, #264]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001d86:	6849      	ldr	r1, [r1, #4]
 8001d88:	0989      	lsrs	r1, r1, #6
 8001d8a:	4608      	mov	r0, r1
 8001d8c:	f04f 0100 	mov.w	r1, #0
 8001d90:	f240 14ff 	movw	r4, #511	; 0x1ff
 8001d94:	f04f 0500 	mov.w	r5, #0
 8001d98:	ea00 0204 	and.w	r2, r0, r4
 8001d9c:	ea01 0305 	and.w	r3, r1, r5
 8001da0:	493d      	ldr	r1, [pc, #244]	; (8001e98 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8001da2:	fb01 f003 	mul.w	r0, r1, r3
 8001da6:	2100      	movs	r1, #0
 8001da8:	fb01 f102 	mul.w	r1, r1, r2
 8001dac:	1844      	adds	r4, r0, r1
 8001dae:	493a      	ldr	r1, [pc, #232]	; (8001e98 <HAL_RCC_GetSysClockFreq+0x2b4>)
 8001db0:	fba2 0101 	umull	r0, r1, r2, r1
 8001db4:	1863      	adds	r3, r4, r1
 8001db6:	4619      	mov	r1, r3
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	461a      	mov	r2, r3
 8001dbc:	f04f 0300 	mov.w	r3, #0
 8001dc0:	f7fe fa20 	bl	8000204 <__aeabi_uldivmod>
 8001dc4:	4602      	mov	r2, r0
 8001dc6:	460b      	mov	r3, r1
 8001dc8:	4613      	mov	r3, r2
 8001dca:	617b      	str	r3, [r7, #20]
 8001dcc:	e04a      	b.n	8001e64 <HAL_RCC_GetSysClockFreq+0x280>
 8001dce:	4b30      	ldr	r3, [pc, #192]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001dd0:	685b      	ldr	r3, [r3, #4]
 8001dd2:	099b      	lsrs	r3, r3, #6
 8001dd4:	461a      	mov	r2, r3
 8001dd6:	f04f 0300 	mov.w	r3, #0
 8001dda:	f240 10ff 	movw	r0, #511	; 0x1ff
 8001dde:	f04f 0100 	mov.w	r1, #0
 8001de2:	ea02 0400 	and.w	r4, r2, r0
 8001de6:	ea03 0501 	and.w	r5, r3, r1
 8001dea:	4620      	mov	r0, r4
 8001dec:	4629      	mov	r1, r5
 8001dee:	f04f 0200 	mov.w	r2, #0
 8001df2:	f04f 0300 	mov.w	r3, #0
 8001df6:	014b      	lsls	r3, r1, #5
 8001df8:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8001dfc:	0142      	lsls	r2, r0, #5
 8001dfe:	4610      	mov	r0, r2
 8001e00:	4619      	mov	r1, r3
 8001e02:	1b00      	subs	r0, r0, r4
 8001e04:	eb61 0105 	sbc.w	r1, r1, r5
 8001e08:	f04f 0200 	mov.w	r2, #0
 8001e0c:	f04f 0300 	mov.w	r3, #0
 8001e10:	018b      	lsls	r3, r1, #6
 8001e12:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8001e16:	0182      	lsls	r2, r0, #6
 8001e18:	1a12      	subs	r2, r2, r0
 8001e1a:	eb63 0301 	sbc.w	r3, r3, r1
 8001e1e:	f04f 0000 	mov.w	r0, #0
 8001e22:	f04f 0100 	mov.w	r1, #0
 8001e26:	00d9      	lsls	r1, r3, #3
 8001e28:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8001e2c:	00d0      	lsls	r0, r2, #3
 8001e2e:	4602      	mov	r2, r0
 8001e30:	460b      	mov	r3, r1
 8001e32:	1912      	adds	r2, r2, r4
 8001e34:	eb45 0303 	adc.w	r3, r5, r3
 8001e38:	f04f 0000 	mov.w	r0, #0
 8001e3c:	f04f 0100 	mov.w	r1, #0
 8001e40:	0299      	lsls	r1, r3, #10
 8001e42:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8001e46:	0290      	lsls	r0, r2, #10
 8001e48:	4602      	mov	r2, r0
 8001e4a:	460b      	mov	r3, r1
 8001e4c:	4610      	mov	r0, r2
 8001e4e:	4619      	mov	r1, r3
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	461a      	mov	r2, r3
 8001e54:	f04f 0300 	mov.w	r3, #0
 8001e58:	f7fe f9d4 	bl	8000204 <__aeabi_uldivmod>
 8001e5c:	4602      	mov	r2, r0
 8001e5e:	460b      	mov	r3, r1
 8001e60:	4613      	mov	r3, r2
 8001e62:	617b      	str	r3, [r7, #20]
 8001e64:	4b0a      	ldr	r3, [pc, #40]	; (8001e90 <HAL_RCC_GetSysClockFreq+0x2ac>)
 8001e66:	685b      	ldr	r3, [r3, #4]
 8001e68:	0f1b      	lsrs	r3, r3, #28
 8001e6a:	f003 0307 	and.w	r3, r3, #7
 8001e6e:	607b      	str	r3, [r7, #4]
 8001e70:	697a      	ldr	r2, [r7, #20]
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e78:	613b      	str	r3, [r7, #16]
 8001e7a:	e002      	b.n	8001e82 <HAL_RCC_GetSysClockFreq+0x29e>
 8001e7c:	4b05      	ldr	r3, [pc, #20]	; (8001e94 <HAL_RCC_GetSysClockFreq+0x2b0>)
 8001e7e:	613b      	str	r3, [r7, #16]
 8001e80:	bf00      	nop
 8001e82:	693b      	ldr	r3, [r7, #16]
 8001e84:	4618      	mov	r0, r3
 8001e86:	371c      	adds	r7, #28
 8001e88:	46bd      	mov	sp, r7
 8001e8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e8e:	bf00      	nop
 8001e90:	40023800 	.word	0x40023800
 8001e94:	00f42400 	.word	0x00f42400
 8001e98:	017d7840 	.word	0x017d7840

08001e9c <HAL_RCC_OscConfig>:
 8001e9c:	b580      	push	{r7, lr}
 8001e9e:	b086      	sub	sp, #24
 8001ea0:	af00      	add	r7, sp, #0
 8001ea2:	6078      	str	r0, [r7, #4]
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	2b00      	cmp	r3, #0
 8001ea8:	d101      	bne.n	8001eae <HAL_RCC_OscConfig+0x12>
 8001eaa:	2301      	movs	r3, #1
 8001eac:	e28d      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	f003 0301 	and.w	r3, r3, #1
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	f000 8083 	beq.w	8001fc2 <HAL_RCC_OscConfig+0x126>
 8001ebc:	4b94      	ldr	r3, [pc, #592]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001ebe:	689b      	ldr	r3, [r3, #8]
 8001ec0:	f003 030c 	and.w	r3, r3, #12
 8001ec4:	2b04      	cmp	r3, #4
 8001ec6:	d019      	beq.n	8001efc <HAL_RCC_OscConfig+0x60>
 8001ec8:	4b91      	ldr	r3, [pc, #580]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001eca:	689b      	ldr	r3, [r3, #8]
 8001ecc:	f003 030c 	and.w	r3, r3, #12
 8001ed0:	2b08      	cmp	r3, #8
 8001ed2:	d106      	bne.n	8001ee2 <HAL_RCC_OscConfig+0x46>
 8001ed4:	4b8e      	ldr	r3, [pc, #568]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001ed6:	685b      	ldr	r3, [r3, #4]
 8001ed8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001edc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8001ee0:	d00c      	beq.n	8001efc <HAL_RCC_OscConfig+0x60>
 8001ee2:	4b8b      	ldr	r3, [pc, #556]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001ee4:	689b      	ldr	r3, [r3, #8]
 8001ee6:	f003 030c 	and.w	r3, r3, #12
 8001eea:	2b0c      	cmp	r3, #12
 8001eec:	d112      	bne.n	8001f14 <HAL_RCC_OscConfig+0x78>
 8001eee:	4b88      	ldr	r3, [pc, #544]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001ef0:	685b      	ldr	r3, [r3, #4]
 8001ef2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001ef6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8001efa:	d10b      	bne.n	8001f14 <HAL_RCC_OscConfig+0x78>
 8001efc:	4b84      	ldr	r3, [pc, #528]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f04:	2b00      	cmp	r3, #0
 8001f06:	d05b      	beq.n	8001fc0 <HAL_RCC_OscConfig+0x124>
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	2b00      	cmp	r3, #0
 8001f0e:	d157      	bne.n	8001fc0 <HAL_RCC_OscConfig+0x124>
 8001f10:	2301      	movs	r3, #1
 8001f12:	e25a      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	685b      	ldr	r3, [r3, #4]
 8001f18:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f1c:	d106      	bne.n	8001f2c <HAL_RCC_OscConfig+0x90>
 8001f1e:	4b7c      	ldr	r3, [pc, #496]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	4a7b      	ldr	r2, [pc, #492]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f24:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f28:	6013      	str	r3, [r2, #0]
 8001f2a:	e01d      	b.n	8001f68 <HAL_RCC_OscConfig+0xcc>
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	685b      	ldr	r3, [r3, #4]
 8001f30:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001f34:	d10c      	bne.n	8001f50 <HAL_RCC_OscConfig+0xb4>
 8001f36:	4b76      	ldr	r3, [pc, #472]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	4a75      	ldr	r2, [pc, #468]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f3c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001f40:	6013      	str	r3, [r2, #0]
 8001f42:	4b73      	ldr	r3, [pc, #460]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	4a72      	ldr	r2, [pc, #456]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f48:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f4c:	6013      	str	r3, [r2, #0]
 8001f4e:	e00b      	b.n	8001f68 <HAL_RCC_OscConfig+0xcc>
 8001f50:	4b6f      	ldr	r3, [pc, #444]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	4a6e      	ldr	r2, [pc, #440]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f56:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f5a:	6013      	str	r3, [r2, #0]
 8001f5c:	4b6c      	ldr	r3, [pc, #432]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	4a6b      	ldr	r2, [pc, #428]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f62:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f66:	6013      	str	r3, [r2, #0]
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	685b      	ldr	r3, [r3, #4]
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d013      	beq.n	8001f98 <HAL_RCC_OscConfig+0xfc>
 8001f70:	f7ff fa3c 	bl	80013ec <HAL_GetTick>
 8001f74:	6138      	str	r0, [r7, #16]
 8001f76:	e008      	b.n	8001f8a <HAL_RCC_OscConfig+0xee>
 8001f78:	f7ff fa38 	bl	80013ec <HAL_GetTick>
 8001f7c:	4602      	mov	r2, r0
 8001f7e:	693b      	ldr	r3, [r7, #16]
 8001f80:	1ad3      	subs	r3, r2, r3
 8001f82:	2b64      	cmp	r3, #100	; 0x64
 8001f84:	d901      	bls.n	8001f8a <HAL_RCC_OscConfig+0xee>
 8001f86:	2303      	movs	r3, #3
 8001f88:	e21f      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8001f8a:	4b61      	ldr	r3, [pc, #388]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d0f0      	beq.n	8001f78 <HAL_RCC_OscConfig+0xdc>
 8001f96:	e014      	b.n	8001fc2 <HAL_RCC_OscConfig+0x126>
 8001f98:	f7ff fa28 	bl	80013ec <HAL_GetTick>
 8001f9c:	6138      	str	r0, [r7, #16]
 8001f9e:	e008      	b.n	8001fb2 <HAL_RCC_OscConfig+0x116>
 8001fa0:	f7ff fa24 	bl	80013ec <HAL_GetTick>
 8001fa4:	4602      	mov	r2, r0
 8001fa6:	693b      	ldr	r3, [r7, #16]
 8001fa8:	1ad3      	subs	r3, r2, r3
 8001faa:	2b64      	cmp	r3, #100	; 0x64
 8001fac:	d901      	bls.n	8001fb2 <HAL_RCC_OscConfig+0x116>
 8001fae:	2303      	movs	r3, #3
 8001fb0:	e20b      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8001fb2:	4b57      	ldr	r3, [pc, #348]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001fb4:	681b      	ldr	r3, [r3, #0]
 8001fb6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fba:	2b00      	cmp	r3, #0
 8001fbc:	d1f0      	bne.n	8001fa0 <HAL_RCC_OscConfig+0x104>
 8001fbe:	e000      	b.n	8001fc2 <HAL_RCC_OscConfig+0x126>
 8001fc0:	bf00      	nop
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	f003 0302 	and.w	r3, r3, #2
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	d06f      	beq.n	80020ae <HAL_RCC_OscConfig+0x212>
 8001fce:	4b50      	ldr	r3, [pc, #320]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001fd0:	689b      	ldr	r3, [r3, #8]
 8001fd2:	f003 030c 	and.w	r3, r3, #12
 8001fd6:	2b00      	cmp	r3, #0
 8001fd8:	d017      	beq.n	800200a <HAL_RCC_OscConfig+0x16e>
 8001fda:	4b4d      	ldr	r3, [pc, #308]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001fdc:	689b      	ldr	r3, [r3, #8]
 8001fde:	f003 030c 	and.w	r3, r3, #12
 8001fe2:	2b08      	cmp	r3, #8
 8001fe4:	d105      	bne.n	8001ff2 <HAL_RCC_OscConfig+0x156>
 8001fe6:	4b4a      	ldr	r3, [pc, #296]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001fe8:	685b      	ldr	r3, [r3, #4]
 8001fea:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d00b      	beq.n	800200a <HAL_RCC_OscConfig+0x16e>
 8001ff2:	4b47      	ldr	r3, [pc, #284]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8001ff4:	689b      	ldr	r3, [r3, #8]
 8001ff6:	f003 030c 	and.w	r3, r3, #12
 8001ffa:	2b0c      	cmp	r3, #12
 8001ffc:	d11c      	bne.n	8002038 <HAL_RCC_OscConfig+0x19c>
 8001ffe:	4b44      	ldr	r3, [pc, #272]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8002000:	685b      	ldr	r3, [r3, #4]
 8002002:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002006:	2b00      	cmp	r3, #0
 8002008:	d116      	bne.n	8002038 <HAL_RCC_OscConfig+0x19c>
 800200a:	4b41      	ldr	r3, [pc, #260]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	f003 0302 	and.w	r3, r3, #2
 8002012:	2b00      	cmp	r3, #0
 8002014:	d005      	beq.n	8002022 <HAL_RCC_OscConfig+0x186>
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	68db      	ldr	r3, [r3, #12]
 800201a:	2b01      	cmp	r3, #1
 800201c:	d001      	beq.n	8002022 <HAL_RCC_OscConfig+0x186>
 800201e:	2301      	movs	r3, #1
 8002020:	e1d3      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8002022:	4b3b      	ldr	r3, [pc, #236]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	691b      	ldr	r3, [r3, #16]
 800202e:	00db      	lsls	r3, r3, #3
 8002030:	4937      	ldr	r1, [pc, #220]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8002032:	4313      	orrs	r3, r2
 8002034:	600b      	str	r3, [r1, #0]
 8002036:	e03a      	b.n	80020ae <HAL_RCC_OscConfig+0x212>
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	68db      	ldr	r3, [r3, #12]
 800203c:	2b00      	cmp	r3, #0
 800203e:	d020      	beq.n	8002082 <HAL_RCC_OscConfig+0x1e6>
 8002040:	4b34      	ldr	r3, [pc, #208]	; (8002114 <HAL_RCC_OscConfig+0x278>)
 8002042:	2201      	movs	r2, #1
 8002044:	601a      	str	r2, [r3, #0]
 8002046:	f7ff f9d1 	bl	80013ec <HAL_GetTick>
 800204a:	6138      	str	r0, [r7, #16]
 800204c:	e008      	b.n	8002060 <HAL_RCC_OscConfig+0x1c4>
 800204e:	f7ff f9cd 	bl	80013ec <HAL_GetTick>
 8002052:	4602      	mov	r2, r0
 8002054:	693b      	ldr	r3, [r7, #16]
 8002056:	1ad3      	subs	r3, r2, r3
 8002058:	2b02      	cmp	r3, #2
 800205a:	d901      	bls.n	8002060 <HAL_RCC_OscConfig+0x1c4>
 800205c:	2303      	movs	r3, #3
 800205e:	e1b4      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8002060:	4b2b      	ldr	r3, [pc, #172]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	f003 0302 	and.w	r3, r3, #2
 8002068:	2b00      	cmp	r3, #0
 800206a:	d0f0      	beq.n	800204e <HAL_RCC_OscConfig+0x1b2>
 800206c:	4b28      	ldr	r3, [pc, #160]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	691b      	ldr	r3, [r3, #16]
 8002078:	00db      	lsls	r3, r3, #3
 800207a:	4925      	ldr	r1, [pc, #148]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 800207c:	4313      	orrs	r3, r2
 800207e:	600b      	str	r3, [r1, #0]
 8002080:	e015      	b.n	80020ae <HAL_RCC_OscConfig+0x212>
 8002082:	4b24      	ldr	r3, [pc, #144]	; (8002114 <HAL_RCC_OscConfig+0x278>)
 8002084:	2200      	movs	r2, #0
 8002086:	601a      	str	r2, [r3, #0]
 8002088:	f7ff f9b0 	bl	80013ec <HAL_GetTick>
 800208c:	6138      	str	r0, [r7, #16]
 800208e:	e008      	b.n	80020a2 <HAL_RCC_OscConfig+0x206>
 8002090:	f7ff f9ac 	bl	80013ec <HAL_GetTick>
 8002094:	4602      	mov	r2, r0
 8002096:	693b      	ldr	r3, [r7, #16]
 8002098:	1ad3      	subs	r3, r2, r3
 800209a:	2b02      	cmp	r3, #2
 800209c:	d901      	bls.n	80020a2 <HAL_RCC_OscConfig+0x206>
 800209e:	2303      	movs	r3, #3
 80020a0:	e193      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 80020a2:	4b1b      	ldr	r3, [pc, #108]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	f003 0302 	and.w	r3, r3, #2
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d1f0      	bne.n	8002090 <HAL_RCC_OscConfig+0x1f4>
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	f003 0308 	and.w	r3, r3, #8
 80020b6:	2b00      	cmp	r3, #0
 80020b8:	d036      	beq.n	8002128 <HAL_RCC_OscConfig+0x28c>
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	695b      	ldr	r3, [r3, #20]
 80020be:	2b00      	cmp	r3, #0
 80020c0:	d016      	beq.n	80020f0 <HAL_RCC_OscConfig+0x254>
 80020c2:	4b15      	ldr	r3, [pc, #84]	; (8002118 <HAL_RCC_OscConfig+0x27c>)
 80020c4:	2201      	movs	r2, #1
 80020c6:	601a      	str	r2, [r3, #0]
 80020c8:	f7ff f990 	bl	80013ec <HAL_GetTick>
 80020cc:	6138      	str	r0, [r7, #16]
 80020ce:	e008      	b.n	80020e2 <HAL_RCC_OscConfig+0x246>
 80020d0:	f7ff f98c 	bl	80013ec <HAL_GetTick>
 80020d4:	4602      	mov	r2, r0
 80020d6:	693b      	ldr	r3, [r7, #16]
 80020d8:	1ad3      	subs	r3, r2, r3
 80020da:	2b02      	cmp	r3, #2
 80020dc:	d901      	bls.n	80020e2 <HAL_RCC_OscConfig+0x246>
 80020de:	2303      	movs	r3, #3
 80020e0:	e173      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 80020e2:	4b0b      	ldr	r3, [pc, #44]	; (8002110 <HAL_RCC_OscConfig+0x274>)
 80020e4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80020e6:	f003 0302 	and.w	r3, r3, #2
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d0f0      	beq.n	80020d0 <HAL_RCC_OscConfig+0x234>
 80020ee:	e01b      	b.n	8002128 <HAL_RCC_OscConfig+0x28c>
 80020f0:	4b09      	ldr	r3, [pc, #36]	; (8002118 <HAL_RCC_OscConfig+0x27c>)
 80020f2:	2200      	movs	r2, #0
 80020f4:	601a      	str	r2, [r3, #0]
 80020f6:	f7ff f979 	bl	80013ec <HAL_GetTick>
 80020fa:	6138      	str	r0, [r7, #16]
 80020fc:	e00e      	b.n	800211c <HAL_RCC_OscConfig+0x280>
 80020fe:	f7ff f975 	bl	80013ec <HAL_GetTick>
 8002102:	4602      	mov	r2, r0
 8002104:	693b      	ldr	r3, [r7, #16]
 8002106:	1ad3      	subs	r3, r2, r3
 8002108:	2b02      	cmp	r3, #2
 800210a:	d907      	bls.n	800211c <HAL_RCC_OscConfig+0x280>
 800210c:	2303      	movs	r3, #3
 800210e:	e15c      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8002110:	40023800 	.word	0x40023800
 8002114:	42470000 	.word	0x42470000
 8002118:	42470e80 	.word	0x42470e80
 800211c:	4b8a      	ldr	r3, [pc, #552]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 800211e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002120:	f003 0302 	and.w	r3, r3, #2
 8002124:	2b00      	cmp	r3, #0
 8002126:	d1ea      	bne.n	80020fe <HAL_RCC_OscConfig+0x262>
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f003 0304 	and.w	r3, r3, #4
 8002130:	2b00      	cmp	r3, #0
 8002132:	f000 8097 	beq.w	8002264 <HAL_RCC_OscConfig+0x3c8>
 8002136:	2300      	movs	r3, #0
 8002138:	75fb      	strb	r3, [r7, #23]
 800213a:	4b83      	ldr	r3, [pc, #524]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 800213c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800213e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002142:	2b00      	cmp	r3, #0
 8002144:	d10f      	bne.n	8002166 <HAL_RCC_OscConfig+0x2ca>
 8002146:	2300      	movs	r3, #0
 8002148:	60bb      	str	r3, [r7, #8]
 800214a:	4b7f      	ldr	r3, [pc, #508]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 800214c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800214e:	4a7e      	ldr	r2, [pc, #504]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 8002150:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002154:	6413      	str	r3, [r2, #64]	; 0x40
 8002156:	4b7c      	ldr	r3, [pc, #496]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 8002158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800215a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800215e:	60bb      	str	r3, [r7, #8]
 8002160:	68bb      	ldr	r3, [r7, #8]
 8002162:	2301      	movs	r3, #1
 8002164:	75fb      	strb	r3, [r7, #23]
 8002166:	4b79      	ldr	r3, [pc, #484]	; (800234c <HAL_RCC_OscConfig+0x4b0>)
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800216e:	2b00      	cmp	r3, #0
 8002170:	d118      	bne.n	80021a4 <HAL_RCC_OscConfig+0x308>
 8002172:	4b76      	ldr	r3, [pc, #472]	; (800234c <HAL_RCC_OscConfig+0x4b0>)
 8002174:	681b      	ldr	r3, [r3, #0]
 8002176:	4a75      	ldr	r2, [pc, #468]	; (800234c <HAL_RCC_OscConfig+0x4b0>)
 8002178:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800217c:	6013      	str	r3, [r2, #0]
 800217e:	f7ff f935 	bl	80013ec <HAL_GetTick>
 8002182:	6138      	str	r0, [r7, #16]
 8002184:	e008      	b.n	8002198 <HAL_RCC_OscConfig+0x2fc>
 8002186:	f7ff f931 	bl	80013ec <HAL_GetTick>
 800218a:	4602      	mov	r2, r0
 800218c:	693b      	ldr	r3, [r7, #16]
 800218e:	1ad3      	subs	r3, r2, r3
 8002190:	2b02      	cmp	r3, #2
 8002192:	d901      	bls.n	8002198 <HAL_RCC_OscConfig+0x2fc>
 8002194:	2303      	movs	r3, #3
 8002196:	e118      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8002198:	4b6c      	ldr	r3, [pc, #432]	; (800234c <HAL_RCC_OscConfig+0x4b0>)
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d0f0      	beq.n	8002186 <HAL_RCC_OscConfig+0x2ea>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	689b      	ldr	r3, [r3, #8]
 80021a8:	2b01      	cmp	r3, #1
 80021aa:	d106      	bne.n	80021ba <HAL_RCC_OscConfig+0x31e>
 80021ac:	4b66      	ldr	r3, [pc, #408]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021b0:	4a65      	ldr	r2, [pc, #404]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021b2:	f043 0301 	orr.w	r3, r3, #1
 80021b6:	6713      	str	r3, [r2, #112]	; 0x70
 80021b8:	e01c      	b.n	80021f4 <HAL_RCC_OscConfig+0x358>
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	689b      	ldr	r3, [r3, #8]
 80021be:	2b05      	cmp	r3, #5
 80021c0:	d10c      	bne.n	80021dc <HAL_RCC_OscConfig+0x340>
 80021c2:	4b61      	ldr	r3, [pc, #388]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021c6:	4a60      	ldr	r2, [pc, #384]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021c8:	f043 0304 	orr.w	r3, r3, #4
 80021cc:	6713      	str	r3, [r2, #112]	; 0x70
 80021ce:	4b5e      	ldr	r3, [pc, #376]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021d2:	4a5d      	ldr	r2, [pc, #372]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021d4:	f043 0301 	orr.w	r3, r3, #1
 80021d8:	6713      	str	r3, [r2, #112]	; 0x70
 80021da:	e00b      	b.n	80021f4 <HAL_RCC_OscConfig+0x358>
 80021dc:	4b5a      	ldr	r3, [pc, #360]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021e0:	4a59      	ldr	r2, [pc, #356]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021e2:	f023 0301 	bic.w	r3, r3, #1
 80021e6:	6713      	str	r3, [r2, #112]	; 0x70
 80021e8:	4b57      	ldr	r3, [pc, #348]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021ec:	4a56      	ldr	r2, [pc, #344]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80021ee:	f023 0304 	bic.w	r3, r3, #4
 80021f2:	6713      	str	r3, [r2, #112]	; 0x70
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	689b      	ldr	r3, [r3, #8]
 80021f8:	2b00      	cmp	r3, #0
 80021fa:	d015      	beq.n	8002228 <HAL_RCC_OscConfig+0x38c>
 80021fc:	f7ff f8f6 	bl	80013ec <HAL_GetTick>
 8002200:	6138      	str	r0, [r7, #16]
 8002202:	e00a      	b.n	800221a <HAL_RCC_OscConfig+0x37e>
 8002204:	f7ff f8f2 	bl	80013ec <HAL_GetTick>
 8002208:	4602      	mov	r2, r0
 800220a:	693b      	ldr	r3, [r7, #16]
 800220c:	1ad3      	subs	r3, r2, r3
 800220e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002212:	4293      	cmp	r3, r2
 8002214:	d901      	bls.n	800221a <HAL_RCC_OscConfig+0x37e>
 8002216:	2303      	movs	r3, #3
 8002218:	e0d7      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 800221a:	4b4b      	ldr	r3, [pc, #300]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 800221c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800221e:	f003 0302 	and.w	r3, r3, #2
 8002222:	2b00      	cmp	r3, #0
 8002224:	d0ee      	beq.n	8002204 <HAL_RCC_OscConfig+0x368>
 8002226:	e014      	b.n	8002252 <HAL_RCC_OscConfig+0x3b6>
 8002228:	f7ff f8e0 	bl	80013ec <HAL_GetTick>
 800222c:	6138      	str	r0, [r7, #16]
 800222e:	e00a      	b.n	8002246 <HAL_RCC_OscConfig+0x3aa>
 8002230:	f7ff f8dc 	bl	80013ec <HAL_GetTick>
 8002234:	4602      	mov	r2, r0
 8002236:	693b      	ldr	r3, [r7, #16]
 8002238:	1ad3      	subs	r3, r2, r3
 800223a:	f241 3288 	movw	r2, #5000	; 0x1388
 800223e:	4293      	cmp	r3, r2
 8002240:	d901      	bls.n	8002246 <HAL_RCC_OscConfig+0x3aa>
 8002242:	2303      	movs	r3, #3
 8002244:	e0c1      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8002246:	4b40      	ldr	r3, [pc, #256]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 8002248:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800224a:	f003 0302 	and.w	r3, r3, #2
 800224e:	2b00      	cmp	r3, #0
 8002250:	d1ee      	bne.n	8002230 <HAL_RCC_OscConfig+0x394>
 8002252:	7dfb      	ldrb	r3, [r7, #23]
 8002254:	2b01      	cmp	r3, #1
 8002256:	d105      	bne.n	8002264 <HAL_RCC_OscConfig+0x3c8>
 8002258:	4b3b      	ldr	r3, [pc, #236]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 800225a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800225c:	4a3a      	ldr	r2, [pc, #232]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 800225e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002262:	6413      	str	r3, [r2, #64]	; 0x40
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	699b      	ldr	r3, [r3, #24]
 8002268:	2b00      	cmp	r3, #0
 800226a:	f000 80ad 	beq.w	80023c8 <HAL_RCC_OscConfig+0x52c>
 800226e:	4b36      	ldr	r3, [pc, #216]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 8002270:	689b      	ldr	r3, [r3, #8]
 8002272:	f003 030c 	and.w	r3, r3, #12
 8002276:	2b08      	cmp	r3, #8
 8002278:	d060      	beq.n	800233c <HAL_RCC_OscConfig+0x4a0>
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	699b      	ldr	r3, [r3, #24]
 800227e:	2b02      	cmp	r3, #2
 8002280:	d145      	bne.n	800230e <HAL_RCC_OscConfig+0x472>
 8002282:	4b33      	ldr	r3, [pc, #204]	; (8002350 <HAL_RCC_OscConfig+0x4b4>)
 8002284:	2200      	movs	r2, #0
 8002286:	601a      	str	r2, [r3, #0]
 8002288:	f7ff f8b0 	bl	80013ec <HAL_GetTick>
 800228c:	6138      	str	r0, [r7, #16]
 800228e:	e008      	b.n	80022a2 <HAL_RCC_OscConfig+0x406>
 8002290:	f7ff f8ac 	bl	80013ec <HAL_GetTick>
 8002294:	4602      	mov	r2, r0
 8002296:	693b      	ldr	r3, [r7, #16]
 8002298:	1ad3      	subs	r3, r2, r3
 800229a:	2b02      	cmp	r3, #2
 800229c:	d901      	bls.n	80022a2 <HAL_RCC_OscConfig+0x406>
 800229e:	2303      	movs	r3, #3
 80022a0:	e093      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 80022a2:	4b29      	ldr	r3, [pc, #164]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80022a4:	681b      	ldr	r3, [r3, #0]
 80022a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022aa:	2b00      	cmp	r3, #0
 80022ac:	d1f0      	bne.n	8002290 <HAL_RCC_OscConfig+0x3f4>
 80022ae:	687b      	ldr	r3, [r7, #4]
 80022b0:	69da      	ldr	r2, [r3, #28]
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	6a1b      	ldr	r3, [r3, #32]
 80022b6:	431a      	orrs	r2, r3
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022bc:	019b      	lsls	r3, r3, #6
 80022be:	431a      	orrs	r2, r3
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80022c4:	085b      	lsrs	r3, r3, #1
 80022c6:	3b01      	subs	r3, #1
 80022c8:	041b      	lsls	r3, r3, #16
 80022ca:	431a      	orrs	r2, r3
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022d0:	061b      	lsls	r3, r3, #24
 80022d2:	431a      	orrs	r2, r3
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022d8:	071b      	lsls	r3, r3, #28
 80022da:	491b      	ldr	r1, [pc, #108]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 80022dc:	4313      	orrs	r3, r2
 80022de:	604b      	str	r3, [r1, #4]
 80022e0:	4b1b      	ldr	r3, [pc, #108]	; (8002350 <HAL_RCC_OscConfig+0x4b4>)
 80022e2:	2201      	movs	r2, #1
 80022e4:	601a      	str	r2, [r3, #0]
 80022e6:	f7ff f881 	bl	80013ec <HAL_GetTick>
 80022ea:	6138      	str	r0, [r7, #16]
 80022ec:	e008      	b.n	8002300 <HAL_RCC_OscConfig+0x464>
 80022ee:	f7ff f87d 	bl	80013ec <HAL_GetTick>
 80022f2:	4602      	mov	r2, r0
 80022f4:	693b      	ldr	r3, [r7, #16]
 80022f6:	1ad3      	subs	r3, r2, r3
 80022f8:	2b02      	cmp	r3, #2
 80022fa:	d901      	bls.n	8002300 <HAL_RCC_OscConfig+0x464>
 80022fc:	2303      	movs	r3, #3
 80022fe:	e064      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8002300:	4b11      	ldr	r3, [pc, #68]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002308:	2b00      	cmp	r3, #0
 800230a:	d0f0      	beq.n	80022ee <HAL_RCC_OscConfig+0x452>
 800230c:	e05c      	b.n	80023c8 <HAL_RCC_OscConfig+0x52c>
 800230e:	4b10      	ldr	r3, [pc, #64]	; (8002350 <HAL_RCC_OscConfig+0x4b4>)
 8002310:	2200      	movs	r2, #0
 8002312:	601a      	str	r2, [r3, #0]
 8002314:	f7ff f86a 	bl	80013ec <HAL_GetTick>
 8002318:	6138      	str	r0, [r7, #16]
 800231a:	e008      	b.n	800232e <HAL_RCC_OscConfig+0x492>
 800231c:	f7ff f866 	bl	80013ec <HAL_GetTick>
 8002320:	4602      	mov	r2, r0
 8002322:	693b      	ldr	r3, [r7, #16]
 8002324:	1ad3      	subs	r3, r2, r3
 8002326:	2b02      	cmp	r3, #2
 8002328:	d901      	bls.n	800232e <HAL_RCC_OscConfig+0x492>
 800232a:	2303      	movs	r3, #3
 800232c:	e04d      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 800232e:	4b06      	ldr	r3, [pc, #24]	; (8002348 <HAL_RCC_OscConfig+0x4ac>)
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002336:	2b00      	cmp	r3, #0
 8002338:	d1f0      	bne.n	800231c <HAL_RCC_OscConfig+0x480>
 800233a:	e045      	b.n	80023c8 <HAL_RCC_OscConfig+0x52c>
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	699b      	ldr	r3, [r3, #24]
 8002340:	2b01      	cmp	r3, #1
 8002342:	d107      	bne.n	8002354 <HAL_RCC_OscConfig+0x4b8>
 8002344:	2301      	movs	r3, #1
 8002346:	e040      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 8002348:	40023800 	.word	0x40023800
 800234c:	40007000 	.word	0x40007000
 8002350:	42470060 	.word	0x42470060
 8002354:	4b1f      	ldr	r3, [pc, #124]	; (80023d4 <HAL_RCC_OscConfig+0x538>)
 8002356:	685b      	ldr	r3, [r3, #4]
 8002358:	60fb      	str	r3, [r7, #12]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	699b      	ldr	r3, [r3, #24]
 800235e:	2b01      	cmp	r3, #1
 8002360:	d030      	beq.n	80023c4 <HAL_RCC_OscConfig+0x528>
 8002362:	68fb      	ldr	r3, [r7, #12]
 8002364:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	69db      	ldr	r3, [r3, #28]
 800236c:	429a      	cmp	r2, r3
 800236e:	d129      	bne.n	80023c4 <HAL_RCC_OscConfig+0x528>
 8002370:	68fb      	ldr	r3, [r7, #12]
 8002372:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	6a1b      	ldr	r3, [r3, #32]
 800237a:	429a      	cmp	r2, r3
 800237c:	d122      	bne.n	80023c4 <HAL_RCC_OscConfig+0x528>
 800237e:	68fa      	ldr	r2, [r7, #12]
 8002380:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002384:	4013      	ands	r3, r2
 8002386:	687a      	ldr	r2, [r7, #4]
 8002388:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800238a:	0192      	lsls	r2, r2, #6
 800238c:	4293      	cmp	r3, r2
 800238e:	d119      	bne.n	80023c4 <HAL_RCC_OscConfig+0x528>
 8002390:	68fb      	ldr	r3, [r7, #12]
 8002392:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800239a:	085b      	lsrs	r3, r3, #1
 800239c:	3b01      	subs	r3, #1
 800239e:	041b      	lsls	r3, r3, #16
 80023a0:	429a      	cmp	r2, r3
 80023a2:	d10f      	bne.n	80023c4 <HAL_RCC_OscConfig+0x528>
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80023ae:	061b      	lsls	r3, r3, #24
 80023b0:	429a      	cmp	r2, r3
 80023b2:	d107      	bne.n	80023c4 <HAL_RCC_OscConfig+0x528>
 80023b4:	68fb      	ldr	r3, [r7, #12]
 80023b6:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023be:	071b      	lsls	r3, r3, #28
 80023c0:	429a      	cmp	r2, r3
 80023c2:	d001      	beq.n	80023c8 <HAL_RCC_OscConfig+0x52c>
 80023c4:	2301      	movs	r3, #1
 80023c6:	e000      	b.n	80023ca <HAL_RCC_OscConfig+0x52e>
 80023c8:	2300      	movs	r3, #0
 80023ca:	4618      	mov	r0, r3
 80023cc:	3718      	adds	r7, #24
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bd80      	pop	{r7, pc}
 80023d2:	bf00      	nop
 80023d4:	40023800 	.word	0x40023800

080023d8 <HAL_TIM_Base_Init>:
 80023d8:	b580      	push	{r7, lr}
 80023da:	b082      	sub	sp, #8
 80023dc:	af00      	add	r7, sp, #0
 80023de:	6078      	str	r0, [r7, #4]
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	2b00      	cmp	r3, #0
 80023e4:	d101      	bne.n	80023ea <HAL_TIM_Base_Init+0x12>
 80023e6:	2301      	movs	r3, #1
 80023e8:	e041      	b.n	800246e <HAL_TIM_Base_Init+0x96>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80023f0:	b2db      	uxtb	r3, r3
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d106      	bne.n	8002404 <HAL_TIM_Base_Init+0x2c>
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	2200      	movs	r2, #0
 80023fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023fe:	6878      	ldr	r0, [r7, #4]
 8002400:	f7fe fd02 	bl	8000e08 <HAL_TIM_Base_MspInit>
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	2202      	movs	r2, #2
 8002408:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	681a      	ldr	r2, [r3, #0]
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	3304      	adds	r3, #4
 8002414:	4619      	mov	r1, r3
 8002416:	4610      	mov	r0, r2
 8002418:	f000 fa96 	bl	8002948 <TIM_Base_SetConfig>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	2201      	movs	r2, #1
 8002420:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	2201      	movs	r2, #1
 8002428:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	2201      	movs	r2, #1
 8002430:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	2201      	movs	r2, #1
 8002438:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	2201      	movs	r2, #1
 8002440:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	2201      	movs	r2, #1
 8002448:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	2201      	movs	r2, #1
 8002450:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	2201      	movs	r2, #1
 8002458:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	2201      	movs	r2, #1
 8002460:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	2201      	movs	r2, #1
 8002468:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800246c:	2300      	movs	r3, #0
 800246e:	4618      	mov	r0, r3
 8002470:	3708      	adds	r7, #8
 8002472:	46bd      	mov	sp, r7
 8002474:	bd80      	pop	{r7, pc}
	...

08002478 <HAL_TIM_Base_Start_IT>:
 8002478:	b480      	push	{r7}
 800247a:	b085      	sub	sp, #20
 800247c:	af00      	add	r7, sp, #0
 800247e:	6078      	str	r0, [r7, #4]
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002486:	b2db      	uxtb	r3, r3
 8002488:	2b01      	cmp	r3, #1
 800248a:	d001      	beq.n	8002490 <HAL_TIM_Base_Start_IT+0x18>
 800248c:	2301      	movs	r3, #1
 800248e:	e04e      	b.n	800252e <HAL_TIM_Base_Start_IT+0xb6>
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	2202      	movs	r2, #2
 8002494:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	68da      	ldr	r2, [r3, #12]
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	f042 0201 	orr.w	r2, r2, #1
 80024a6:	60da      	str	r2, [r3, #12]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	4a23      	ldr	r2, [pc, #140]	; (800253c <HAL_TIM_Base_Start_IT+0xc4>)
 80024ae:	4293      	cmp	r3, r2
 80024b0:	d022      	beq.n	80024f8 <HAL_TIM_Base_Start_IT+0x80>
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024ba:	d01d      	beq.n	80024f8 <HAL_TIM_Base_Start_IT+0x80>
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	4a1f      	ldr	r2, [pc, #124]	; (8002540 <HAL_TIM_Base_Start_IT+0xc8>)
 80024c2:	4293      	cmp	r3, r2
 80024c4:	d018      	beq.n	80024f8 <HAL_TIM_Base_Start_IT+0x80>
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	681b      	ldr	r3, [r3, #0]
 80024ca:	4a1e      	ldr	r2, [pc, #120]	; (8002544 <HAL_TIM_Base_Start_IT+0xcc>)
 80024cc:	4293      	cmp	r3, r2
 80024ce:	d013      	beq.n	80024f8 <HAL_TIM_Base_Start_IT+0x80>
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	4a1c      	ldr	r2, [pc, #112]	; (8002548 <HAL_TIM_Base_Start_IT+0xd0>)
 80024d6:	4293      	cmp	r3, r2
 80024d8:	d00e      	beq.n	80024f8 <HAL_TIM_Base_Start_IT+0x80>
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	4a1b      	ldr	r2, [pc, #108]	; (800254c <HAL_TIM_Base_Start_IT+0xd4>)
 80024e0:	4293      	cmp	r3, r2
 80024e2:	d009      	beq.n	80024f8 <HAL_TIM_Base_Start_IT+0x80>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	4a19      	ldr	r2, [pc, #100]	; (8002550 <HAL_TIM_Base_Start_IT+0xd8>)
 80024ea:	4293      	cmp	r3, r2
 80024ec:	d004      	beq.n	80024f8 <HAL_TIM_Base_Start_IT+0x80>
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	4a18      	ldr	r2, [pc, #96]	; (8002554 <HAL_TIM_Base_Start_IT+0xdc>)
 80024f4:	4293      	cmp	r3, r2
 80024f6:	d111      	bne.n	800251c <HAL_TIM_Base_Start_IT+0xa4>
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	689b      	ldr	r3, [r3, #8]
 80024fe:	f003 0307 	and.w	r3, r3, #7
 8002502:	60fb      	str	r3, [r7, #12]
 8002504:	68fb      	ldr	r3, [r7, #12]
 8002506:	2b06      	cmp	r3, #6
 8002508:	d010      	beq.n	800252c <HAL_TIM_Base_Start_IT+0xb4>
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	681a      	ldr	r2, [r3, #0]
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	f042 0201 	orr.w	r2, r2, #1
 8002518:	601a      	str	r2, [r3, #0]
 800251a:	e007      	b.n	800252c <HAL_TIM_Base_Start_IT+0xb4>
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	681a      	ldr	r2, [r3, #0]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	f042 0201 	orr.w	r2, r2, #1
 800252a:	601a      	str	r2, [r3, #0]
 800252c:	2300      	movs	r3, #0
 800252e:	4618      	mov	r0, r3
 8002530:	3714      	adds	r7, #20
 8002532:	46bd      	mov	sp, r7
 8002534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002538:	4770      	bx	lr
 800253a:	bf00      	nop
 800253c:	40010000 	.word	0x40010000
 8002540:	40000400 	.word	0x40000400
 8002544:	40000800 	.word	0x40000800
 8002548:	40000c00 	.word	0x40000c00
 800254c:	40010400 	.word	0x40010400
 8002550:	40014000 	.word	0x40014000
 8002554:	40001800 	.word	0x40001800

08002558 <HAL_TIM_IRQHandler>:
 8002558:	b580      	push	{r7, lr}
 800255a:	b082      	sub	sp, #8
 800255c:	af00      	add	r7, sp, #0
 800255e:	6078      	str	r0, [r7, #4]
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	691b      	ldr	r3, [r3, #16]
 8002566:	f003 0302 	and.w	r3, r3, #2
 800256a:	2b02      	cmp	r3, #2
 800256c:	d122      	bne.n	80025b4 <HAL_TIM_IRQHandler+0x5c>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	68db      	ldr	r3, [r3, #12]
 8002574:	f003 0302 	and.w	r3, r3, #2
 8002578:	2b02      	cmp	r3, #2
 800257a:	d11b      	bne.n	80025b4 <HAL_TIM_IRQHandler+0x5c>
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	f06f 0202 	mvn.w	r2, #2
 8002584:	611a      	str	r2, [r3, #16]
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	2201      	movs	r2, #1
 800258a:	771a      	strb	r2, [r3, #28]
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	699b      	ldr	r3, [r3, #24]
 8002592:	f003 0303 	and.w	r3, r3, #3
 8002596:	2b00      	cmp	r3, #0
 8002598:	d003      	beq.n	80025a2 <HAL_TIM_IRQHandler+0x4a>
 800259a:	6878      	ldr	r0, [r7, #4]
 800259c:	f000 f9b5 	bl	800290a <HAL_TIM_IC_CaptureCallback>
 80025a0:	e005      	b.n	80025ae <HAL_TIM_IRQHandler+0x56>
 80025a2:	6878      	ldr	r0, [r7, #4]
 80025a4:	f000 f9a7 	bl	80028f6 <HAL_TIM_OC_DelayElapsedCallback>
 80025a8:	6878      	ldr	r0, [r7, #4]
 80025aa:	f000 f9b8 	bl	800291e <HAL_TIM_PWM_PulseFinishedCallback>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	2200      	movs	r2, #0
 80025b2:	771a      	strb	r2, [r3, #28]
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	691b      	ldr	r3, [r3, #16]
 80025ba:	f003 0304 	and.w	r3, r3, #4
 80025be:	2b04      	cmp	r3, #4
 80025c0:	d122      	bne.n	8002608 <HAL_TIM_IRQHandler+0xb0>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	68db      	ldr	r3, [r3, #12]
 80025c8:	f003 0304 	and.w	r3, r3, #4
 80025cc:	2b04      	cmp	r3, #4
 80025ce:	d11b      	bne.n	8002608 <HAL_TIM_IRQHandler+0xb0>
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	f06f 0204 	mvn.w	r2, #4
 80025d8:	611a      	str	r2, [r3, #16]
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	2202      	movs	r2, #2
 80025de:	771a      	strb	r2, [r3, #28]
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	699b      	ldr	r3, [r3, #24]
 80025e6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d003      	beq.n	80025f6 <HAL_TIM_IRQHandler+0x9e>
 80025ee:	6878      	ldr	r0, [r7, #4]
 80025f0:	f000 f98b 	bl	800290a <HAL_TIM_IC_CaptureCallback>
 80025f4:	e005      	b.n	8002602 <HAL_TIM_IRQHandler+0xaa>
 80025f6:	6878      	ldr	r0, [r7, #4]
 80025f8:	f000 f97d 	bl	80028f6 <HAL_TIM_OC_DelayElapsedCallback>
 80025fc:	6878      	ldr	r0, [r7, #4]
 80025fe:	f000 f98e 	bl	800291e <HAL_TIM_PWM_PulseFinishedCallback>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	2200      	movs	r2, #0
 8002606:	771a      	strb	r2, [r3, #28]
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	681b      	ldr	r3, [r3, #0]
 800260c:	691b      	ldr	r3, [r3, #16]
 800260e:	f003 0308 	and.w	r3, r3, #8
 8002612:	2b08      	cmp	r3, #8
 8002614:	d122      	bne.n	800265c <HAL_TIM_IRQHandler+0x104>
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	68db      	ldr	r3, [r3, #12]
 800261c:	f003 0308 	and.w	r3, r3, #8
 8002620:	2b08      	cmp	r3, #8
 8002622:	d11b      	bne.n	800265c <HAL_TIM_IRQHandler+0x104>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	f06f 0208 	mvn.w	r2, #8
 800262c:	611a      	str	r2, [r3, #16]
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	2204      	movs	r2, #4
 8002632:	771a      	strb	r2, [r3, #28]
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	69db      	ldr	r3, [r3, #28]
 800263a:	f003 0303 	and.w	r3, r3, #3
 800263e:	2b00      	cmp	r3, #0
 8002640:	d003      	beq.n	800264a <HAL_TIM_IRQHandler+0xf2>
 8002642:	6878      	ldr	r0, [r7, #4]
 8002644:	f000 f961 	bl	800290a <HAL_TIM_IC_CaptureCallback>
 8002648:	e005      	b.n	8002656 <HAL_TIM_IRQHandler+0xfe>
 800264a:	6878      	ldr	r0, [r7, #4]
 800264c:	f000 f953 	bl	80028f6 <HAL_TIM_OC_DelayElapsedCallback>
 8002650:	6878      	ldr	r0, [r7, #4]
 8002652:	f000 f964 	bl	800291e <HAL_TIM_PWM_PulseFinishedCallback>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	2200      	movs	r2, #0
 800265a:	771a      	strb	r2, [r3, #28]
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	691b      	ldr	r3, [r3, #16]
 8002662:	f003 0310 	and.w	r3, r3, #16
 8002666:	2b10      	cmp	r3, #16
 8002668:	d122      	bne.n	80026b0 <HAL_TIM_IRQHandler+0x158>
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	68db      	ldr	r3, [r3, #12]
 8002670:	f003 0310 	and.w	r3, r3, #16
 8002674:	2b10      	cmp	r3, #16
 8002676:	d11b      	bne.n	80026b0 <HAL_TIM_IRQHandler+0x158>
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	681b      	ldr	r3, [r3, #0]
 800267c:	f06f 0210 	mvn.w	r2, #16
 8002680:	611a      	str	r2, [r3, #16]
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	2208      	movs	r2, #8
 8002686:	771a      	strb	r2, [r3, #28]
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	69db      	ldr	r3, [r3, #28]
 800268e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002692:	2b00      	cmp	r3, #0
 8002694:	d003      	beq.n	800269e <HAL_TIM_IRQHandler+0x146>
 8002696:	6878      	ldr	r0, [r7, #4]
 8002698:	f000 f937 	bl	800290a <HAL_TIM_IC_CaptureCallback>
 800269c:	e005      	b.n	80026aa <HAL_TIM_IRQHandler+0x152>
 800269e:	6878      	ldr	r0, [r7, #4]
 80026a0:	f000 f929 	bl	80028f6 <HAL_TIM_OC_DelayElapsedCallback>
 80026a4:	6878      	ldr	r0, [r7, #4]
 80026a6:	f000 f93a 	bl	800291e <HAL_TIM_PWM_PulseFinishedCallback>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	2200      	movs	r2, #0
 80026ae:	771a      	strb	r2, [r3, #28]
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	691b      	ldr	r3, [r3, #16]
 80026b6:	f003 0301 	and.w	r3, r3, #1
 80026ba:	2b01      	cmp	r3, #1
 80026bc:	d10e      	bne.n	80026dc <HAL_TIM_IRQHandler+0x184>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	68db      	ldr	r3, [r3, #12]
 80026c4:	f003 0301 	and.w	r3, r3, #1
 80026c8:	2b01      	cmp	r3, #1
 80026ca:	d107      	bne.n	80026dc <HAL_TIM_IRQHandler+0x184>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	f06f 0201 	mvn.w	r2, #1
 80026d4:	611a      	str	r2, [r3, #16]
 80026d6:	6878      	ldr	r0, [r7, #4]
 80026d8:	f7fd ffa4 	bl	8000624 <HAL_TIM_PeriodElapsedCallback>
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	691b      	ldr	r3, [r3, #16]
 80026e2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80026e6:	2b80      	cmp	r3, #128	; 0x80
 80026e8:	d10e      	bne.n	8002708 <HAL_TIM_IRQHandler+0x1b0>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	68db      	ldr	r3, [r3, #12]
 80026f0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80026f4:	2b80      	cmp	r3, #128	; 0x80
 80026f6:	d107      	bne.n	8002708 <HAL_TIM_IRQHandler+0x1b0>
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002700:	611a      	str	r2, [r3, #16]
 8002702:	6878      	ldr	r0, [r7, #4]
 8002704:	f000 fae0 	bl	8002cc8 <HAL_TIMEx_BreakCallback>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	691b      	ldr	r3, [r3, #16]
 800270e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002712:	2b40      	cmp	r3, #64	; 0x40
 8002714:	d10e      	bne.n	8002734 <HAL_TIM_IRQHandler+0x1dc>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	68db      	ldr	r3, [r3, #12]
 800271c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002720:	2b40      	cmp	r3, #64	; 0x40
 8002722:	d107      	bne.n	8002734 <HAL_TIM_IRQHandler+0x1dc>
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800272c:	611a      	str	r2, [r3, #16]
 800272e:	6878      	ldr	r0, [r7, #4]
 8002730:	f000 f8ff 	bl	8002932 <HAL_TIM_TriggerCallback>
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	691b      	ldr	r3, [r3, #16]
 800273a:	f003 0320 	and.w	r3, r3, #32
 800273e:	2b20      	cmp	r3, #32
 8002740:	d10e      	bne.n	8002760 <HAL_TIM_IRQHandler+0x208>
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	68db      	ldr	r3, [r3, #12]
 8002748:	f003 0320 	and.w	r3, r3, #32
 800274c:	2b20      	cmp	r3, #32
 800274e:	d107      	bne.n	8002760 <HAL_TIM_IRQHandler+0x208>
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	f06f 0220 	mvn.w	r2, #32
 8002758:	611a      	str	r2, [r3, #16]
 800275a:	6878      	ldr	r0, [r7, #4]
 800275c:	f000 faaa 	bl	8002cb4 <HAL_TIMEx_CommutCallback>
 8002760:	bf00      	nop
 8002762:	3708      	adds	r7, #8
 8002764:	46bd      	mov	sp, r7
 8002766:	bd80      	pop	{r7, pc}

08002768 <HAL_TIM_ConfigClockSource>:
 8002768:	b580      	push	{r7, lr}
 800276a:	b084      	sub	sp, #16
 800276c:	af00      	add	r7, sp, #0
 800276e:	6078      	str	r0, [r7, #4]
 8002770:	6039      	str	r1, [r7, #0]
 8002772:	2300      	movs	r3, #0
 8002774:	73fb      	strb	r3, [r7, #15]
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800277c:	2b01      	cmp	r3, #1
 800277e:	d101      	bne.n	8002784 <HAL_TIM_ConfigClockSource+0x1c>
 8002780:	2302      	movs	r3, #2
 8002782:	e0b4      	b.n	80028ee <HAL_TIM_ConfigClockSource+0x186>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	2201      	movs	r2, #1
 8002788:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	2202      	movs	r2, #2
 8002790:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	681b      	ldr	r3, [r3, #0]
 8002798:	689b      	ldr	r3, [r3, #8]
 800279a:	60bb      	str	r3, [r7, #8]
 800279c:	68bb      	ldr	r3, [r7, #8]
 800279e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80027a2:	60bb      	str	r3, [r7, #8]
 80027a4:	68bb      	ldr	r3, [r7, #8]
 80027a6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80027aa:	60bb      	str	r3, [r7, #8]
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	68ba      	ldr	r2, [r7, #8]
 80027b2:	609a      	str	r2, [r3, #8]
 80027b4:	683b      	ldr	r3, [r7, #0]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80027bc:	d03e      	beq.n	800283c <HAL_TIM_ConfigClockSource+0xd4>
 80027be:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80027c2:	f200 8087 	bhi.w	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 80027c6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80027ca:	f000 8086 	beq.w	80028da <HAL_TIM_ConfigClockSource+0x172>
 80027ce:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80027d2:	d87f      	bhi.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 80027d4:	2b70      	cmp	r3, #112	; 0x70
 80027d6:	d01a      	beq.n	800280e <HAL_TIM_ConfigClockSource+0xa6>
 80027d8:	2b70      	cmp	r3, #112	; 0x70
 80027da:	d87b      	bhi.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 80027dc:	2b60      	cmp	r3, #96	; 0x60
 80027de:	d050      	beq.n	8002882 <HAL_TIM_ConfigClockSource+0x11a>
 80027e0:	2b60      	cmp	r3, #96	; 0x60
 80027e2:	d877      	bhi.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 80027e4:	2b50      	cmp	r3, #80	; 0x50
 80027e6:	d03c      	beq.n	8002862 <HAL_TIM_ConfigClockSource+0xfa>
 80027e8:	2b50      	cmp	r3, #80	; 0x50
 80027ea:	d873      	bhi.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 80027ec:	2b40      	cmp	r3, #64	; 0x40
 80027ee:	d058      	beq.n	80028a2 <HAL_TIM_ConfigClockSource+0x13a>
 80027f0:	2b40      	cmp	r3, #64	; 0x40
 80027f2:	d86f      	bhi.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 80027f4:	2b30      	cmp	r3, #48	; 0x30
 80027f6:	d064      	beq.n	80028c2 <HAL_TIM_ConfigClockSource+0x15a>
 80027f8:	2b30      	cmp	r3, #48	; 0x30
 80027fa:	d86b      	bhi.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 80027fc:	2b20      	cmp	r3, #32
 80027fe:	d060      	beq.n	80028c2 <HAL_TIM_ConfigClockSource+0x15a>
 8002800:	2b20      	cmp	r3, #32
 8002802:	d867      	bhi.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 8002804:	2b00      	cmp	r3, #0
 8002806:	d05c      	beq.n	80028c2 <HAL_TIM_ConfigClockSource+0x15a>
 8002808:	2b10      	cmp	r3, #16
 800280a:	d05a      	beq.n	80028c2 <HAL_TIM_ConfigClockSource+0x15a>
 800280c:	e062      	b.n	80028d4 <HAL_TIM_ConfigClockSource+0x16c>
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	6818      	ldr	r0, [r3, #0]
 8002812:	683b      	ldr	r3, [r7, #0]
 8002814:	6899      	ldr	r1, [r3, #8]
 8002816:	683b      	ldr	r3, [r7, #0]
 8002818:	685a      	ldr	r2, [r3, #4]
 800281a:	683b      	ldr	r3, [r7, #0]
 800281c:	68db      	ldr	r3, [r3, #12]
 800281e:	f000 f9ad 	bl	8002b7c <TIM_ETR_SetConfig>
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	689b      	ldr	r3, [r3, #8]
 8002828:	60bb      	str	r3, [r7, #8]
 800282a:	68bb      	ldr	r3, [r7, #8]
 800282c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002830:	60bb      	str	r3, [r7, #8]
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	68ba      	ldr	r2, [r7, #8]
 8002838:	609a      	str	r2, [r3, #8]
 800283a:	e04f      	b.n	80028dc <HAL_TIM_ConfigClockSource+0x174>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	6818      	ldr	r0, [r3, #0]
 8002840:	683b      	ldr	r3, [r7, #0]
 8002842:	6899      	ldr	r1, [r3, #8]
 8002844:	683b      	ldr	r3, [r7, #0]
 8002846:	685a      	ldr	r2, [r3, #4]
 8002848:	683b      	ldr	r3, [r7, #0]
 800284a:	68db      	ldr	r3, [r3, #12]
 800284c:	f000 f996 	bl	8002b7c <TIM_ETR_SetConfig>
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	689a      	ldr	r2, [r3, #8]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800285e:	609a      	str	r2, [r3, #8]
 8002860:	e03c      	b.n	80028dc <HAL_TIM_ConfigClockSource+0x174>
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	6818      	ldr	r0, [r3, #0]
 8002866:	683b      	ldr	r3, [r7, #0]
 8002868:	6859      	ldr	r1, [r3, #4]
 800286a:	683b      	ldr	r3, [r7, #0]
 800286c:	68db      	ldr	r3, [r3, #12]
 800286e:	461a      	mov	r2, r3
 8002870:	f000 f90a 	bl	8002a88 <TIM_TI1_ConfigInputStage>
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	2150      	movs	r1, #80	; 0x50
 800287a:	4618      	mov	r0, r3
 800287c:	f000 f963 	bl	8002b46 <TIM_ITRx_SetConfig>
 8002880:	e02c      	b.n	80028dc <HAL_TIM_ConfigClockSource+0x174>
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	6818      	ldr	r0, [r3, #0]
 8002886:	683b      	ldr	r3, [r7, #0]
 8002888:	6859      	ldr	r1, [r3, #4]
 800288a:	683b      	ldr	r3, [r7, #0]
 800288c:	68db      	ldr	r3, [r3, #12]
 800288e:	461a      	mov	r2, r3
 8002890:	f000 f929 	bl	8002ae6 <TIM_TI2_ConfigInputStage>
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	681b      	ldr	r3, [r3, #0]
 8002898:	2160      	movs	r1, #96	; 0x60
 800289a:	4618      	mov	r0, r3
 800289c:	f000 f953 	bl	8002b46 <TIM_ITRx_SetConfig>
 80028a0:	e01c      	b.n	80028dc <HAL_TIM_ConfigClockSource+0x174>
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	6818      	ldr	r0, [r3, #0]
 80028a6:	683b      	ldr	r3, [r7, #0]
 80028a8:	6859      	ldr	r1, [r3, #4]
 80028aa:	683b      	ldr	r3, [r7, #0]
 80028ac:	68db      	ldr	r3, [r3, #12]
 80028ae:	461a      	mov	r2, r3
 80028b0:	f000 f8ea 	bl	8002a88 <TIM_TI1_ConfigInputStage>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	2140      	movs	r1, #64	; 0x40
 80028ba:	4618      	mov	r0, r3
 80028bc:	f000 f943 	bl	8002b46 <TIM_ITRx_SetConfig>
 80028c0:	e00c      	b.n	80028dc <HAL_TIM_ConfigClockSource+0x174>
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	681a      	ldr	r2, [r3, #0]
 80028c6:	683b      	ldr	r3, [r7, #0]
 80028c8:	681b      	ldr	r3, [r3, #0]
 80028ca:	4619      	mov	r1, r3
 80028cc:	4610      	mov	r0, r2
 80028ce:	f000 f93a 	bl	8002b46 <TIM_ITRx_SetConfig>
 80028d2:	e003      	b.n	80028dc <HAL_TIM_ConfigClockSource+0x174>
 80028d4:	2301      	movs	r3, #1
 80028d6:	73fb      	strb	r3, [r7, #15]
 80028d8:	e000      	b.n	80028dc <HAL_TIM_ConfigClockSource+0x174>
 80028da:	bf00      	nop
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	2201      	movs	r2, #1
 80028e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	2200      	movs	r2, #0
 80028e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80028ec:	7bfb      	ldrb	r3, [r7, #15]
 80028ee:	4618      	mov	r0, r3
 80028f0:	3710      	adds	r7, #16
 80028f2:	46bd      	mov	sp, r7
 80028f4:	bd80      	pop	{r7, pc}

080028f6 <HAL_TIM_OC_DelayElapsedCallback>:
 80028f6:	b480      	push	{r7}
 80028f8:	b083      	sub	sp, #12
 80028fa:	af00      	add	r7, sp, #0
 80028fc:	6078      	str	r0, [r7, #4]
 80028fe:	bf00      	nop
 8002900:	370c      	adds	r7, #12
 8002902:	46bd      	mov	sp, r7
 8002904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002908:	4770      	bx	lr

0800290a <HAL_TIM_IC_CaptureCallback>:
 800290a:	b480      	push	{r7}
 800290c:	b083      	sub	sp, #12
 800290e:	af00      	add	r7, sp, #0
 8002910:	6078      	str	r0, [r7, #4]
 8002912:	bf00      	nop
 8002914:	370c      	adds	r7, #12
 8002916:	46bd      	mov	sp, r7
 8002918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800291c:	4770      	bx	lr

0800291e <HAL_TIM_PWM_PulseFinishedCallback>:
 800291e:	b480      	push	{r7}
 8002920:	b083      	sub	sp, #12
 8002922:	af00      	add	r7, sp, #0
 8002924:	6078      	str	r0, [r7, #4]
 8002926:	bf00      	nop
 8002928:	370c      	adds	r7, #12
 800292a:	46bd      	mov	sp, r7
 800292c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002930:	4770      	bx	lr

08002932 <HAL_TIM_TriggerCallback>:
 8002932:	b480      	push	{r7}
 8002934:	b083      	sub	sp, #12
 8002936:	af00      	add	r7, sp, #0
 8002938:	6078      	str	r0, [r7, #4]
 800293a:	bf00      	nop
 800293c:	370c      	adds	r7, #12
 800293e:	46bd      	mov	sp, r7
 8002940:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002944:	4770      	bx	lr
	...

08002948 <TIM_Base_SetConfig>:
 8002948:	b480      	push	{r7}
 800294a:	b085      	sub	sp, #20
 800294c:	af00      	add	r7, sp, #0
 800294e:	6078      	str	r0, [r7, #4]
 8002950:	6039      	str	r1, [r7, #0]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	60fb      	str	r3, [r7, #12]
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	4a40      	ldr	r2, [pc, #256]	; (8002a5c <TIM_Base_SetConfig+0x114>)
 800295c:	4293      	cmp	r3, r2
 800295e:	d013      	beq.n	8002988 <TIM_Base_SetConfig+0x40>
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002966:	d00f      	beq.n	8002988 <TIM_Base_SetConfig+0x40>
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	4a3d      	ldr	r2, [pc, #244]	; (8002a60 <TIM_Base_SetConfig+0x118>)
 800296c:	4293      	cmp	r3, r2
 800296e:	d00b      	beq.n	8002988 <TIM_Base_SetConfig+0x40>
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	4a3c      	ldr	r2, [pc, #240]	; (8002a64 <TIM_Base_SetConfig+0x11c>)
 8002974:	4293      	cmp	r3, r2
 8002976:	d007      	beq.n	8002988 <TIM_Base_SetConfig+0x40>
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	4a3b      	ldr	r2, [pc, #236]	; (8002a68 <TIM_Base_SetConfig+0x120>)
 800297c:	4293      	cmp	r3, r2
 800297e:	d003      	beq.n	8002988 <TIM_Base_SetConfig+0x40>
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	4a3a      	ldr	r2, [pc, #232]	; (8002a6c <TIM_Base_SetConfig+0x124>)
 8002984:	4293      	cmp	r3, r2
 8002986:	d108      	bne.n	800299a <TIM_Base_SetConfig+0x52>
 8002988:	68fb      	ldr	r3, [r7, #12]
 800298a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800298e:	60fb      	str	r3, [r7, #12]
 8002990:	683b      	ldr	r3, [r7, #0]
 8002992:	685b      	ldr	r3, [r3, #4]
 8002994:	68fa      	ldr	r2, [r7, #12]
 8002996:	4313      	orrs	r3, r2
 8002998:	60fb      	str	r3, [r7, #12]
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	4a2f      	ldr	r2, [pc, #188]	; (8002a5c <TIM_Base_SetConfig+0x114>)
 800299e:	4293      	cmp	r3, r2
 80029a0:	d02b      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80029a8:	d027      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	4a2c      	ldr	r2, [pc, #176]	; (8002a60 <TIM_Base_SetConfig+0x118>)
 80029ae:	4293      	cmp	r3, r2
 80029b0:	d023      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	4a2b      	ldr	r2, [pc, #172]	; (8002a64 <TIM_Base_SetConfig+0x11c>)
 80029b6:	4293      	cmp	r3, r2
 80029b8:	d01f      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	4a2a      	ldr	r2, [pc, #168]	; (8002a68 <TIM_Base_SetConfig+0x120>)
 80029be:	4293      	cmp	r3, r2
 80029c0:	d01b      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	4a29      	ldr	r2, [pc, #164]	; (8002a6c <TIM_Base_SetConfig+0x124>)
 80029c6:	4293      	cmp	r3, r2
 80029c8:	d017      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	4a28      	ldr	r2, [pc, #160]	; (8002a70 <TIM_Base_SetConfig+0x128>)
 80029ce:	4293      	cmp	r3, r2
 80029d0:	d013      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	4a27      	ldr	r2, [pc, #156]	; (8002a74 <TIM_Base_SetConfig+0x12c>)
 80029d6:	4293      	cmp	r3, r2
 80029d8:	d00f      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	4a26      	ldr	r2, [pc, #152]	; (8002a78 <TIM_Base_SetConfig+0x130>)
 80029de:	4293      	cmp	r3, r2
 80029e0:	d00b      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	4a25      	ldr	r2, [pc, #148]	; (8002a7c <TIM_Base_SetConfig+0x134>)
 80029e6:	4293      	cmp	r3, r2
 80029e8:	d007      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	4a24      	ldr	r2, [pc, #144]	; (8002a80 <TIM_Base_SetConfig+0x138>)
 80029ee:	4293      	cmp	r3, r2
 80029f0:	d003      	beq.n	80029fa <TIM_Base_SetConfig+0xb2>
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	4a23      	ldr	r2, [pc, #140]	; (8002a84 <TIM_Base_SetConfig+0x13c>)
 80029f6:	4293      	cmp	r3, r2
 80029f8:	d108      	bne.n	8002a0c <TIM_Base_SetConfig+0xc4>
 80029fa:	68fb      	ldr	r3, [r7, #12]
 80029fc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002a00:	60fb      	str	r3, [r7, #12]
 8002a02:	683b      	ldr	r3, [r7, #0]
 8002a04:	68db      	ldr	r3, [r3, #12]
 8002a06:	68fa      	ldr	r2, [r7, #12]
 8002a08:	4313      	orrs	r3, r2
 8002a0a:	60fb      	str	r3, [r7, #12]
 8002a0c:	68fb      	ldr	r3, [r7, #12]
 8002a0e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002a12:	683b      	ldr	r3, [r7, #0]
 8002a14:	695b      	ldr	r3, [r3, #20]
 8002a16:	4313      	orrs	r3, r2
 8002a18:	60fb      	str	r3, [r7, #12]
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	68fa      	ldr	r2, [r7, #12]
 8002a1e:	601a      	str	r2, [r3, #0]
 8002a20:	683b      	ldr	r3, [r7, #0]
 8002a22:	689a      	ldr	r2, [r3, #8]
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	62da      	str	r2, [r3, #44]	; 0x2c
 8002a28:	683b      	ldr	r3, [r7, #0]
 8002a2a:	681a      	ldr	r2, [r3, #0]
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	629a      	str	r2, [r3, #40]	; 0x28
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	4a0a      	ldr	r2, [pc, #40]	; (8002a5c <TIM_Base_SetConfig+0x114>)
 8002a34:	4293      	cmp	r3, r2
 8002a36:	d003      	beq.n	8002a40 <TIM_Base_SetConfig+0xf8>
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	4a0c      	ldr	r2, [pc, #48]	; (8002a6c <TIM_Base_SetConfig+0x124>)
 8002a3c:	4293      	cmp	r3, r2
 8002a3e:	d103      	bne.n	8002a48 <TIM_Base_SetConfig+0x100>
 8002a40:	683b      	ldr	r3, [r7, #0]
 8002a42:	691a      	ldr	r2, [r3, #16]
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	631a      	str	r2, [r3, #48]	; 0x30
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	2201      	movs	r2, #1
 8002a4c:	615a      	str	r2, [r3, #20]
 8002a4e:	bf00      	nop
 8002a50:	3714      	adds	r7, #20
 8002a52:	46bd      	mov	sp, r7
 8002a54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a58:	4770      	bx	lr
 8002a5a:	bf00      	nop
 8002a5c:	40010000 	.word	0x40010000
 8002a60:	40000400 	.word	0x40000400
 8002a64:	40000800 	.word	0x40000800
 8002a68:	40000c00 	.word	0x40000c00
 8002a6c:	40010400 	.word	0x40010400
 8002a70:	40014000 	.word	0x40014000
 8002a74:	40014400 	.word	0x40014400
 8002a78:	40014800 	.word	0x40014800
 8002a7c:	40001800 	.word	0x40001800
 8002a80:	40001c00 	.word	0x40001c00
 8002a84:	40002000 	.word	0x40002000

08002a88 <TIM_TI1_ConfigInputStage>:
 8002a88:	b480      	push	{r7}
 8002a8a:	b087      	sub	sp, #28
 8002a8c:	af00      	add	r7, sp, #0
 8002a8e:	60f8      	str	r0, [r7, #12]
 8002a90:	60b9      	str	r1, [r7, #8]
 8002a92:	607a      	str	r2, [r7, #4]
 8002a94:	68fb      	ldr	r3, [r7, #12]
 8002a96:	6a1b      	ldr	r3, [r3, #32]
 8002a98:	617b      	str	r3, [r7, #20]
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	6a1b      	ldr	r3, [r3, #32]
 8002a9e:	f023 0201 	bic.w	r2, r3, #1
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	621a      	str	r2, [r3, #32]
 8002aa6:	68fb      	ldr	r3, [r7, #12]
 8002aa8:	699b      	ldr	r3, [r3, #24]
 8002aaa:	613b      	str	r3, [r7, #16]
 8002aac:	693b      	ldr	r3, [r7, #16]
 8002aae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002ab2:	613b      	str	r3, [r7, #16]
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	011b      	lsls	r3, r3, #4
 8002ab8:	693a      	ldr	r2, [r7, #16]
 8002aba:	4313      	orrs	r3, r2
 8002abc:	613b      	str	r3, [r7, #16]
 8002abe:	697b      	ldr	r3, [r7, #20]
 8002ac0:	f023 030a 	bic.w	r3, r3, #10
 8002ac4:	617b      	str	r3, [r7, #20]
 8002ac6:	697a      	ldr	r2, [r7, #20]
 8002ac8:	68bb      	ldr	r3, [r7, #8]
 8002aca:	4313      	orrs	r3, r2
 8002acc:	617b      	str	r3, [r7, #20]
 8002ace:	68fb      	ldr	r3, [r7, #12]
 8002ad0:	693a      	ldr	r2, [r7, #16]
 8002ad2:	619a      	str	r2, [r3, #24]
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	697a      	ldr	r2, [r7, #20]
 8002ad8:	621a      	str	r2, [r3, #32]
 8002ada:	bf00      	nop
 8002adc:	371c      	adds	r7, #28
 8002ade:	46bd      	mov	sp, r7
 8002ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ae4:	4770      	bx	lr

08002ae6 <TIM_TI2_ConfigInputStage>:
 8002ae6:	b480      	push	{r7}
 8002ae8:	b087      	sub	sp, #28
 8002aea:	af00      	add	r7, sp, #0
 8002aec:	60f8      	str	r0, [r7, #12]
 8002aee:	60b9      	str	r1, [r7, #8]
 8002af0:	607a      	str	r2, [r7, #4]
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	6a1b      	ldr	r3, [r3, #32]
 8002af6:	f023 0210 	bic.w	r2, r3, #16
 8002afa:	68fb      	ldr	r3, [r7, #12]
 8002afc:	621a      	str	r2, [r3, #32]
 8002afe:	68fb      	ldr	r3, [r7, #12]
 8002b00:	699b      	ldr	r3, [r3, #24]
 8002b02:	617b      	str	r3, [r7, #20]
 8002b04:	68fb      	ldr	r3, [r7, #12]
 8002b06:	6a1b      	ldr	r3, [r3, #32]
 8002b08:	613b      	str	r3, [r7, #16]
 8002b0a:	697b      	ldr	r3, [r7, #20]
 8002b0c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002b10:	617b      	str	r3, [r7, #20]
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	031b      	lsls	r3, r3, #12
 8002b16:	697a      	ldr	r2, [r7, #20]
 8002b18:	4313      	orrs	r3, r2
 8002b1a:	617b      	str	r3, [r7, #20]
 8002b1c:	693b      	ldr	r3, [r7, #16]
 8002b1e:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002b22:	613b      	str	r3, [r7, #16]
 8002b24:	68bb      	ldr	r3, [r7, #8]
 8002b26:	011b      	lsls	r3, r3, #4
 8002b28:	693a      	ldr	r2, [r7, #16]
 8002b2a:	4313      	orrs	r3, r2
 8002b2c:	613b      	str	r3, [r7, #16]
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	697a      	ldr	r2, [r7, #20]
 8002b32:	619a      	str	r2, [r3, #24]
 8002b34:	68fb      	ldr	r3, [r7, #12]
 8002b36:	693a      	ldr	r2, [r7, #16]
 8002b38:	621a      	str	r2, [r3, #32]
 8002b3a:	bf00      	nop
 8002b3c:	371c      	adds	r7, #28
 8002b3e:	46bd      	mov	sp, r7
 8002b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b44:	4770      	bx	lr

08002b46 <TIM_ITRx_SetConfig>:
 8002b46:	b480      	push	{r7}
 8002b48:	b085      	sub	sp, #20
 8002b4a:	af00      	add	r7, sp, #0
 8002b4c:	6078      	str	r0, [r7, #4]
 8002b4e:	6039      	str	r1, [r7, #0]
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	689b      	ldr	r3, [r3, #8]
 8002b54:	60fb      	str	r3, [r7, #12]
 8002b56:	68fb      	ldr	r3, [r7, #12]
 8002b58:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002b5c:	60fb      	str	r3, [r7, #12]
 8002b5e:	683a      	ldr	r2, [r7, #0]
 8002b60:	68fb      	ldr	r3, [r7, #12]
 8002b62:	4313      	orrs	r3, r2
 8002b64:	f043 0307 	orr.w	r3, r3, #7
 8002b68:	60fb      	str	r3, [r7, #12]
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	68fa      	ldr	r2, [r7, #12]
 8002b6e:	609a      	str	r2, [r3, #8]
 8002b70:	bf00      	nop
 8002b72:	3714      	adds	r7, #20
 8002b74:	46bd      	mov	sp, r7
 8002b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b7a:	4770      	bx	lr

08002b7c <TIM_ETR_SetConfig>:
 8002b7c:	b480      	push	{r7}
 8002b7e:	b087      	sub	sp, #28
 8002b80:	af00      	add	r7, sp, #0
 8002b82:	60f8      	str	r0, [r7, #12]
 8002b84:	60b9      	str	r1, [r7, #8]
 8002b86:	607a      	str	r2, [r7, #4]
 8002b88:	603b      	str	r3, [r7, #0]
 8002b8a:	68fb      	ldr	r3, [r7, #12]
 8002b8c:	689b      	ldr	r3, [r3, #8]
 8002b8e:	617b      	str	r3, [r7, #20]
 8002b90:	697b      	ldr	r3, [r7, #20]
 8002b92:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002b96:	617b      	str	r3, [r7, #20]
 8002b98:	683b      	ldr	r3, [r7, #0]
 8002b9a:	021a      	lsls	r2, r3, #8
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	431a      	orrs	r2, r3
 8002ba0:	68bb      	ldr	r3, [r7, #8]
 8002ba2:	4313      	orrs	r3, r2
 8002ba4:	697a      	ldr	r2, [r7, #20]
 8002ba6:	4313      	orrs	r3, r2
 8002ba8:	617b      	str	r3, [r7, #20]
 8002baa:	68fb      	ldr	r3, [r7, #12]
 8002bac:	697a      	ldr	r2, [r7, #20]
 8002bae:	609a      	str	r2, [r3, #8]
 8002bb0:	bf00      	nop
 8002bb2:	371c      	adds	r7, #28
 8002bb4:	46bd      	mov	sp, r7
 8002bb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bba:	4770      	bx	lr

08002bbc <HAL_TIMEx_MasterConfigSynchronization>:
 8002bbc:	b480      	push	{r7}
 8002bbe:	b085      	sub	sp, #20
 8002bc0:	af00      	add	r7, sp, #0
 8002bc2:	6078      	str	r0, [r7, #4]
 8002bc4:	6039      	str	r1, [r7, #0]
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002bcc:	2b01      	cmp	r3, #1
 8002bce:	d101      	bne.n	8002bd4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002bd0:	2302      	movs	r3, #2
 8002bd2:	e05a      	b.n	8002c8a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	2201      	movs	r2, #1
 8002bd8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	2202      	movs	r2, #2
 8002be0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	685b      	ldr	r3, [r3, #4]
 8002bea:	60fb      	str	r3, [r7, #12]
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	689b      	ldr	r3, [r3, #8]
 8002bf2:	60bb      	str	r3, [r7, #8]
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002bfa:	60fb      	str	r3, [r7, #12]
 8002bfc:	683b      	ldr	r3, [r7, #0]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	68fa      	ldr	r2, [r7, #12]
 8002c02:	4313      	orrs	r3, r2
 8002c04:	60fb      	str	r3, [r7, #12]
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	68fa      	ldr	r2, [r7, #12]
 8002c0c:	605a      	str	r2, [r3, #4]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	4a21      	ldr	r2, [pc, #132]	; (8002c98 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8002c14:	4293      	cmp	r3, r2
 8002c16:	d022      	beq.n	8002c5e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c20:	d01d      	beq.n	8002c5e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	681b      	ldr	r3, [r3, #0]
 8002c26:	4a1d      	ldr	r2, [pc, #116]	; (8002c9c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8002c28:	4293      	cmp	r3, r2
 8002c2a:	d018      	beq.n	8002c5e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	4a1b      	ldr	r2, [pc, #108]	; (8002ca0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8002c32:	4293      	cmp	r3, r2
 8002c34:	d013      	beq.n	8002c5e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	4a1a      	ldr	r2, [pc, #104]	; (8002ca4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8002c3c:	4293      	cmp	r3, r2
 8002c3e:	d00e      	beq.n	8002c5e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	4a18      	ldr	r2, [pc, #96]	; (8002ca8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8002c46:	4293      	cmp	r3, r2
 8002c48:	d009      	beq.n	8002c5e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	4a17      	ldr	r2, [pc, #92]	; (8002cac <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8002c50:	4293      	cmp	r3, r2
 8002c52:	d004      	beq.n	8002c5e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	4a15      	ldr	r2, [pc, #84]	; (8002cb0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8002c5a:	4293      	cmp	r3, r2
 8002c5c:	d10c      	bne.n	8002c78 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8002c5e:	68bb      	ldr	r3, [r7, #8]
 8002c60:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002c64:	60bb      	str	r3, [r7, #8]
 8002c66:	683b      	ldr	r3, [r7, #0]
 8002c68:	685b      	ldr	r3, [r3, #4]
 8002c6a:	68ba      	ldr	r2, [r7, #8]
 8002c6c:	4313      	orrs	r3, r2
 8002c6e:	60bb      	str	r3, [r7, #8]
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	68ba      	ldr	r2, [r7, #8]
 8002c76:	609a      	str	r2, [r3, #8]
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	2201      	movs	r2, #1
 8002c7c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	2200      	movs	r2, #0
 8002c84:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c88:	2300      	movs	r3, #0
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	3714      	adds	r7, #20
 8002c8e:	46bd      	mov	sp, r7
 8002c90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c94:	4770      	bx	lr
 8002c96:	bf00      	nop
 8002c98:	40010000 	.word	0x40010000
 8002c9c:	40000400 	.word	0x40000400
 8002ca0:	40000800 	.word	0x40000800
 8002ca4:	40000c00 	.word	0x40000c00
 8002ca8:	40010400 	.word	0x40010400
 8002cac:	40014000 	.word	0x40014000
 8002cb0:	40001800 	.word	0x40001800

08002cb4 <HAL_TIMEx_CommutCallback>:
 8002cb4:	b480      	push	{r7}
 8002cb6:	b083      	sub	sp, #12
 8002cb8:	af00      	add	r7, sp, #0
 8002cba:	6078      	str	r0, [r7, #4]
 8002cbc:	bf00      	nop
 8002cbe:	370c      	adds	r7, #12
 8002cc0:	46bd      	mov	sp, r7
 8002cc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc6:	4770      	bx	lr

08002cc8 <HAL_TIMEx_BreakCallback>:
 8002cc8:	b480      	push	{r7}
 8002cca:	b083      	sub	sp, #12
 8002ccc:	af00      	add	r7, sp, #0
 8002cce:	6078      	str	r0, [r7, #4]
 8002cd0:	bf00      	nop
 8002cd2:	370c      	adds	r7, #12
 8002cd4:	46bd      	mov	sp, r7
 8002cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cda:	4770      	bx	lr

08002cdc <__errno>:
 8002cdc:	4b01      	ldr	r3, [pc, #4]	; (8002ce4 <__errno+0x8>)
 8002cde:	6818      	ldr	r0, [r3, #0]
 8002ce0:	4770      	bx	lr
 8002ce2:	bf00      	nop
 8002ce4:	20000014 	.word	0x20000014

08002ce8 <_fwrite_r>:
 8002ce8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002cec:	9c08      	ldr	r4, [sp, #32]
 8002cee:	4689      	mov	r9, r1
 8002cf0:	4617      	mov	r7, r2
 8002cf2:	fb02 f803 	mul.w	r8, r2, r3
 8002cf6:	4605      	mov	r5, r0
 8002cf8:	b118      	cbz	r0, 8002d02 <_fwrite_r+0x1a>
 8002cfa:	6983      	ldr	r3, [r0, #24]
 8002cfc:	b90b      	cbnz	r3, 8002d02 <_fwrite_r+0x1a>
 8002cfe:	f000 fb3f 	bl	8003380 <__sinit>
 8002d02:	4b26      	ldr	r3, [pc, #152]	; (8002d9c <_fwrite_r+0xb4>)
 8002d04:	429c      	cmp	r4, r3
 8002d06:	d123      	bne.n	8002d50 <_fwrite_r+0x68>
 8002d08:	686c      	ldr	r4, [r5, #4]
 8002d0a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002d0c:	07de      	lsls	r6, r3, #31
 8002d0e:	d405      	bmi.n	8002d1c <_fwrite_r+0x34>
 8002d10:	89a3      	ldrh	r3, [r4, #12]
 8002d12:	0598      	lsls	r0, r3, #22
 8002d14:	d402      	bmi.n	8002d1c <_fwrite_r+0x34>
 8002d16:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002d18:	f000 f879 	bl	8002e0e <__retarget_lock_acquire_recursive>
 8002d1c:	89a3      	ldrh	r3, [r4, #12]
 8002d1e:	0719      	lsls	r1, r3, #28
 8002d20:	d520      	bpl.n	8002d64 <_fwrite_r+0x7c>
 8002d22:	6923      	ldr	r3, [r4, #16]
 8002d24:	b1f3      	cbz	r3, 8002d64 <_fwrite_r+0x7c>
 8002d26:	2600      	movs	r6, #0
 8002d28:	4546      	cmp	r6, r8
 8002d2a:	d029      	beq.n	8002d80 <_fwrite_r+0x98>
 8002d2c:	68a0      	ldr	r0, [r4, #8]
 8002d2e:	f819 1006 	ldrb.w	r1, [r9, r6]
 8002d32:	3801      	subs	r0, #1
 8002d34:	2800      	cmp	r0, #0
 8002d36:	60a0      	str	r0, [r4, #8]
 8002d38:	da04      	bge.n	8002d44 <_fwrite_r+0x5c>
 8002d3a:	69a3      	ldr	r3, [r4, #24]
 8002d3c:	4298      	cmp	r0, r3
 8002d3e:	db19      	blt.n	8002d74 <_fwrite_r+0x8c>
 8002d40:	290a      	cmp	r1, #10
 8002d42:	d017      	beq.n	8002d74 <_fwrite_r+0x8c>
 8002d44:	6823      	ldr	r3, [r4, #0]
 8002d46:	1c5a      	adds	r2, r3, #1
 8002d48:	6022      	str	r2, [r4, #0]
 8002d4a:	7019      	strb	r1, [r3, #0]
 8002d4c:	3601      	adds	r6, #1
 8002d4e:	e7eb      	b.n	8002d28 <_fwrite_r+0x40>
 8002d50:	4b13      	ldr	r3, [pc, #76]	; (8002da0 <_fwrite_r+0xb8>)
 8002d52:	429c      	cmp	r4, r3
 8002d54:	d101      	bne.n	8002d5a <_fwrite_r+0x72>
 8002d56:	68ac      	ldr	r4, [r5, #8]
 8002d58:	e7d7      	b.n	8002d0a <_fwrite_r+0x22>
 8002d5a:	4b12      	ldr	r3, [pc, #72]	; (8002da4 <_fwrite_r+0xbc>)
 8002d5c:	429c      	cmp	r4, r3
 8002d5e:	bf08      	it	eq
 8002d60:	68ec      	ldreq	r4, [r5, #12]
 8002d62:	e7d2      	b.n	8002d0a <_fwrite_r+0x22>
 8002d64:	4621      	mov	r1, r4
 8002d66:	4628      	mov	r0, r5
 8002d68:	f000 f982 	bl	8003070 <__swsetup_r>
 8002d6c:	2800      	cmp	r0, #0
 8002d6e:	d0da      	beq.n	8002d26 <_fwrite_r+0x3e>
 8002d70:	2600      	movs	r6, #0
 8002d72:	e005      	b.n	8002d80 <_fwrite_r+0x98>
 8002d74:	4622      	mov	r2, r4
 8002d76:	4628      	mov	r0, r5
 8002d78:	f000 f928 	bl	8002fcc <__swbuf_r>
 8002d7c:	3001      	adds	r0, #1
 8002d7e:	d1e5      	bne.n	8002d4c <_fwrite_r+0x64>
 8002d80:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002d82:	07da      	lsls	r2, r3, #31
 8002d84:	d405      	bmi.n	8002d92 <_fwrite_r+0xaa>
 8002d86:	89a3      	ldrh	r3, [r4, #12]
 8002d88:	059b      	lsls	r3, r3, #22
 8002d8a:	d402      	bmi.n	8002d92 <_fwrite_r+0xaa>
 8002d8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002d8e:	f000 f83f 	bl	8002e10 <__retarget_lock_release_recursive>
 8002d92:	fbb6 f0f7 	udiv	r0, r6, r7
 8002d96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002d9a:	bf00      	nop
 8002d9c:	080038c4 	.word	0x080038c4
 8002da0:	080038e4 	.word	0x080038e4
 8002da4:	080038a4 	.word	0x080038a4

08002da8 <fwrite>:
 8002da8:	b507      	push	{r0, r1, r2, lr}
 8002daa:	9300      	str	r3, [sp, #0]
 8002dac:	4613      	mov	r3, r2
 8002dae:	460a      	mov	r2, r1
 8002db0:	4601      	mov	r1, r0
 8002db2:	4803      	ldr	r0, [pc, #12]	; (8002dc0 <fwrite+0x18>)
 8002db4:	6800      	ldr	r0, [r0, #0]
 8002db6:	f7ff ff97 	bl	8002ce8 <_fwrite_r>
 8002dba:	b003      	add	sp, #12
 8002dbc:	f85d fb04 	ldr.w	pc, [sp], #4
 8002dc0:	20000014 	.word	0x20000014

08002dc4 <__libc_init_array>:
 8002dc4:	b570      	push	{r4, r5, r6, lr}
 8002dc6:	4d0d      	ldr	r5, [pc, #52]	; (8002dfc <__libc_init_array+0x38>)
 8002dc8:	4c0d      	ldr	r4, [pc, #52]	; (8002e00 <__libc_init_array+0x3c>)
 8002dca:	1b64      	subs	r4, r4, r5
 8002dcc:	10a4      	asrs	r4, r4, #2
 8002dce:	2600      	movs	r6, #0
 8002dd0:	42a6      	cmp	r6, r4
 8002dd2:	d109      	bne.n	8002de8 <__libc_init_array+0x24>
 8002dd4:	4d0b      	ldr	r5, [pc, #44]	; (8002e04 <__libc_init_array+0x40>)
 8002dd6:	4c0c      	ldr	r4, [pc, #48]	; (8002e08 <__libc_init_array+0x44>)
 8002dd8:	f000 fd4e 	bl	8003878 <_init>
 8002ddc:	1b64      	subs	r4, r4, r5
 8002dde:	10a4      	asrs	r4, r4, #2
 8002de0:	2600      	movs	r6, #0
 8002de2:	42a6      	cmp	r6, r4
 8002de4:	d105      	bne.n	8002df2 <__libc_init_array+0x2e>
 8002de6:	bd70      	pop	{r4, r5, r6, pc}
 8002de8:	f855 3b04 	ldr.w	r3, [r5], #4
 8002dec:	4798      	blx	r3
 8002dee:	3601      	adds	r6, #1
 8002df0:	e7ee      	b.n	8002dd0 <__libc_init_array+0xc>
 8002df2:	f855 3b04 	ldr.w	r3, [r5], #4
 8002df6:	4798      	blx	r3
 8002df8:	3601      	adds	r6, #1
 8002dfa:	e7f2      	b.n	8002de2 <__libc_init_array+0x1e>
 8002dfc:	0800390c 	.word	0x0800390c
 8002e00:	0800390c 	.word	0x0800390c
 8002e04:	0800390c 	.word	0x0800390c
 8002e08:	08003910 	.word	0x08003910

08002e0c <__retarget_lock_init_recursive>:
 8002e0c:	4770      	bx	lr

08002e0e <__retarget_lock_acquire_recursive>:
 8002e0e:	4770      	bx	lr

08002e10 <__retarget_lock_release_recursive>:
 8002e10:	4770      	bx	lr

08002e12 <memcpy>:
 8002e12:	440a      	add	r2, r1
 8002e14:	4291      	cmp	r1, r2
 8002e16:	f100 33ff 	add.w	r3, r0, #4294967295
 8002e1a:	d100      	bne.n	8002e1e <memcpy+0xc>
 8002e1c:	4770      	bx	lr
 8002e1e:	b510      	push	{r4, lr}
 8002e20:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002e24:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002e28:	4291      	cmp	r1, r2
 8002e2a:	d1f9      	bne.n	8002e20 <memcpy+0xe>
 8002e2c:	bd10      	pop	{r4, pc}

08002e2e <memset>:
 8002e2e:	4402      	add	r2, r0
 8002e30:	4603      	mov	r3, r0
 8002e32:	4293      	cmp	r3, r2
 8002e34:	d100      	bne.n	8002e38 <memset+0xa>
 8002e36:	4770      	bx	lr
 8002e38:	f803 1b01 	strb.w	r1, [r3], #1
 8002e3c:	e7f9      	b.n	8002e32 <memset+0x4>
	...

08002e40 <setvbuf>:
 8002e40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002e44:	461d      	mov	r5, r3
 8002e46:	4b5d      	ldr	r3, [pc, #372]	; (8002fbc <setvbuf+0x17c>)
 8002e48:	681f      	ldr	r7, [r3, #0]
 8002e4a:	4604      	mov	r4, r0
 8002e4c:	460e      	mov	r6, r1
 8002e4e:	4690      	mov	r8, r2
 8002e50:	b127      	cbz	r7, 8002e5c <setvbuf+0x1c>
 8002e52:	69bb      	ldr	r3, [r7, #24]
 8002e54:	b913      	cbnz	r3, 8002e5c <setvbuf+0x1c>
 8002e56:	4638      	mov	r0, r7
 8002e58:	f000 fa92 	bl	8003380 <__sinit>
 8002e5c:	4b58      	ldr	r3, [pc, #352]	; (8002fc0 <setvbuf+0x180>)
 8002e5e:	429c      	cmp	r4, r3
 8002e60:	d167      	bne.n	8002f32 <setvbuf+0xf2>
 8002e62:	687c      	ldr	r4, [r7, #4]
 8002e64:	f1b8 0f02 	cmp.w	r8, #2
 8002e68:	d006      	beq.n	8002e78 <setvbuf+0x38>
 8002e6a:	f1b8 0f01 	cmp.w	r8, #1
 8002e6e:	f200 809f 	bhi.w	8002fb0 <setvbuf+0x170>
 8002e72:	2d00      	cmp	r5, #0
 8002e74:	f2c0 809c 	blt.w	8002fb0 <setvbuf+0x170>
 8002e78:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002e7a:	07db      	lsls	r3, r3, #31
 8002e7c:	d405      	bmi.n	8002e8a <setvbuf+0x4a>
 8002e7e:	89a3      	ldrh	r3, [r4, #12]
 8002e80:	0598      	lsls	r0, r3, #22
 8002e82:	d402      	bmi.n	8002e8a <setvbuf+0x4a>
 8002e84:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002e86:	f7ff ffc2 	bl	8002e0e <__retarget_lock_acquire_recursive>
 8002e8a:	4621      	mov	r1, r4
 8002e8c:	4638      	mov	r0, r7
 8002e8e:	f000 f9e3 	bl	8003258 <_fflush_r>
 8002e92:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002e94:	b141      	cbz	r1, 8002ea8 <setvbuf+0x68>
 8002e96:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002e9a:	4299      	cmp	r1, r3
 8002e9c:	d002      	beq.n	8002ea4 <setvbuf+0x64>
 8002e9e:	4638      	mov	r0, r7
 8002ea0:	f000 fb78 	bl	8003594 <_free_r>
 8002ea4:	2300      	movs	r3, #0
 8002ea6:	6363      	str	r3, [r4, #52]	; 0x34
 8002ea8:	2300      	movs	r3, #0
 8002eaa:	61a3      	str	r3, [r4, #24]
 8002eac:	6063      	str	r3, [r4, #4]
 8002eae:	89a3      	ldrh	r3, [r4, #12]
 8002eb0:	0619      	lsls	r1, r3, #24
 8002eb2:	d503      	bpl.n	8002ebc <setvbuf+0x7c>
 8002eb4:	6921      	ldr	r1, [r4, #16]
 8002eb6:	4638      	mov	r0, r7
 8002eb8:	f000 fb6c 	bl	8003594 <_free_r>
 8002ebc:	89a3      	ldrh	r3, [r4, #12]
 8002ebe:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 8002ec2:	f023 0303 	bic.w	r3, r3, #3
 8002ec6:	f1b8 0f02 	cmp.w	r8, #2
 8002eca:	81a3      	strh	r3, [r4, #12]
 8002ecc:	d06c      	beq.n	8002fa8 <setvbuf+0x168>
 8002ece:	ab01      	add	r3, sp, #4
 8002ed0:	466a      	mov	r2, sp
 8002ed2:	4621      	mov	r1, r4
 8002ed4:	4638      	mov	r0, r7
 8002ed6:	f000 faf0 	bl	80034ba <__swhatbuf_r>
 8002eda:	89a3      	ldrh	r3, [r4, #12]
 8002edc:	4318      	orrs	r0, r3
 8002ede:	81a0      	strh	r0, [r4, #12]
 8002ee0:	2d00      	cmp	r5, #0
 8002ee2:	d130      	bne.n	8002f46 <setvbuf+0x106>
 8002ee4:	9d00      	ldr	r5, [sp, #0]
 8002ee6:	4628      	mov	r0, r5
 8002ee8:	f000 fb4c 	bl	8003584 <malloc>
 8002eec:	4606      	mov	r6, r0
 8002eee:	2800      	cmp	r0, #0
 8002ef0:	d155      	bne.n	8002f9e <setvbuf+0x15e>
 8002ef2:	f8dd 9000 	ldr.w	r9, [sp]
 8002ef6:	45a9      	cmp	r9, r5
 8002ef8:	d14a      	bne.n	8002f90 <setvbuf+0x150>
 8002efa:	f04f 35ff 	mov.w	r5, #4294967295
 8002efe:	2200      	movs	r2, #0
 8002f00:	60a2      	str	r2, [r4, #8]
 8002f02:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8002f06:	6022      	str	r2, [r4, #0]
 8002f08:	6122      	str	r2, [r4, #16]
 8002f0a:	2201      	movs	r2, #1
 8002f0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002f10:	6162      	str	r2, [r4, #20]
 8002f12:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8002f14:	f043 0302 	orr.w	r3, r3, #2
 8002f18:	07d2      	lsls	r2, r2, #31
 8002f1a:	81a3      	strh	r3, [r4, #12]
 8002f1c:	d405      	bmi.n	8002f2a <setvbuf+0xea>
 8002f1e:	f413 7f00 	tst.w	r3, #512	; 0x200
 8002f22:	d102      	bne.n	8002f2a <setvbuf+0xea>
 8002f24:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002f26:	f7ff ff73 	bl	8002e10 <__retarget_lock_release_recursive>
 8002f2a:	4628      	mov	r0, r5
 8002f2c:	b003      	add	sp, #12
 8002f2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002f32:	4b24      	ldr	r3, [pc, #144]	; (8002fc4 <setvbuf+0x184>)
 8002f34:	429c      	cmp	r4, r3
 8002f36:	d101      	bne.n	8002f3c <setvbuf+0xfc>
 8002f38:	68bc      	ldr	r4, [r7, #8]
 8002f3a:	e793      	b.n	8002e64 <setvbuf+0x24>
 8002f3c:	4b22      	ldr	r3, [pc, #136]	; (8002fc8 <setvbuf+0x188>)
 8002f3e:	429c      	cmp	r4, r3
 8002f40:	bf08      	it	eq
 8002f42:	68fc      	ldreq	r4, [r7, #12]
 8002f44:	e78e      	b.n	8002e64 <setvbuf+0x24>
 8002f46:	2e00      	cmp	r6, #0
 8002f48:	d0cd      	beq.n	8002ee6 <setvbuf+0xa6>
 8002f4a:	69bb      	ldr	r3, [r7, #24]
 8002f4c:	b913      	cbnz	r3, 8002f54 <setvbuf+0x114>
 8002f4e:	4638      	mov	r0, r7
 8002f50:	f000 fa16 	bl	8003380 <__sinit>
 8002f54:	f1b8 0f01 	cmp.w	r8, #1
 8002f58:	bf08      	it	eq
 8002f5a:	89a3      	ldrheq	r3, [r4, #12]
 8002f5c:	6026      	str	r6, [r4, #0]
 8002f5e:	bf04      	itt	eq
 8002f60:	f043 0301 	orreq.w	r3, r3, #1
 8002f64:	81a3      	strheq	r3, [r4, #12]
 8002f66:	89a2      	ldrh	r2, [r4, #12]
 8002f68:	f012 0308 	ands.w	r3, r2, #8
 8002f6c:	e9c4 6504 	strd	r6, r5, [r4, #16]
 8002f70:	d01c      	beq.n	8002fac <setvbuf+0x16c>
 8002f72:	07d3      	lsls	r3, r2, #31
 8002f74:	bf41      	itttt	mi
 8002f76:	2300      	movmi	r3, #0
 8002f78:	426d      	negmi	r5, r5
 8002f7a:	60a3      	strmi	r3, [r4, #8]
 8002f7c:	61a5      	strmi	r5, [r4, #24]
 8002f7e:	bf58      	it	pl
 8002f80:	60a5      	strpl	r5, [r4, #8]
 8002f82:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8002f84:	f015 0501 	ands.w	r5, r5, #1
 8002f88:	d115      	bne.n	8002fb6 <setvbuf+0x176>
 8002f8a:	f412 7f00 	tst.w	r2, #512	; 0x200
 8002f8e:	e7c8      	b.n	8002f22 <setvbuf+0xe2>
 8002f90:	4648      	mov	r0, r9
 8002f92:	f000 faf7 	bl	8003584 <malloc>
 8002f96:	4606      	mov	r6, r0
 8002f98:	2800      	cmp	r0, #0
 8002f9a:	d0ae      	beq.n	8002efa <setvbuf+0xba>
 8002f9c:	464d      	mov	r5, r9
 8002f9e:	89a3      	ldrh	r3, [r4, #12]
 8002fa0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002fa4:	81a3      	strh	r3, [r4, #12]
 8002fa6:	e7d0      	b.n	8002f4a <setvbuf+0x10a>
 8002fa8:	2500      	movs	r5, #0
 8002faa:	e7a8      	b.n	8002efe <setvbuf+0xbe>
 8002fac:	60a3      	str	r3, [r4, #8]
 8002fae:	e7e8      	b.n	8002f82 <setvbuf+0x142>
 8002fb0:	f04f 35ff 	mov.w	r5, #4294967295
 8002fb4:	e7b9      	b.n	8002f2a <setvbuf+0xea>
 8002fb6:	2500      	movs	r5, #0
 8002fb8:	e7b7      	b.n	8002f2a <setvbuf+0xea>
 8002fba:	bf00      	nop
 8002fbc:	20000014 	.word	0x20000014
 8002fc0:	080038c4 	.word	0x080038c4
 8002fc4:	080038e4 	.word	0x080038e4
 8002fc8:	080038a4 	.word	0x080038a4

08002fcc <__swbuf_r>:
 8002fcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002fce:	460e      	mov	r6, r1
 8002fd0:	4614      	mov	r4, r2
 8002fd2:	4605      	mov	r5, r0
 8002fd4:	b118      	cbz	r0, 8002fde <__swbuf_r+0x12>
 8002fd6:	6983      	ldr	r3, [r0, #24]
 8002fd8:	b90b      	cbnz	r3, 8002fde <__swbuf_r+0x12>
 8002fda:	f000 f9d1 	bl	8003380 <__sinit>
 8002fde:	4b21      	ldr	r3, [pc, #132]	; (8003064 <__swbuf_r+0x98>)
 8002fe0:	429c      	cmp	r4, r3
 8002fe2:	d12b      	bne.n	800303c <__swbuf_r+0x70>
 8002fe4:	686c      	ldr	r4, [r5, #4]
 8002fe6:	69a3      	ldr	r3, [r4, #24]
 8002fe8:	60a3      	str	r3, [r4, #8]
 8002fea:	89a3      	ldrh	r3, [r4, #12]
 8002fec:	071a      	lsls	r2, r3, #28
 8002fee:	d52f      	bpl.n	8003050 <__swbuf_r+0x84>
 8002ff0:	6923      	ldr	r3, [r4, #16]
 8002ff2:	b36b      	cbz	r3, 8003050 <__swbuf_r+0x84>
 8002ff4:	6923      	ldr	r3, [r4, #16]
 8002ff6:	6820      	ldr	r0, [r4, #0]
 8002ff8:	1ac0      	subs	r0, r0, r3
 8002ffa:	6963      	ldr	r3, [r4, #20]
 8002ffc:	b2f6      	uxtb	r6, r6
 8002ffe:	4283      	cmp	r3, r0
 8003000:	4637      	mov	r7, r6
 8003002:	dc04      	bgt.n	800300e <__swbuf_r+0x42>
 8003004:	4621      	mov	r1, r4
 8003006:	4628      	mov	r0, r5
 8003008:	f000 f926 	bl	8003258 <_fflush_r>
 800300c:	bb30      	cbnz	r0, 800305c <__swbuf_r+0x90>
 800300e:	68a3      	ldr	r3, [r4, #8]
 8003010:	3b01      	subs	r3, #1
 8003012:	60a3      	str	r3, [r4, #8]
 8003014:	6823      	ldr	r3, [r4, #0]
 8003016:	1c5a      	adds	r2, r3, #1
 8003018:	6022      	str	r2, [r4, #0]
 800301a:	701e      	strb	r6, [r3, #0]
 800301c:	6963      	ldr	r3, [r4, #20]
 800301e:	3001      	adds	r0, #1
 8003020:	4283      	cmp	r3, r0
 8003022:	d004      	beq.n	800302e <__swbuf_r+0x62>
 8003024:	89a3      	ldrh	r3, [r4, #12]
 8003026:	07db      	lsls	r3, r3, #31
 8003028:	d506      	bpl.n	8003038 <__swbuf_r+0x6c>
 800302a:	2e0a      	cmp	r6, #10
 800302c:	d104      	bne.n	8003038 <__swbuf_r+0x6c>
 800302e:	4621      	mov	r1, r4
 8003030:	4628      	mov	r0, r5
 8003032:	f000 f911 	bl	8003258 <_fflush_r>
 8003036:	b988      	cbnz	r0, 800305c <__swbuf_r+0x90>
 8003038:	4638      	mov	r0, r7
 800303a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800303c:	4b0a      	ldr	r3, [pc, #40]	; (8003068 <__swbuf_r+0x9c>)
 800303e:	429c      	cmp	r4, r3
 8003040:	d101      	bne.n	8003046 <__swbuf_r+0x7a>
 8003042:	68ac      	ldr	r4, [r5, #8]
 8003044:	e7cf      	b.n	8002fe6 <__swbuf_r+0x1a>
 8003046:	4b09      	ldr	r3, [pc, #36]	; (800306c <__swbuf_r+0xa0>)
 8003048:	429c      	cmp	r4, r3
 800304a:	bf08      	it	eq
 800304c:	68ec      	ldreq	r4, [r5, #12]
 800304e:	e7ca      	b.n	8002fe6 <__swbuf_r+0x1a>
 8003050:	4621      	mov	r1, r4
 8003052:	4628      	mov	r0, r5
 8003054:	f000 f80c 	bl	8003070 <__swsetup_r>
 8003058:	2800      	cmp	r0, #0
 800305a:	d0cb      	beq.n	8002ff4 <__swbuf_r+0x28>
 800305c:	f04f 37ff 	mov.w	r7, #4294967295
 8003060:	e7ea      	b.n	8003038 <__swbuf_r+0x6c>
 8003062:	bf00      	nop
 8003064:	080038c4 	.word	0x080038c4
 8003068:	080038e4 	.word	0x080038e4
 800306c:	080038a4 	.word	0x080038a4

08003070 <__swsetup_r>:
 8003070:	4b32      	ldr	r3, [pc, #200]	; (800313c <__swsetup_r+0xcc>)
 8003072:	b570      	push	{r4, r5, r6, lr}
 8003074:	681d      	ldr	r5, [r3, #0]
 8003076:	4606      	mov	r6, r0
 8003078:	460c      	mov	r4, r1
 800307a:	b125      	cbz	r5, 8003086 <__swsetup_r+0x16>
 800307c:	69ab      	ldr	r3, [r5, #24]
 800307e:	b913      	cbnz	r3, 8003086 <__swsetup_r+0x16>
 8003080:	4628      	mov	r0, r5
 8003082:	f000 f97d 	bl	8003380 <__sinit>
 8003086:	4b2e      	ldr	r3, [pc, #184]	; (8003140 <__swsetup_r+0xd0>)
 8003088:	429c      	cmp	r4, r3
 800308a:	d10f      	bne.n	80030ac <__swsetup_r+0x3c>
 800308c:	686c      	ldr	r4, [r5, #4]
 800308e:	89a3      	ldrh	r3, [r4, #12]
 8003090:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003094:	0719      	lsls	r1, r3, #28
 8003096:	d42c      	bmi.n	80030f2 <__swsetup_r+0x82>
 8003098:	06dd      	lsls	r5, r3, #27
 800309a:	d411      	bmi.n	80030c0 <__swsetup_r+0x50>
 800309c:	2309      	movs	r3, #9
 800309e:	6033      	str	r3, [r6, #0]
 80030a0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80030a4:	81a3      	strh	r3, [r4, #12]
 80030a6:	f04f 30ff 	mov.w	r0, #4294967295
 80030aa:	e03e      	b.n	800312a <__swsetup_r+0xba>
 80030ac:	4b25      	ldr	r3, [pc, #148]	; (8003144 <__swsetup_r+0xd4>)
 80030ae:	429c      	cmp	r4, r3
 80030b0:	d101      	bne.n	80030b6 <__swsetup_r+0x46>
 80030b2:	68ac      	ldr	r4, [r5, #8]
 80030b4:	e7eb      	b.n	800308e <__swsetup_r+0x1e>
 80030b6:	4b24      	ldr	r3, [pc, #144]	; (8003148 <__swsetup_r+0xd8>)
 80030b8:	429c      	cmp	r4, r3
 80030ba:	bf08      	it	eq
 80030bc:	68ec      	ldreq	r4, [r5, #12]
 80030be:	e7e6      	b.n	800308e <__swsetup_r+0x1e>
 80030c0:	0758      	lsls	r0, r3, #29
 80030c2:	d512      	bpl.n	80030ea <__swsetup_r+0x7a>
 80030c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80030c6:	b141      	cbz	r1, 80030da <__swsetup_r+0x6a>
 80030c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80030cc:	4299      	cmp	r1, r3
 80030ce:	d002      	beq.n	80030d6 <__swsetup_r+0x66>
 80030d0:	4630      	mov	r0, r6
 80030d2:	f000 fa5f 	bl	8003594 <_free_r>
 80030d6:	2300      	movs	r3, #0
 80030d8:	6363      	str	r3, [r4, #52]	; 0x34
 80030da:	89a3      	ldrh	r3, [r4, #12]
 80030dc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80030e0:	81a3      	strh	r3, [r4, #12]
 80030e2:	2300      	movs	r3, #0
 80030e4:	6063      	str	r3, [r4, #4]
 80030e6:	6923      	ldr	r3, [r4, #16]
 80030e8:	6023      	str	r3, [r4, #0]
 80030ea:	89a3      	ldrh	r3, [r4, #12]
 80030ec:	f043 0308 	orr.w	r3, r3, #8
 80030f0:	81a3      	strh	r3, [r4, #12]
 80030f2:	6923      	ldr	r3, [r4, #16]
 80030f4:	b94b      	cbnz	r3, 800310a <__swsetup_r+0x9a>
 80030f6:	89a3      	ldrh	r3, [r4, #12]
 80030f8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80030fc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003100:	d003      	beq.n	800310a <__swsetup_r+0x9a>
 8003102:	4621      	mov	r1, r4
 8003104:	4630      	mov	r0, r6
 8003106:	f000 f9fd 	bl	8003504 <__smakebuf_r>
 800310a:	89a0      	ldrh	r0, [r4, #12]
 800310c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003110:	f010 0301 	ands.w	r3, r0, #1
 8003114:	d00a      	beq.n	800312c <__swsetup_r+0xbc>
 8003116:	2300      	movs	r3, #0
 8003118:	60a3      	str	r3, [r4, #8]
 800311a:	6963      	ldr	r3, [r4, #20]
 800311c:	425b      	negs	r3, r3
 800311e:	61a3      	str	r3, [r4, #24]
 8003120:	6923      	ldr	r3, [r4, #16]
 8003122:	b943      	cbnz	r3, 8003136 <__swsetup_r+0xc6>
 8003124:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003128:	d1ba      	bne.n	80030a0 <__swsetup_r+0x30>
 800312a:	bd70      	pop	{r4, r5, r6, pc}
 800312c:	0781      	lsls	r1, r0, #30
 800312e:	bf58      	it	pl
 8003130:	6963      	ldrpl	r3, [r4, #20]
 8003132:	60a3      	str	r3, [r4, #8]
 8003134:	e7f4      	b.n	8003120 <__swsetup_r+0xb0>
 8003136:	2000      	movs	r0, #0
 8003138:	e7f7      	b.n	800312a <__swsetup_r+0xba>
 800313a:	bf00      	nop
 800313c:	20000014 	.word	0x20000014
 8003140:	080038c4 	.word	0x080038c4
 8003144:	080038e4 	.word	0x080038e4
 8003148:	080038a4 	.word	0x080038a4

0800314c <__sflush_r>:
 800314c:	898a      	ldrh	r2, [r1, #12]
 800314e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003152:	4605      	mov	r5, r0
 8003154:	0710      	lsls	r0, r2, #28
 8003156:	460c      	mov	r4, r1
 8003158:	d458      	bmi.n	800320c <__sflush_r+0xc0>
 800315a:	684b      	ldr	r3, [r1, #4]
 800315c:	2b00      	cmp	r3, #0
 800315e:	dc05      	bgt.n	800316c <__sflush_r+0x20>
 8003160:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003162:	2b00      	cmp	r3, #0
 8003164:	dc02      	bgt.n	800316c <__sflush_r+0x20>
 8003166:	2000      	movs	r0, #0
 8003168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800316c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800316e:	2e00      	cmp	r6, #0
 8003170:	d0f9      	beq.n	8003166 <__sflush_r+0x1a>
 8003172:	2300      	movs	r3, #0
 8003174:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003178:	682f      	ldr	r7, [r5, #0]
 800317a:	602b      	str	r3, [r5, #0]
 800317c:	d032      	beq.n	80031e4 <__sflush_r+0x98>
 800317e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003180:	89a3      	ldrh	r3, [r4, #12]
 8003182:	075a      	lsls	r2, r3, #29
 8003184:	d505      	bpl.n	8003192 <__sflush_r+0x46>
 8003186:	6863      	ldr	r3, [r4, #4]
 8003188:	1ac0      	subs	r0, r0, r3
 800318a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800318c:	b10b      	cbz	r3, 8003192 <__sflush_r+0x46>
 800318e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003190:	1ac0      	subs	r0, r0, r3
 8003192:	2300      	movs	r3, #0
 8003194:	4602      	mov	r2, r0
 8003196:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003198:	6a21      	ldr	r1, [r4, #32]
 800319a:	4628      	mov	r0, r5
 800319c:	47b0      	blx	r6
 800319e:	1c43      	adds	r3, r0, #1
 80031a0:	89a3      	ldrh	r3, [r4, #12]
 80031a2:	d106      	bne.n	80031b2 <__sflush_r+0x66>
 80031a4:	6829      	ldr	r1, [r5, #0]
 80031a6:	291d      	cmp	r1, #29
 80031a8:	d82c      	bhi.n	8003204 <__sflush_r+0xb8>
 80031aa:	4a2a      	ldr	r2, [pc, #168]	; (8003254 <__sflush_r+0x108>)
 80031ac:	40ca      	lsrs	r2, r1
 80031ae:	07d6      	lsls	r6, r2, #31
 80031b0:	d528      	bpl.n	8003204 <__sflush_r+0xb8>
 80031b2:	2200      	movs	r2, #0
 80031b4:	6062      	str	r2, [r4, #4]
 80031b6:	04d9      	lsls	r1, r3, #19
 80031b8:	6922      	ldr	r2, [r4, #16]
 80031ba:	6022      	str	r2, [r4, #0]
 80031bc:	d504      	bpl.n	80031c8 <__sflush_r+0x7c>
 80031be:	1c42      	adds	r2, r0, #1
 80031c0:	d101      	bne.n	80031c6 <__sflush_r+0x7a>
 80031c2:	682b      	ldr	r3, [r5, #0]
 80031c4:	b903      	cbnz	r3, 80031c8 <__sflush_r+0x7c>
 80031c6:	6560      	str	r0, [r4, #84]	; 0x54
 80031c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80031ca:	602f      	str	r7, [r5, #0]
 80031cc:	2900      	cmp	r1, #0
 80031ce:	d0ca      	beq.n	8003166 <__sflush_r+0x1a>
 80031d0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80031d4:	4299      	cmp	r1, r3
 80031d6:	d002      	beq.n	80031de <__sflush_r+0x92>
 80031d8:	4628      	mov	r0, r5
 80031da:	f000 f9db 	bl	8003594 <_free_r>
 80031de:	2000      	movs	r0, #0
 80031e0:	6360      	str	r0, [r4, #52]	; 0x34
 80031e2:	e7c1      	b.n	8003168 <__sflush_r+0x1c>
 80031e4:	6a21      	ldr	r1, [r4, #32]
 80031e6:	2301      	movs	r3, #1
 80031e8:	4628      	mov	r0, r5
 80031ea:	47b0      	blx	r6
 80031ec:	1c41      	adds	r1, r0, #1
 80031ee:	d1c7      	bne.n	8003180 <__sflush_r+0x34>
 80031f0:	682b      	ldr	r3, [r5, #0]
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d0c4      	beq.n	8003180 <__sflush_r+0x34>
 80031f6:	2b1d      	cmp	r3, #29
 80031f8:	d001      	beq.n	80031fe <__sflush_r+0xb2>
 80031fa:	2b16      	cmp	r3, #22
 80031fc:	d101      	bne.n	8003202 <__sflush_r+0xb6>
 80031fe:	602f      	str	r7, [r5, #0]
 8003200:	e7b1      	b.n	8003166 <__sflush_r+0x1a>
 8003202:	89a3      	ldrh	r3, [r4, #12]
 8003204:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003208:	81a3      	strh	r3, [r4, #12]
 800320a:	e7ad      	b.n	8003168 <__sflush_r+0x1c>
 800320c:	690f      	ldr	r7, [r1, #16]
 800320e:	2f00      	cmp	r7, #0
 8003210:	d0a9      	beq.n	8003166 <__sflush_r+0x1a>
 8003212:	0793      	lsls	r3, r2, #30
 8003214:	680e      	ldr	r6, [r1, #0]
 8003216:	bf08      	it	eq
 8003218:	694b      	ldreq	r3, [r1, #20]
 800321a:	600f      	str	r7, [r1, #0]
 800321c:	bf18      	it	ne
 800321e:	2300      	movne	r3, #0
 8003220:	eba6 0807 	sub.w	r8, r6, r7
 8003224:	608b      	str	r3, [r1, #8]
 8003226:	f1b8 0f00 	cmp.w	r8, #0
 800322a:	dd9c      	ble.n	8003166 <__sflush_r+0x1a>
 800322c:	6a21      	ldr	r1, [r4, #32]
 800322e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003230:	4643      	mov	r3, r8
 8003232:	463a      	mov	r2, r7
 8003234:	4628      	mov	r0, r5
 8003236:	47b0      	blx	r6
 8003238:	2800      	cmp	r0, #0
 800323a:	dc06      	bgt.n	800324a <__sflush_r+0xfe>
 800323c:	89a3      	ldrh	r3, [r4, #12]
 800323e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003242:	81a3      	strh	r3, [r4, #12]
 8003244:	f04f 30ff 	mov.w	r0, #4294967295
 8003248:	e78e      	b.n	8003168 <__sflush_r+0x1c>
 800324a:	4407      	add	r7, r0
 800324c:	eba8 0800 	sub.w	r8, r8, r0
 8003250:	e7e9      	b.n	8003226 <__sflush_r+0xda>
 8003252:	bf00      	nop
 8003254:	20400001 	.word	0x20400001

08003258 <_fflush_r>:
 8003258:	b538      	push	{r3, r4, r5, lr}
 800325a:	690b      	ldr	r3, [r1, #16]
 800325c:	4605      	mov	r5, r0
 800325e:	460c      	mov	r4, r1
 8003260:	b913      	cbnz	r3, 8003268 <_fflush_r+0x10>
 8003262:	2500      	movs	r5, #0
 8003264:	4628      	mov	r0, r5
 8003266:	bd38      	pop	{r3, r4, r5, pc}
 8003268:	b118      	cbz	r0, 8003272 <_fflush_r+0x1a>
 800326a:	6983      	ldr	r3, [r0, #24]
 800326c:	b90b      	cbnz	r3, 8003272 <_fflush_r+0x1a>
 800326e:	f000 f887 	bl	8003380 <__sinit>
 8003272:	4b14      	ldr	r3, [pc, #80]	; (80032c4 <_fflush_r+0x6c>)
 8003274:	429c      	cmp	r4, r3
 8003276:	d11b      	bne.n	80032b0 <_fflush_r+0x58>
 8003278:	686c      	ldr	r4, [r5, #4]
 800327a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800327e:	2b00      	cmp	r3, #0
 8003280:	d0ef      	beq.n	8003262 <_fflush_r+0xa>
 8003282:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003284:	07d0      	lsls	r0, r2, #31
 8003286:	d404      	bmi.n	8003292 <_fflush_r+0x3a>
 8003288:	0599      	lsls	r1, r3, #22
 800328a:	d402      	bmi.n	8003292 <_fflush_r+0x3a>
 800328c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800328e:	f7ff fdbe 	bl	8002e0e <__retarget_lock_acquire_recursive>
 8003292:	4628      	mov	r0, r5
 8003294:	4621      	mov	r1, r4
 8003296:	f7ff ff59 	bl	800314c <__sflush_r>
 800329a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800329c:	07da      	lsls	r2, r3, #31
 800329e:	4605      	mov	r5, r0
 80032a0:	d4e0      	bmi.n	8003264 <_fflush_r+0xc>
 80032a2:	89a3      	ldrh	r3, [r4, #12]
 80032a4:	059b      	lsls	r3, r3, #22
 80032a6:	d4dd      	bmi.n	8003264 <_fflush_r+0xc>
 80032a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80032aa:	f7ff fdb1 	bl	8002e10 <__retarget_lock_release_recursive>
 80032ae:	e7d9      	b.n	8003264 <_fflush_r+0xc>
 80032b0:	4b05      	ldr	r3, [pc, #20]	; (80032c8 <_fflush_r+0x70>)
 80032b2:	429c      	cmp	r4, r3
 80032b4:	d101      	bne.n	80032ba <_fflush_r+0x62>
 80032b6:	68ac      	ldr	r4, [r5, #8]
 80032b8:	e7df      	b.n	800327a <_fflush_r+0x22>
 80032ba:	4b04      	ldr	r3, [pc, #16]	; (80032cc <_fflush_r+0x74>)
 80032bc:	429c      	cmp	r4, r3
 80032be:	bf08      	it	eq
 80032c0:	68ec      	ldreq	r4, [r5, #12]
 80032c2:	e7da      	b.n	800327a <_fflush_r+0x22>
 80032c4:	080038c4 	.word	0x080038c4
 80032c8:	080038e4 	.word	0x080038e4
 80032cc:	080038a4 	.word	0x080038a4

080032d0 <std>:
 80032d0:	2300      	movs	r3, #0
 80032d2:	b510      	push	{r4, lr}
 80032d4:	4604      	mov	r4, r0
 80032d6:	e9c0 3300 	strd	r3, r3, [r0]
 80032da:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80032de:	6083      	str	r3, [r0, #8]
 80032e0:	8181      	strh	r1, [r0, #12]
 80032e2:	6643      	str	r3, [r0, #100]	; 0x64
 80032e4:	81c2      	strh	r2, [r0, #14]
 80032e6:	6183      	str	r3, [r0, #24]
 80032e8:	4619      	mov	r1, r3
 80032ea:	2208      	movs	r2, #8
 80032ec:	305c      	adds	r0, #92	; 0x5c
 80032ee:	f7ff fd9e 	bl	8002e2e <memset>
 80032f2:	4b05      	ldr	r3, [pc, #20]	; (8003308 <std+0x38>)
 80032f4:	6263      	str	r3, [r4, #36]	; 0x24
 80032f6:	4b05      	ldr	r3, [pc, #20]	; (800330c <std+0x3c>)
 80032f8:	62a3      	str	r3, [r4, #40]	; 0x28
 80032fa:	4b05      	ldr	r3, [pc, #20]	; (8003310 <std+0x40>)
 80032fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80032fe:	4b05      	ldr	r3, [pc, #20]	; (8003314 <std+0x44>)
 8003300:	6224      	str	r4, [r4, #32]
 8003302:	6323      	str	r3, [r4, #48]	; 0x30
 8003304:	bd10      	pop	{r4, pc}
 8003306:	bf00      	nop
 8003308:	08003709 	.word	0x08003709
 800330c:	0800372b 	.word	0x0800372b
 8003310:	08003763 	.word	0x08003763
 8003314:	08003787 	.word	0x08003787

08003318 <_cleanup_r>:
 8003318:	4901      	ldr	r1, [pc, #4]	; (8003320 <_cleanup_r+0x8>)
 800331a:	f000 b8af 	b.w	800347c <_fwalk_reent>
 800331e:	bf00      	nop
 8003320:	08003259 	.word	0x08003259

08003324 <__sfmoreglue>:
 8003324:	b570      	push	{r4, r5, r6, lr}
 8003326:	1e4a      	subs	r2, r1, #1
 8003328:	2568      	movs	r5, #104	; 0x68
 800332a:	4355      	muls	r5, r2
 800332c:	460e      	mov	r6, r1
 800332e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003332:	f000 f97f 	bl	8003634 <_malloc_r>
 8003336:	4604      	mov	r4, r0
 8003338:	b140      	cbz	r0, 800334c <__sfmoreglue+0x28>
 800333a:	2100      	movs	r1, #0
 800333c:	e9c0 1600 	strd	r1, r6, [r0]
 8003340:	300c      	adds	r0, #12
 8003342:	60a0      	str	r0, [r4, #8]
 8003344:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003348:	f7ff fd71 	bl	8002e2e <memset>
 800334c:	4620      	mov	r0, r4
 800334e:	bd70      	pop	{r4, r5, r6, pc}

08003350 <__sfp_lock_acquire>:
 8003350:	4801      	ldr	r0, [pc, #4]	; (8003358 <__sfp_lock_acquire+0x8>)
 8003352:	f7ff bd5c 	b.w	8002e0e <__retarget_lock_acquire_recursive>
 8003356:	bf00      	nop
 8003358:	200014d4 	.word	0x200014d4

0800335c <__sfp_lock_release>:
 800335c:	4801      	ldr	r0, [pc, #4]	; (8003364 <__sfp_lock_release+0x8>)
 800335e:	f7ff bd57 	b.w	8002e10 <__retarget_lock_release_recursive>
 8003362:	bf00      	nop
 8003364:	200014d4 	.word	0x200014d4

08003368 <__sinit_lock_acquire>:
 8003368:	4801      	ldr	r0, [pc, #4]	; (8003370 <__sinit_lock_acquire+0x8>)
 800336a:	f7ff bd50 	b.w	8002e0e <__retarget_lock_acquire_recursive>
 800336e:	bf00      	nop
 8003370:	200014cf 	.word	0x200014cf

08003374 <__sinit_lock_release>:
 8003374:	4801      	ldr	r0, [pc, #4]	; (800337c <__sinit_lock_release+0x8>)
 8003376:	f7ff bd4b 	b.w	8002e10 <__retarget_lock_release_recursive>
 800337a:	bf00      	nop
 800337c:	200014cf 	.word	0x200014cf

08003380 <__sinit>:
 8003380:	b510      	push	{r4, lr}
 8003382:	4604      	mov	r4, r0
 8003384:	f7ff fff0 	bl	8003368 <__sinit_lock_acquire>
 8003388:	69a3      	ldr	r3, [r4, #24]
 800338a:	b11b      	cbz	r3, 8003394 <__sinit+0x14>
 800338c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003390:	f7ff bff0 	b.w	8003374 <__sinit_lock_release>
 8003394:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003398:	6523      	str	r3, [r4, #80]	; 0x50
 800339a:	4b13      	ldr	r3, [pc, #76]	; (80033e8 <__sinit+0x68>)
 800339c:	4a13      	ldr	r2, [pc, #76]	; (80033ec <__sinit+0x6c>)
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	62a2      	str	r2, [r4, #40]	; 0x28
 80033a2:	42a3      	cmp	r3, r4
 80033a4:	bf04      	itt	eq
 80033a6:	2301      	moveq	r3, #1
 80033a8:	61a3      	streq	r3, [r4, #24]
 80033aa:	4620      	mov	r0, r4
 80033ac:	f000 f820 	bl	80033f0 <__sfp>
 80033b0:	6060      	str	r0, [r4, #4]
 80033b2:	4620      	mov	r0, r4
 80033b4:	f000 f81c 	bl	80033f0 <__sfp>
 80033b8:	60a0      	str	r0, [r4, #8]
 80033ba:	4620      	mov	r0, r4
 80033bc:	f000 f818 	bl	80033f0 <__sfp>
 80033c0:	2200      	movs	r2, #0
 80033c2:	60e0      	str	r0, [r4, #12]
 80033c4:	2104      	movs	r1, #4
 80033c6:	6860      	ldr	r0, [r4, #4]
 80033c8:	f7ff ff82 	bl	80032d0 <std>
 80033cc:	68a0      	ldr	r0, [r4, #8]
 80033ce:	2201      	movs	r2, #1
 80033d0:	2109      	movs	r1, #9
 80033d2:	f7ff ff7d 	bl	80032d0 <std>
 80033d6:	68e0      	ldr	r0, [r4, #12]
 80033d8:	2202      	movs	r2, #2
 80033da:	2112      	movs	r1, #18
 80033dc:	f7ff ff78 	bl	80032d0 <std>
 80033e0:	2301      	movs	r3, #1
 80033e2:	61a3      	str	r3, [r4, #24]
 80033e4:	e7d2      	b.n	800338c <__sinit+0xc>
 80033e6:	bf00      	nop
 80033e8:	080038a0 	.word	0x080038a0
 80033ec:	08003319 	.word	0x08003319

080033f0 <__sfp>:
 80033f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033f2:	4607      	mov	r7, r0
 80033f4:	f7ff ffac 	bl	8003350 <__sfp_lock_acquire>
 80033f8:	4b1e      	ldr	r3, [pc, #120]	; (8003474 <__sfp+0x84>)
 80033fa:	681e      	ldr	r6, [r3, #0]
 80033fc:	69b3      	ldr	r3, [r6, #24]
 80033fe:	b913      	cbnz	r3, 8003406 <__sfp+0x16>
 8003400:	4630      	mov	r0, r6
 8003402:	f7ff ffbd 	bl	8003380 <__sinit>
 8003406:	3648      	adds	r6, #72	; 0x48
 8003408:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800340c:	3b01      	subs	r3, #1
 800340e:	d503      	bpl.n	8003418 <__sfp+0x28>
 8003410:	6833      	ldr	r3, [r6, #0]
 8003412:	b30b      	cbz	r3, 8003458 <__sfp+0x68>
 8003414:	6836      	ldr	r6, [r6, #0]
 8003416:	e7f7      	b.n	8003408 <__sfp+0x18>
 8003418:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800341c:	b9d5      	cbnz	r5, 8003454 <__sfp+0x64>
 800341e:	4b16      	ldr	r3, [pc, #88]	; (8003478 <__sfp+0x88>)
 8003420:	60e3      	str	r3, [r4, #12]
 8003422:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003426:	6665      	str	r5, [r4, #100]	; 0x64
 8003428:	f7ff fcf0 	bl	8002e0c <__retarget_lock_init_recursive>
 800342c:	f7ff ff96 	bl	800335c <__sfp_lock_release>
 8003430:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003434:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003438:	6025      	str	r5, [r4, #0]
 800343a:	61a5      	str	r5, [r4, #24]
 800343c:	2208      	movs	r2, #8
 800343e:	4629      	mov	r1, r5
 8003440:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003444:	f7ff fcf3 	bl	8002e2e <memset>
 8003448:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800344c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003450:	4620      	mov	r0, r4
 8003452:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003454:	3468      	adds	r4, #104	; 0x68
 8003456:	e7d9      	b.n	800340c <__sfp+0x1c>
 8003458:	2104      	movs	r1, #4
 800345a:	4638      	mov	r0, r7
 800345c:	f7ff ff62 	bl	8003324 <__sfmoreglue>
 8003460:	4604      	mov	r4, r0
 8003462:	6030      	str	r0, [r6, #0]
 8003464:	2800      	cmp	r0, #0
 8003466:	d1d5      	bne.n	8003414 <__sfp+0x24>
 8003468:	f7ff ff78 	bl	800335c <__sfp_lock_release>
 800346c:	230c      	movs	r3, #12
 800346e:	603b      	str	r3, [r7, #0]
 8003470:	e7ee      	b.n	8003450 <__sfp+0x60>
 8003472:	bf00      	nop
 8003474:	080038a0 	.word	0x080038a0
 8003478:	ffff0001 	.word	0xffff0001

0800347c <_fwalk_reent>:
 800347c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003480:	4606      	mov	r6, r0
 8003482:	4688      	mov	r8, r1
 8003484:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003488:	2700      	movs	r7, #0
 800348a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800348e:	f1b9 0901 	subs.w	r9, r9, #1
 8003492:	d505      	bpl.n	80034a0 <_fwalk_reent+0x24>
 8003494:	6824      	ldr	r4, [r4, #0]
 8003496:	2c00      	cmp	r4, #0
 8003498:	d1f7      	bne.n	800348a <_fwalk_reent+0xe>
 800349a:	4638      	mov	r0, r7
 800349c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80034a0:	89ab      	ldrh	r3, [r5, #12]
 80034a2:	2b01      	cmp	r3, #1
 80034a4:	d907      	bls.n	80034b6 <_fwalk_reent+0x3a>
 80034a6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80034aa:	3301      	adds	r3, #1
 80034ac:	d003      	beq.n	80034b6 <_fwalk_reent+0x3a>
 80034ae:	4629      	mov	r1, r5
 80034b0:	4630      	mov	r0, r6
 80034b2:	47c0      	blx	r8
 80034b4:	4307      	orrs	r7, r0
 80034b6:	3568      	adds	r5, #104	; 0x68
 80034b8:	e7e9      	b.n	800348e <_fwalk_reent+0x12>

080034ba <__swhatbuf_r>:
 80034ba:	b570      	push	{r4, r5, r6, lr}
 80034bc:	460e      	mov	r6, r1
 80034be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80034c2:	2900      	cmp	r1, #0
 80034c4:	b096      	sub	sp, #88	; 0x58
 80034c6:	4614      	mov	r4, r2
 80034c8:	461d      	mov	r5, r3
 80034ca:	da07      	bge.n	80034dc <__swhatbuf_r+0x22>
 80034cc:	2300      	movs	r3, #0
 80034ce:	602b      	str	r3, [r5, #0]
 80034d0:	89b3      	ldrh	r3, [r6, #12]
 80034d2:	061a      	lsls	r2, r3, #24
 80034d4:	d410      	bmi.n	80034f8 <__swhatbuf_r+0x3e>
 80034d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80034da:	e00e      	b.n	80034fa <__swhatbuf_r+0x40>
 80034dc:	466a      	mov	r2, sp
 80034de:	f000 f979 	bl	80037d4 <_fstat_r>
 80034e2:	2800      	cmp	r0, #0
 80034e4:	dbf2      	blt.n	80034cc <__swhatbuf_r+0x12>
 80034e6:	9a01      	ldr	r2, [sp, #4]
 80034e8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80034ec:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80034f0:	425a      	negs	r2, r3
 80034f2:	415a      	adcs	r2, r3
 80034f4:	602a      	str	r2, [r5, #0]
 80034f6:	e7ee      	b.n	80034d6 <__swhatbuf_r+0x1c>
 80034f8:	2340      	movs	r3, #64	; 0x40
 80034fa:	2000      	movs	r0, #0
 80034fc:	6023      	str	r3, [r4, #0]
 80034fe:	b016      	add	sp, #88	; 0x58
 8003500:	bd70      	pop	{r4, r5, r6, pc}
	...

08003504 <__smakebuf_r>:
 8003504:	898b      	ldrh	r3, [r1, #12]
 8003506:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003508:	079d      	lsls	r5, r3, #30
 800350a:	4606      	mov	r6, r0
 800350c:	460c      	mov	r4, r1
 800350e:	d507      	bpl.n	8003520 <__smakebuf_r+0x1c>
 8003510:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003514:	6023      	str	r3, [r4, #0]
 8003516:	6123      	str	r3, [r4, #16]
 8003518:	2301      	movs	r3, #1
 800351a:	6163      	str	r3, [r4, #20]
 800351c:	b002      	add	sp, #8
 800351e:	bd70      	pop	{r4, r5, r6, pc}
 8003520:	ab01      	add	r3, sp, #4
 8003522:	466a      	mov	r2, sp
 8003524:	f7ff ffc9 	bl	80034ba <__swhatbuf_r>
 8003528:	9900      	ldr	r1, [sp, #0]
 800352a:	4605      	mov	r5, r0
 800352c:	4630      	mov	r0, r6
 800352e:	f000 f881 	bl	8003634 <_malloc_r>
 8003532:	b948      	cbnz	r0, 8003548 <__smakebuf_r+0x44>
 8003534:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003538:	059a      	lsls	r2, r3, #22
 800353a:	d4ef      	bmi.n	800351c <__smakebuf_r+0x18>
 800353c:	f023 0303 	bic.w	r3, r3, #3
 8003540:	f043 0302 	orr.w	r3, r3, #2
 8003544:	81a3      	strh	r3, [r4, #12]
 8003546:	e7e3      	b.n	8003510 <__smakebuf_r+0xc>
 8003548:	4b0d      	ldr	r3, [pc, #52]	; (8003580 <__smakebuf_r+0x7c>)
 800354a:	62b3      	str	r3, [r6, #40]	; 0x28
 800354c:	89a3      	ldrh	r3, [r4, #12]
 800354e:	6020      	str	r0, [r4, #0]
 8003550:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003554:	81a3      	strh	r3, [r4, #12]
 8003556:	9b00      	ldr	r3, [sp, #0]
 8003558:	6163      	str	r3, [r4, #20]
 800355a:	9b01      	ldr	r3, [sp, #4]
 800355c:	6120      	str	r0, [r4, #16]
 800355e:	b15b      	cbz	r3, 8003578 <__smakebuf_r+0x74>
 8003560:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003564:	4630      	mov	r0, r6
 8003566:	f000 f947 	bl	80037f8 <_isatty_r>
 800356a:	b128      	cbz	r0, 8003578 <__smakebuf_r+0x74>
 800356c:	89a3      	ldrh	r3, [r4, #12]
 800356e:	f023 0303 	bic.w	r3, r3, #3
 8003572:	f043 0301 	orr.w	r3, r3, #1
 8003576:	81a3      	strh	r3, [r4, #12]
 8003578:	89a0      	ldrh	r0, [r4, #12]
 800357a:	4305      	orrs	r5, r0
 800357c:	81a5      	strh	r5, [r4, #12]
 800357e:	e7cd      	b.n	800351c <__smakebuf_r+0x18>
 8003580:	08003319 	.word	0x08003319

08003584 <malloc>:
 8003584:	4b02      	ldr	r3, [pc, #8]	; (8003590 <malloc+0xc>)
 8003586:	4601      	mov	r1, r0
 8003588:	6818      	ldr	r0, [r3, #0]
 800358a:	f000 b853 	b.w	8003634 <_malloc_r>
 800358e:	bf00      	nop
 8003590:	20000014 	.word	0x20000014

08003594 <_free_r>:
 8003594:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003596:	2900      	cmp	r1, #0
 8003598:	d048      	beq.n	800362c <_free_r+0x98>
 800359a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800359e:	9001      	str	r0, [sp, #4]
 80035a0:	2b00      	cmp	r3, #0
 80035a2:	f1a1 0404 	sub.w	r4, r1, #4
 80035a6:	bfb8      	it	lt
 80035a8:	18e4      	addlt	r4, r4, r3
 80035aa:	f000 f947 	bl	800383c <__malloc_lock>
 80035ae:	4a20      	ldr	r2, [pc, #128]	; (8003630 <_free_r+0x9c>)
 80035b0:	9801      	ldr	r0, [sp, #4]
 80035b2:	6813      	ldr	r3, [r2, #0]
 80035b4:	4615      	mov	r5, r2
 80035b6:	b933      	cbnz	r3, 80035c6 <_free_r+0x32>
 80035b8:	6063      	str	r3, [r4, #4]
 80035ba:	6014      	str	r4, [r2, #0]
 80035bc:	b003      	add	sp, #12
 80035be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80035c2:	f000 b941 	b.w	8003848 <__malloc_unlock>
 80035c6:	42a3      	cmp	r3, r4
 80035c8:	d90b      	bls.n	80035e2 <_free_r+0x4e>
 80035ca:	6821      	ldr	r1, [r4, #0]
 80035cc:	1862      	adds	r2, r4, r1
 80035ce:	4293      	cmp	r3, r2
 80035d0:	bf04      	itt	eq
 80035d2:	681a      	ldreq	r2, [r3, #0]
 80035d4:	685b      	ldreq	r3, [r3, #4]
 80035d6:	6063      	str	r3, [r4, #4]
 80035d8:	bf04      	itt	eq
 80035da:	1852      	addeq	r2, r2, r1
 80035dc:	6022      	streq	r2, [r4, #0]
 80035de:	602c      	str	r4, [r5, #0]
 80035e0:	e7ec      	b.n	80035bc <_free_r+0x28>
 80035e2:	461a      	mov	r2, r3
 80035e4:	685b      	ldr	r3, [r3, #4]
 80035e6:	b10b      	cbz	r3, 80035ec <_free_r+0x58>
 80035e8:	42a3      	cmp	r3, r4
 80035ea:	d9fa      	bls.n	80035e2 <_free_r+0x4e>
 80035ec:	6811      	ldr	r1, [r2, #0]
 80035ee:	1855      	adds	r5, r2, r1
 80035f0:	42a5      	cmp	r5, r4
 80035f2:	d10b      	bne.n	800360c <_free_r+0x78>
 80035f4:	6824      	ldr	r4, [r4, #0]
 80035f6:	4421      	add	r1, r4
 80035f8:	1854      	adds	r4, r2, r1
 80035fa:	42a3      	cmp	r3, r4
 80035fc:	6011      	str	r1, [r2, #0]
 80035fe:	d1dd      	bne.n	80035bc <_free_r+0x28>
 8003600:	681c      	ldr	r4, [r3, #0]
 8003602:	685b      	ldr	r3, [r3, #4]
 8003604:	6053      	str	r3, [r2, #4]
 8003606:	4421      	add	r1, r4
 8003608:	6011      	str	r1, [r2, #0]
 800360a:	e7d7      	b.n	80035bc <_free_r+0x28>
 800360c:	d902      	bls.n	8003614 <_free_r+0x80>
 800360e:	230c      	movs	r3, #12
 8003610:	6003      	str	r3, [r0, #0]
 8003612:	e7d3      	b.n	80035bc <_free_r+0x28>
 8003614:	6825      	ldr	r5, [r4, #0]
 8003616:	1961      	adds	r1, r4, r5
 8003618:	428b      	cmp	r3, r1
 800361a:	bf04      	itt	eq
 800361c:	6819      	ldreq	r1, [r3, #0]
 800361e:	685b      	ldreq	r3, [r3, #4]
 8003620:	6063      	str	r3, [r4, #4]
 8003622:	bf04      	itt	eq
 8003624:	1949      	addeq	r1, r1, r5
 8003626:	6021      	streq	r1, [r4, #0]
 8003628:	6054      	str	r4, [r2, #4]
 800362a:	e7c7      	b.n	80035bc <_free_r+0x28>
 800362c:	b003      	add	sp, #12
 800362e:	bd30      	pop	{r4, r5, pc}
 8003630:	200010bc 	.word	0x200010bc

08003634 <_malloc_r>:
 8003634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003636:	1ccd      	adds	r5, r1, #3
 8003638:	f025 0503 	bic.w	r5, r5, #3
 800363c:	3508      	adds	r5, #8
 800363e:	2d0c      	cmp	r5, #12
 8003640:	bf38      	it	cc
 8003642:	250c      	movcc	r5, #12
 8003644:	2d00      	cmp	r5, #0
 8003646:	4606      	mov	r6, r0
 8003648:	db01      	blt.n	800364e <_malloc_r+0x1a>
 800364a:	42a9      	cmp	r1, r5
 800364c:	d903      	bls.n	8003656 <_malloc_r+0x22>
 800364e:	230c      	movs	r3, #12
 8003650:	6033      	str	r3, [r6, #0]
 8003652:	2000      	movs	r0, #0
 8003654:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003656:	f000 f8f1 	bl	800383c <__malloc_lock>
 800365a:	4921      	ldr	r1, [pc, #132]	; (80036e0 <_malloc_r+0xac>)
 800365c:	680a      	ldr	r2, [r1, #0]
 800365e:	4614      	mov	r4, r2
 8003660:	b99c      	cbnz	r4, 800368a <_malloc_r+0x56>
 8003662:	4f20      	ldr	r7, [pc, #128]	; (80036e4 <_malloc_r+0xb0>)
 8003664:	683b      	ldr	r3, [r7, #0]
 8003666:	b923      	cbnz	r3, 8003672 <_malloc_r+0x3e>
 8003668:	4621      	mov	r1, r4
 800366a:	4630      	mov	r0, r6
 800366c:	f000 f83c 	bl	80036e8 <_sbrk_r>
 8003670:	6038      	str	r0, [r7, #0]
 8003672:	4629      	mov	r1, r5
 8003674:	4630      	mov	r0, r6
 8003676:	f000 f837 	bl	80036e8 <_sbrk_r>
 800367a:	1c43      	adds	r3, r0, #1
 800367c:	d123      	bne.n	80036c6 <_malloc_r+0x92>
 800367e:	230c      	movs	r3, #12
 8003680:	6033      	str	r3, [r6, #0]
 8003682:	4630      	mov	r0, r6
 8003684:	f000 f8e0 	bl	8003848 <__malloc_unlock>
 8003688:	e7e3      	b.n	8003652 <_malloc_r+0x1e>
 800368a:	6823      	ldr	r3, [r4, #0]
 800368c:	1b5b      	subs	r3, r3, r5
 800368e:	d417      	bmi.n	80036c0 <_malloc_r+0x8c>
 8003690:	2b0b      	cmp	r3, #11
 8003692:	d903      	bls.n	800369c <_malloc_r+0x68>
 8003694:	6023      	str	r3, [r4, #0]
 8003696:	441c      	add	r4, r3
 8003698:	6025      	str	r5, [r4, #0]
 800369a:	e004      	b.n	80036a6 <_malloc_r+0x72>
 800369c:	6863      	ldr	r3, [r4, #4]
 800369e:	42a2      	cmp	r2, r4
 80036a0:	bf0c      	ite	eq
 80036a2:	600b      	streq	r3, [r1, #0]
 80036a4:	6053      	strne	r3, [r2, #4]
 80036a6:	4630      	mov	r0, r6
 80036a8:	f000 f8ce 	bl	8003848 <__malloc_unlock>
 80036ac:	f104 000b 	add.w	r0, r4, #11
 80036b0:	1d23      	adds	r3, r4, #4
 80036b2:	f020 0007 	bic.w	r0, r0, #7
 80036b6:	1ac2      	subs	r2, r0, r3
 80036b8:	d0cc      	beq.n	8003654 <_malloc_r+0x20>
 80036ba:	1a1b      	subs	r3, r3, r0
 80036bc:	50a3      	str	r3, [r4, r2]
 80036be:	e7c9      	b.n	8003654 <_malloc_r+0x20>
 80036c0:	4622      	mov	r2, r4
 80036c2:	6864      	ldr	r4, [r4, #4]
 80036c4:	e7cc      	b.n	8003660 <_malloc_r+0x2c>
 80036c6:	1cc4      	adds	r4, r0, #3
 80036c8:	f024 0403 	bic.w	r4, r4, #3
 80036cc:	42a0      	cmp	r0, r4
 80036ce:	d0e3      	beq.n	8003698 <_malloc_r+0x64>
 80036d0:	1a21      	subs	r1, r4, r0
 80036d2:	4630      	mov	r0, r6
 80036d4:	f000 f808 	bl	80036e8 <_sbrk_r>
 80036d8:	3001      	adds	r0, #1
 80036da:	d1dd      	bne.n	8003698 <_malloc_r+0x64>
 80036dc:	e7cf      	b.n	800367e <_malloc_r+0x4a>
 80036de:	bf00      	nop
 80036e0:	200010bc 	.word	0x200010bc
 80036e4:	200010c0 	.word	0x200010c0

080036e8 <_sbrk_r>:
 80036e8:	b538      	push	{r3, r4, r5, lr}
 80036ea:	4d06      	ldr	r5, [pc, #24]	; (8003704 <_sbrk_r+0x1c>)
 80036ec:	2300      	movs	r3, #0
 80036ee:	4604      	mov	r4, r0
 80036f0:	4608      	mov	r0, r1
 80036f2:	602b      	str	r3, [r5, #0]
 80036f4:	f7fd fc5c 	bl	8000fb0 <_sbrk>
 80036f8:	1c43      	adds	r3, r0, #1
 80036fa:	d102      	bne.n	8003702 <_sbrk_r+0x1a>
 80036fc:	682b      	ldr	r3, [r5, #0]
 80036fe:	b103      	cbz	r3, 8003702 <_sbrk_r+0x1a>
 8003700:	6023      	str	r3, [r4, #0]
 8003702:	bd38      	pop	{r3, r4, r5, pc}
 8003704:	200014d8 	.word	0x200014d8

08003708 <__sread>:
 8003708:	b510      	push	{r4, lr}
 800370a:	460c      	mov	r4, r1
 800370c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003710:	f000 f8a0 	bl	8003854 <_read_r>
 8003714:	2800      	cmp	r0, #0
 8003716:	bfab      	itete	ge
 8003718:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800371a:	89a3      	ldrhlt	r3, [r4, #12]
 800371c:	181b      	addge	r3, r3, r0
 800371e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003722:	bfac      	ite	ge
 8003724:	6563      	strge	r3, [r4, #84]	; 0x54
 8003726:	81a3      	strhlt	r3, [r4, #12]
 8003728:	bd10      	pop	{r4, pc}

0800372a <__swrite>:
 800372a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800372e:	461f      	mov	r7, r3
 8003730:	898b      	ldrh	r3, [r1, #12]
 8003732:	05db      	lsls	r3, r3, #23
 8003734:	4605      	mov	r5, r0
 8003736:	460c      	mov	r4, r1
 8003738:	4616      	mov	r6, r2
 800373a:	d505      	bpl.n	8003748 <__swrite+0x1e>
 800373c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003740:	2302      	movs	r3, #2
 8003742:	2200      	movs	r2, #0
 8003744:	f000 f868 	bl	8003818 <_lseek_r>
 8003748:	89a3      	ldrh	r3, [r4, #12]
 800374a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800374e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003752:	81a3      	strh	r3, [r4, #12]
 8003754:	4632      	mov	r2, r6
 8003756:	463b      	mov	r3, r7
 8003758:	4628      	mov	r0, r5
 800375a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800375e:	f000 b817 	b.w	8003790 <_write_r>

08003762 <__sseek>:
 8003762:	b510      	push	{r4, lr}
 8003764:	460c      	mov	r4, r1
 8003766:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800376a:	f000 f855 	bl	8003818 <_lseek_r>
 800376e:	1c43      	adds	r3, r0, #1
 8003770:	89a3      	ldrh	r3, [r4, #12]
 8003772:	bf15      	itete	ne
 8003774:	6560      	strne	r0, [r4, #84]	; 0x54
 8003776:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800377a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800377e:	81a3      	strheq	r3, [r4, #12]
 8003780:	bf18      	it	ne
 8003782:	81a3      	strhne	r3, [r4, #12]
 8003784:	bd10      	pop	{r4, pc}

08003786 <__sclose>:
 8003786:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800378a:	f000 b813 	b.w	80037b4 <_close_r>
	...

08003790 <_write_r>:
 8003790:	b538      	push	{r3, r4, r5, lr}
 8003792:	4d07      	ldr	r5, [pc, #28]	; (80037b0 <_write_r+0x20>)
 8003794:	4604      	mov	r4, r0
 8003796:	4608      	mov	r0, r1
 8003798:	4611      	mov	r1, r2
 800379a:	2200      	movs	r2, #0
 800379c:	602a      	str	r2, [r5, #0]
 800379e:	461a      	mov	r2, r3
 80037a0:	f7fd fd04 	bl	80011ac <_write>
 80037a4:	1c43      	adds	r3, r0, #1
 80037a6:	d102      	bne.n	80037ae <_write_r+0x1e>
 80037a8:	682b      	ldr	r3, [r5, #0]
 80037aa:	b103      	cbz	r3, 80037ae <_write_r+0x1e>
 80037ac:	6023      	str	r3, [r4, #0]
 80037ae:	bd38      	pop	{r3, r4, r5, pc}
 80037b0:	200014d8 	.word	0x200014d8

080037b4 <_close_r>:
 80037b4:	b538      	push	{r3, r4, r5, lr}
 80037b6:	4d06      	ldr	r5, [pc, #24]	; (80037d0 <_close_r+0x1c>)
 80037b8:	2300      	movs	r3, #0
 80037ba:	4604      	mov	r4, r0
 80037bc:	4608      	mov	r0, r1
 80037be:	602b      	str	r3, [r5, #0]
 80037c0:	f7fd fbc2 	bl	8000f48 <_close>
 80037c4:	1c43      	adds	r3, r0, #1
 80037c6:	d102      	bne.n	80037ce <_close_r+0x1a>
 80037c8:	682b      	ldr	r3, [r5, #0]
 80037ca:	b103      	cbz	r3, 80037ce <_close_r+0x1a>
 80037cc:	6023      	str	r3, [r4, #0]
 80037ce:	bd38      	pop	{r3, r4, r5, pc}
 80037d0:	200014d8 	.word	0x200014d8

080037d4 <_fstat_r>:
 80037d4:	b538      	push	{r3, r4, r5, lr}
 80037d6:	4d07      	ldr	r5, [pc, #28]	; (80037f4 <_fstat_r+0x20>)
 80037d8:	2300      	movs	r3, #0
 80037da:	4604      	mov	r4, r0
 80037dc:	4608      	mov	r0, r1
 80037de:	4611      	mov	r1, r2
 80037e0:	602b      	str	r3, [r5, #0]
 80037e2:	f7fd fbbd 	bl	8000f60 <_fstat>
 80037e6:	1c43      	adds	r3, r0, #1
 80037e8:	d102      	bne.n	80037f0 <_fstat_r+0x1c>
 80037ea:	682b      	ldr	r3, [r5, #0]
 80037ec:	b103      	cbz	r3, 80037f0 <_fstat_r+0x1c>
 80037ee:	6023      	str	r3, [r4, #0]
 80037f0:	bd38      	pop	{r3, r4, r5, pc}
 80037f2:	bf00      	nop
 80037f4:	200014d8 	.word	0x200014d8

080037f8 <_isatty_r>:
 80037f8:	b538      	push	{r3, r4, r5, lr}
 80037fa:	4d06      	ldr	r5, [pc, #24]	; (8003814 <_isatty_r+0x1c>)
 80037fc:	2300      	movs	r3, #0
 80037fe:	4604      	mov	r4, r0
 8003800:	4608      	mov	r0, r1
 8003802:	602b      	str	r3, [r5, #0]
 8003804:	f7fd fbbc 	bl	8000f80 <_isatty>
 8003808:	1c43      	adds	r3, r0, #1
 800380a:	d102      	bne.n	8003812 <_isatty_r+0x1a>
 800380c:	682b      	ldr	r3, [r5, #0]
 800380e:	b103      	cbz	r3, 8003812 <_isatty_r+0x1a>
 8003810:	6023      	str	r3, [r4, #0]
 8003812:	bd38      	pop	{r3, r4, r5, pc}
 8003814:	200014d8 	.word	0x200014d8

08003818 <_lseek_r>:
 8003818:	b538      	push	{r3, r4, r5, lr}
 800381a:	4d07      	ldr	r5, [pc, #28]	; (8003838 <_lseek_r+0x20>)
 800381c:	4604      	mov	r4, r0
 800381e:	4608      	mov	r0, r1
 8003820:	4611      	mov	r1, r2
 8003822:	2200      	movs	r2, #0
 8003824:	602a      	str	r2, [r5, #0]
 8003826:	461a      	mov	r2, r3
 8003828:	f7fd fbb5 	bl	8000f96 <_lseek>
 800382c:	1c43      	adds	r3, r0, #1
 800382e:	d102      	bne.n	8003836 <_lseek_r+0x1e>
 8003830:	682b      	ldr	r3, [r5, #0]
 8003832:	b103      	cbz	r3, 8003836 <_lseek_r+0x1e>
 8003834:	6023      	str	r3, [r4, #0]
 8003836:	bd38      	pop	{r3, r4, r5, pc}
 8003838:	200014d8 	.word	0x200014d8

0800383c <__malloc_lock>:
 800383c:	4801      	ldr	r0, [pc, #4]	; (8003844 <__malloc_lock+0x8>)
 800383e:	f7ff bae6 	b.w	8002e0e <__retarget_lock_acquire_recursive>
 8003842:	bf00      	nop
 8003844:	200014d0 	.word	0x200014d0

08003848 <__malloc_unlock>:
 8003848:	4801      	ldr	r0, [pc, #4]	; (8003850 <__malloc_unlock+0x8>)
 800384a:	f7ff bae1 	b.w	8002e10 <__retarget_lock_release_recursive>
 800384e:	bf00      	nop
 8003850:	200014d0 	.word	0x200014d0

08003854 <_read_r>:
 8003854:	b538      	push	{r3, r4, r5, lr}
 8003856:	4d07      	ldr	r5, [pc, #28]	; (8003874 <_read_r+0x20>)
 8003858:	4604      	mov	r4, r0
 800385a:	4608      	mov	r0, r1
 800385c:	4611      	mov	r1, r2
 800385e:	2200      	movs	r2, #0
 8003860:	602a      	str	r2, [r5, #0]
 8003862:	461a      	mov	r2, r3
 8003864:	f7fd fc70 	bl	8001148 <_read>
 8003868:	1c43      	adds	r3, r0, #1
 800386a:	d102      	bne.n	8003872 <_read_r+0x1e>
 800386c:	682b      	ldr	r3, [r5, #0]
 800386e:	b103      	cbz	r3, 8003872 <_read_r+0x1e>
 8003870:	6023      	str	r3, [r4, #0]
 8003872:	bd38      	pop	{r3, r4, r5, pc}
 8003874:	200014d8 	.word	0x200014d8

08003878 <_init>:
 8003878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800387a:	bf00      	nop
 800387c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800387e:	bc08      	pop	{r3}
 8003880:	469e      	mov	lr, r3
 8003882:	4770      	bx	lr

08003884 <_fini>:
 8003884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003886:	bf00      	nop
 8003888:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800388a:	bc08      	pop	{r3}
 800388c:	469e      	mov	lr, r3
 800388e:	4770      	bx	lr
